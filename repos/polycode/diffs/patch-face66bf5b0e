diff --git a/.gitignore b/.gitignore
--- a/.gitignore
+++ b/.gitignore
@@ -35,7 +35,6 @@
 *.xcuserdata
 *.xcuserdatad
 *.orig
-*.tag
 UserInterfaceState.*
 Player/Build/Mac OS X/Polycode Player.xcodeproj/project.xcworkspace/xcuserdata/ivansafrin.xcuserdatad/UserInterfaceState.xcuserstate
 
@@ -130,7 +129,6 @@
 
 /Documentation/Lua/xml/*.xml
 
-/Documentation/Lua/site_html
 /Documentation/Lua/html/*
 !/Documentation/Lua/html/css
 !/Documentation/Lua/html/images
diff --git a/Assets/Default asset pack/default.pak b/Assets/Default asset pack/default.pak
index a5bb9c23771eda49c19e6a9f6871fa79819cd803..e120ff117e610c647b27ae7c8a27b2a8c36b3bd9
GIT binary patch
literal 790007
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%0A9Q}@cALEIZs4nyjh&FpX(VA|97#ihr
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

diff --git a/Assets/Default asset pack/default/LightCube.frag b/Assets/Default asset pack/default/LightCube.frag
deleted file mode 100644
--- a/Assets/Default asset pack/default/LightCube.frag	
+++ /dev/null
@@ -1,9 +0,0 @@
-uniform samplerCube lightCube;
-varying vec4 vertexColor;
-varying vec3 normal;
-
-void main()
-{
-    vec4 texColor = textureCube(lightCube, normal);
-    gl_FragColor = texColor*vertexColor;
-}
\ No newline at end of file
diff --git a/Assets/Default asset pack/default/default.mat b/Assets/Default asset pack/default/default.mat
--- a/Assets/Default asset pack/default/default.mat	
+++ b/Assets/Default asset pack/default/default.mat	
@@ -2,45 +2,133 @@
 <polycode>	
 	<shaders>		
 		<shader type="glsl" name="DefaultShader" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/DefaultShader.vert"/>
-			<fp source="default/DefaultShader.frag"/>
+			<vp source="DefaultShader.vert">
+				<params>			
+				</params>				
+			</vp>
+			<fp source="DefaultShader.frag">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>			
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+				</textures>
+			</fp>
 		</shader>	
 		<shader type="glsl" name="DefaultShaderNoTexture" numAreaLights="4" numSpotLights="2">	
-			<vp source="default/DefaultShader.vert"/>
-			<fp source="default/DefaultShaderNoTexture.frag"/>
+			<vp source="DefaultShader.vert">
+				<params>
+				</params>				
+			</vp>
+			<fp source="DefaultShaderNoTexture.frag">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>								
+				</params>				
+			</fp>
 		</shader>
 		<shader type="glsl" name="DefaultShaderShadows" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/DefaultShaderShadows.vert"/>
-			<fp source="default/DefaultShaderShadows.frag"/>
-		</shader>		
+			<vp source="DefaultShaderShadows.vert">
+				<params>			
+				</params>				
+			</vp>
+			<fp source="DefaultShaderShadows.frag">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>							
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+				</textures>				
+			</fp>
+		</shader>
+		
 		<shader type="glsl" name="DefaultShaderVertex" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/DefaultShaderVertex.vert"/>
-			<fp source="default/DefaultShaderVertex.frag"/>
+			<vp source="DefaultShaderVertex.vert">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>				
+				</params>				
+			</vp>
+			<fp source="DefaultShaderVertex.frag">
+				<params>
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+				</textures>
+			</fp>
 		</shader>			
 		<shader type="glsl" name="DefaultShaderVertexNoTexture" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/DefaultShaderVertex.vert"/>
-			<fp source="default/DefaultShaderVertexNoTexture.frag"/>
-		</shader>
+			<vp source="DefaultShaderVertex.vert">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>											
+				</params>				
+			</vp>
+			<fp source="DefaultShaderVertexNoTexture.frag">
+				<params>
+				</params>
+			</fp>
+		</shader>			
+		
 		<shader type="glsl" name="DefaultParticleShader" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/DefaultShader.vert"/>
-			<fp source="default/DefaultParticleShader.frag"/>
+			<vp source="DefaultShader.vert">
+				<params>			
+				</params>				
+			</vp>
+			<fp source="DefaultParticleShader.frag">
+				<params>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>			
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+				</textures>
+			</fp>
 		</shader>															
 		<shader type="glsl" name="Unlit" numAreaLights="0" numSpotLights="0">		
-			<vp source="default/Unlit.vert"/>
-			<fp source="default/Unlit.frag"/>
+			<vp source="Unlit.vert">
+				<params>			
+				</params>				
+			</vp>
+			<fp source="Unlit.frag">
+				<params>			
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+				</textures>
+			</fp>
 		</shader>
-		<shader type="glsl" name="LightCube" numAreaLights="0" numSpotLights="0">		
-			<vp source="default/DefaultShader.vert"/>
-			<fp source="default/LightCube.frag"/>
-		</shader>		
 		<shader type="glsl" name="NorColSpec" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/NormalShader.vert"/>
-			<fp source="default/NorColSpec.frag"/>
-		</shader>
-		<shader type="glsl" name="PassThrough" screen="true">
-			<vp source="default/ScreenShader.vert"/>
-			<fp source="default/PassThrough.frag"/>
-		</shader>	
+			<vp source="NormalShader.vert">
+				<params>			
+				</params>				
+			</vp>
+			<fp source="NorColSpec.frag">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>							
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+					<texture name="normal_map"/>
+					<texture name="specular_map"/>										
+				</textures>
+			</fp>
+		</shader>											
 	</shaders>	
 	<materials>
 		<material name="Default">
diff --git a/Assets/Default asset pack/hdr.pak b/Assets/Default asset pack/hdr.pak
index 3affefbbff827a0790615eee907052690430b95b..3eebfdb459dbb8d1d1110253e942e9a7ec872845
GIT binary patch
literal 4190
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
M<KJ-g+{w3p1JiNW761SM

diff --git a/Assets/Default asset pack/hdr/DefaultShaderNoTextureHDR.frag b/Assets/Default asset pack/hdr/DefaultShaderNoTextureHDR.frag
deleted file mode 100644
--- a/Assets/Default asset pack/hdr/DefaultShaderNoTextureHDR.frag	
+++ /dev/null
@@ -1,120 +0,0 @@
-varying vec3 normal;
-varying vec4 pos;
-varying vec4 vertexColor;
-
-uniform vec4 diffuse_color;
-uniform vec4 specular_color;
-uniform vec4 ambient_color;
-uniform float shininess;
-
-float calculateAttenuation(in int i, in float dist)
-{
-    return(1.0 / (gl_LightSource[i].constantAttenuation +
-                  gl_LightSource[i].linearAttenuation * dist +
-                  gl_LightSource[i].quadraticAttenuation * dist * dist));
-}
-
-void pointLight(in int i, in vec3 normal, in vec4 pos, inout vec4 diffuse, inout vec4 specular) {
-	vec4 color = diffuse_color;
-	vec4 matspec = specular_color;
-	float shininess = shininess;
-	vec4 lightspec = gl_LightSource[i].specular;
-	vec4 lpos = gl_LightSource[i].position;
-	vec4 s = pos-lpos; 
-	vec4 sn = -normalize(s);
-	
-	vec3 light = sn.xyz;
-	vec3 n = normalize(normal);
-	vec3 r = -reflect(light, n);
-	r = normalize(r);
-	vec3 v = -pos.xyz;
-	v = normalize(v);
-
-	float nDotL = dot(n, sn.xyz);
-	if(nDotL > 0.0) {
-		float dist = length(s);    
-		float attenuation = calculateAttenuation(i, dist);
-
-		diffuse  += color * max(0.0, nDotL) * gl_LightSource[i].diffuse * attenuation;
-
-	  if (shininess != 0.0) {
-    	specular += lightspec * matspec * pow(max(0.0,dot(r, v)), shininess) * attenuation;
-	  }
-	}
-}
-
-
-void spotLight(in int i, in vec3 normal, in vec4 pos, inout vec4 diffuse, inout vec4 specular) {
-	vec4 color = diffuse_color;
-	vec4 matspec = specular_color;
-	float shininess = shininess;
-	vec4 lightspec = gl_LightSource[i].specular;
-	vec4 lpos = gl_LightSource[i].position;
-	vec4 s = pos-lpos; 
-	vec4 sn = -normalize(s);
-
-	vec3 light = sn.xyz;
-	vec3 n = normalize(normal);
-	vec3 r = -reflect(light, n);
-	r = normalize(r);
-	vec3 v = -pos.xyz;
-	v = normalize(v);
-
-	float cos_outer_cone_angle = gl_LightSource[i].spotExponent;
-	float cos_cur_angle = dot(-normalize(gl_LightSource[i].spotDirection), sn.xyz);
-	float cos_inner_cone_angle = gl_LightSource[i].spotCosCutoff;
-
-	float cos_inner_minus_outer_angle = cos_inner_cone_angle - cos_outer_cone_angle;
-	float spot = 0.0;
-	spot = clamp((cos_cur_angle - cos_outer_cone_angle) / cos_inner_minus_outer_angle, 0.0, 1.0);
-	       
-	float nDotL = dot(n, sn.xyz);
-	if(nDotL > 0.0) {
-		float dist = length(s);    
-		float attenuation = calculateAttenuation(i, dist);
-		diffuse  += color * max(0.0, nDotL) * gl_LightSource[i].diffuse * attenuation * spot;
-
-	  if (shininess != 0.0) {
-    	specular += lightspec * matspec * pow(max(0.0,dot(r, v)), shininess) * attenuation * spot;
-	  }
-	}
-}
-
-void doLights(in int numLights, in vec3 normal, in vec4 pos, inout vec4 diffuse, inout vec4 specular) {
-	for (int i = 0; i < numLights; i++) {
-		if (gl_LightSource[i].spotCutoff == 180.0) {
-			pointLight(i, normal, pos, diffuse, specular);
-		} else {
-			spotLight(i, normal, pos, diffuse, specular);
-		}
-    }
-}
-
-
-void main()
-{
-	vec4 diffuse_val  = vec4(0.0);
-	vec4 specular_val = vec4(0.0);
-	doLights(6, normal, pos, diffuse_val, specular_val);
-		
-    vec4 color = (diffuse_val  * vertexColor) +
-                 (specular_val * 1.0)+
-                 (ambient_color * vertexColor);
-
-
-    // fog
-	const float LOG2 = 1.442695;
-	float z = gl_FragCoord.z / gl_FragCoord.w;
-	float fogFactor = exp2( -gl_Fog.density * 
-				   gl_Fog.density * 
-				   z * 
-				   z * 
-				   LOG2 );
-
-	fogFactor = clamp(fogFactor, 0.0, 1.0);
-
-	color = mix(gl_Fog.color, color, fogFactor );    
-	color.a = diffuse_color.a;	
-	gl_FragColor = color;
-
-}
diff --git a/Assets/Default asset pack/hdr/HDRBloomH.frag b/Assets/Default asset pack/hdr/HDRBloomH.frag
--- a/Assets/Default asset pack/hdr/HDRBloomH.frag	
+++ b/Assets/Default asset pack/hdr/HDRBloomH.frag	
@@ -1,5 +1,5 @@
 uniform sampler2D screenTexture;
-uniform float blurSize;
+const float blurSize = 1.0/512.0;
  
 void main(void)
 {
diff --git a/Assets/Default asset pack/hdr/HDRBloomV.frag b/Assets/Default asset pack/hdr/HDRBloomV.frag
--- a/Assets/Default asset pack/hdr/HDRBloomV.frag	
+++ b/Assets/Default asset pack/hdr/HDRBloomV.frag	
@@ -1,5 +1,5 @@
 uniform sampler2D screenTexture;
-uniform float blurSize;
+const float blurSize = 1.0/512.0;
  
 void main(void)
 {
diff --git a/Assets/Default asset pack/hdr/hdr.mat b/Assets/Default asset pack/hdr/hdr.mat
--- a/Assets/Default asset pack/hdr/hdr.mat	
+++ b/Assets/Default asset pack/hdr/hdr.mat	
@@ -2,39 +2,63 @@
 <polycode>	
 	<shaders>
 		<shader type="glsl" name="NorColSpecHDR" numAreaLights="4" numSpotLights="2">		
-			<vp source="default/NormalShader.vert"/>
-			<fp source="hdr/NorColSpecHDR.frag"/>
-		</shader>
-		<shader type="glsl" name="DefaultShaderNoTextureHDR" numAreaLights="4" numSpotLights="2">	
-			<vp source="default/DefaultShader.vert"/>
-			<fp source="hdr/DefaultShaderNoTextureHDR.frag"/>
-		</shader>		
+			<vp source="NormalShader.vert">
+				<params>			
+				</params>				
+			</vp>
+			<fp source="NorColSpecHDR.frag">
+				<params>
+					<param type="Number" name="shininess" default="50.0" min="2.0" max="100.0"/>
+					<param type="Color" name="diffuse_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="specular_color" default="1.0 1.0 1.0 1.0"/>
+					<param type="Color" name="ambient_color" auto="true"/>							
+				</params>
+				<textures>
+					<texture name="diffuse"/>
+					<texture name="normal_map"/>
+					<texture name="specular_map"/>										
+				</textures>								
+			</fp>
+		</shader>	
 		<shader type="glsl" name="HDRProcessShader" screen="true">
-			<vp source="default/ScreenShader.vert"/>
-			<fp source="hdr/HDRProcess.frag"/>
+			<vp source="ScreenShader.vert"/>
+			<fp source="HDRProcess.frag">
+				<params>
+					<param name="exposure" type="Number" default="1.0"/>
+				</params>								
+			</fp>
 		</shader>		
 		<shader type="glsl" name="HDRProcessShaderBloom" screen="true">
-			<vp source="default/ScreenShader.vert"/>
-			<fp source="hdr/HDRProcessBloom.frag"/>
+			<vp source="ScreenShader.vert"/>
+			<fp source="HDRProcessBloom.frag">
+				<params>
+					<param name="exposure" type="Number" default="1.0"/>
+					<param name="bloomFactor" type="Number" default="0.5"/>					
+				</params>								
+			</fp>			
 		</shader>		
 		<shader type="glsl" name="HDRBloomH" screen="true">
-			<vp source="default/ScreenShader.vert"/>
-			<fp source="hdr/HDRBloomH.frag"/>
+			<vp source="ScreenShader.vert"/>
+			<fp source="HDRBloomH.frag"/>
 		</shader>
 		<shader type="glsl" name="HDRBloomV" screen="true">
-			<vp source="default/ScreenShader.vert"/>
-			<fp source="hdr/HDRBloomV.frag"/>
+			<vp source="ScreenShader.vert"/>
+			<fp source="HDRBloomV.frag"/>
+		</shader>	
+		<shader type="glsl" name="PassThrough" screen="true">
+			<vp source="ScreenShader.vert"/>
+			<fp source="PassThrough.frag"/>
 		</shader>	
 		<shader type="glsl" name="ExtractBloom" screen="true">
-			<vp source="default/ScreenShader.vert"/>
-			<fp source="hdr/ExtractBloom.frag"/>
+			<vp source="ScreenShader.vert"/>
+			<fp source="ExtractBloom.frag">
+				<params>
+					<param name="brightThreshold" type="Number" default="2.0"/>
+				</params>								
+			</fp>			
 		</shader>							
 	</shaders>
 	<materials>
-		<material name="DefaultHDR" screen="true">
-			<shader name="DefaultShaderNoTextureHDR">
-			</shader>
-		</material>				
 		<material name="HDRProcess" screen="true">
 			<shader name="HDRProcessShader">
 			</shader>
diff --git a/Assets/Templates/C++/Linux/HelloPolycodeApp.cpp b/Assets/Templates/C++/Linux/HelloPolycodeApp.cpp
--- a/Assets/Templates/C++/Linux/HelloPolycodeApp.cpp
+++ b/Assets/Templates/C++/Linux/HelloPolycodeApp.cpp
@@ -17,5 +17,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Assets/Templates/C++/Windows/PolycodeTemplateApp.cpp b/Assets/Templates/C++/Windows/PolycodeTemplateApp.cpp
--- a/Assets/Templates/C++/Windows/PolycodeTemplateApp.cpp
+++ b/Assets/Templates/C++/Windows/PolycodeTemplateApp.cpp
@@ -12,5 +12,5 @@
 }
 
 bool PolycodeTemplateApp::Update() {
-	return core->updateAndRender();
+	return core->Update();
 }
\ No newline at end of file
diff --git a/Assets/Templates/C++/Xcode/PolycodeTemplate/PolycodeTemplateApp.mm b/Assets/Templates/C++/Xcode/PolycodeTemplate/PolycodeTemplateApp.mm
--- a/Assets/Templates/C++/Xcode/PolycodeTemplate/PolycodeTemplateApp.mm
+++ b/Assets/Templates/C++/Xcode/PolycodeTemplate/PolycodeTemplateApp.mm
@@ -18,5 +18,5 @@
 }
 
 bool PolycodeTemplateApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
\ No newline at end of file
diff --git a/Bindings/Contents/LUA/API/class.lua b/Bindings/Contents/LUA/API/class.lua
--- a/Bindings/Contents/LUA/API/class.lua
+++ b/Bindings/Contents/LUA/API/class.lua
@@ -13,16 +13,10 @@
 	return (c.__classname == T.__classname)
 end
 
-function __are_tables_same_c_class(a,b)
-	return __are_same_c_class(a.__ptr,b.__ptr)
-end
-
 function class(name)
 	local cls = {}
 	cls.__classname = name
 	
-	cls.__eq = __are_tables_same_c_class
-
 	cls.__tostring = function(c)
 		return "Class of type "..c.__classname
 	end
diff --git a/Bindings/Contents/LUA/API/defaults.lua b/Bindings/Contents/LUA/API/defaults.lua
--- a/Bindings/Contents/LUA/API/defaults.lua
+++ b/Bindings/Contents/LUA/API/defaults.lua
@@ -89,19 +89,6 @@
 	c:__delete()
 end
 
-__safe_delete_list = {}
-
-function __process_safe_delete()
-	for i=1,count(__safe_delete_list) do
-		__safe_delete_list[i]:__delete()
-	end
-	__safe_delete_list = {}
-end
-
-function safe_delete(c)
-	__safe_delete_list[count(__safe_delete_list)+1] = c
-end
-
 function onKeyDown(key)
 end
 
@@ -117,15 +104,6 @@
 function onMouseMove(x,y)
 end
 
-function onJoystickButtonDown(id, button)
-end
-
-function onJoystickButtonUp(id, button)
-end
-
-function onJoystickAxisMoved(id, axis, value)
-end
-
 function Update(e)
 end
 
diff --git a/Bindings/Scripts/create_lua_library/CppHeaderParser.py b/Bindings/Scripts/create_lua_library/CppHeaderParser.py
--- a/Bindings/Scripts/create_lua_library/CppHeaderParser.py
+++ b/Bindings/Scripts/create_lua_library/CppHeaderParser.py
@@ -1974,11 +1974,7 @@
             num_newlines = len(filter(lambda a: a=="\n", m))
             headerFileStr = headerFileStr.replace(m, "\n" * num_newlines)        
         headerFileStr = re.sub(r'extern[ ]+"[Cc]"[ ]*', "", headerFileStr)
-
-        #Filter out "using" statements since they aren't properly handled currently
-        # TODO: properly handle "using" statements
-        headerFileStr = re.sub(r'using[\t ]+[^\n\r]+', "", headerFileStr)
-
+                
         self.braceDepth = 0
         lex.lex()
         lex.input(headerFileStr)
diff --git a/Bindings/Scripts/create_lua_library/create_lua_library.py b/Bindings/Scripts/create_lua_library/create_lua_library.py
--- a/Bindings/Scripts/create_lua_library/create_lua_library.py
+++ b/Bindings/Scripts/create_lua_library/create_lua_library.py
@@ -18,7 +18,7 @@
 def template_returnPtrLookupArray(prefix, className, ptr):
 	out = ""
 	out += "%sfor i=1,count(%s) do\n" % (prefix, ptr)
-	out += "%s\tlocal __c  = _G[%s](\"__skip_ptr__\")\n" % (prefix, className.replace("*", ""))
+	out += "%s\tlocal __c  = _G[%s](\"__skip_ptr__\")\n" % (prefix, className)
 	out += "%s\t__c.__ptr = %s[i]\n" % (prefix, ptr)
 	out += "%s\t%s[i] = __c\n" % (prefix, ptr)
 	out += "%send\n" % (prefix)
@@ -28,7 +28,7 @@
 # Note we expect className to be a valid string
 def template_returnPtrLookup(prefix, className, ptr):
 	out = ""
-	out += "%slocal __c = _G[%s](\"__skip_ptr__\")\n" % (prefix, className.replace("*", ""))
+	out += "%slocal __c = _G[%s](\"__skip_ptr__\")\n" % (prefix, className)
 	out += "%s__c.__ptr = %s\n" % (prefix, ptr)
 	out += "%sreturn __c\n" % (prefix)
 	return out
@@ -40,7 +40,7 @@
 	return docs.replace("/*", "").replace("*/", "").replace("*", "").replace("\n", "").replace("\r", "").replace("::", ".").replace("\t", "")
 
 def toLuaType(t):
-	return t.replace("void", "nil").replace("int", "Integer").replace("bool", "Boolean").replace("*", "")
+	return t.replace("void", "nil").replace("int", "Integer").replace("bool", "Boolean")
 
 # FIXME: Some "unsigned int *" functions are still being generated on the polycode API?
 def typeFilter(ty):
@@ -122,7 +122,7 @@
 
 	# list of classes that don't get the garbage collection in their meta table
 
-	disable_gc = ["Entity", "ScreenEntity", "ScreenShape", "ScreenMesh", "ScreenLine", "ScreenLabel", "SceneLabel", "SceneMesh", "Screen", "Scene", "Texture", "Image", "Camera", "ScreenParticleEmitter", "SceneParticleEmitter", "Mesh", "Vertex", "Polygon", "Polycode::Polygon", "Material", "ScenePrimitive", "SceneLine", "SceneLight", "SceneSound", "ScreenImage", "SceneEntity", "ScreenEntityInstance"]
+	disable_gc = ["Entity", "ScreenEntity", "ScreenShape", "ScreenMesh", "ScreenLabel", "SceneLabel", "SceneMesh", "Screen", "Scene", "Texture", "Image", "Camera", "ScreenParticleEmitter", "SceneParticleEmitter", "Mesh", "Vertex", "Polygon", "Polycode::Polygon", "Material", "ScenePrimitive", "SceneLine", "SceneLight", "SceneSound", "ScreenImage", "SceneEntity"]
 
 	# Special case: If we are building the Polycode library itself, inject the LuaEventHandler class.
 	# Note: so that event callbacks can work, any object inheriting from EventHandler will secretly
@@ -148,7 +148,7 @@
 	# Iterate, process each input file
 	for fileName in filteredFiles:
 		# "Package owned" classes that ship with Polycode
-		inheritInModule = ["PhysicsSceneEntity", "CollisionScene", "CollisionSceneEntity", "UIElement", "UIWindow", "UIMenuItem"]
+		inheritInModule = ["PhysicsSceneEntity", "CollisionScene", "CollisionSceneEntity", "UIElement", "UIWindow"]
 		
 		# A file or comma-separated list of files can be given to specify classes which are "package owned"
 		# and should not be inherited out of Polycode/. The files should contain one class name per line,
@@ -209,7 +209,7 @@
 					luaDocOut += "\t\t<desc><![CDATA[%s]]></desc>\n" % (cleanDocs(c['doxygen']))
 
 				parsed_methods = [] # Def: List of discovered methods
-				ignore_methods = ["readByte32", "readByte16", "getCustomEntitiesByType", "Core", "Renderer", "Shader", "Texture", "handleEvent", "secondaryHandler", "getSTLString", "readInt"]
+				ignore_methods = ["readByte32", "readByte16", "getCustomEntitiesByType", "Core", "Renderer", "Shader", "Texture", "handleEvent", "secondaryHandler", "getSTLString"]
 				luaClassBindingOut += "\n\n"
 
 				luaDocOut += "\t\t<static_members>\n"
@@ -236,7 +236,7 @@
 							luaDocOut += "\t\t\t</static_member>\n"
 					else: # FIXME: Nonstatic method ? variable ?? found.
 						#there are some bugs in the class parser that cause it to return junk
-						if pp["type"].find("vector") == -1 and pp["name"] != "setScale" and pp["name"] != "setPosition" and pp["name"] != "BUFFER_CACHE_PRECISION" and not pp["name"].isdigit():
+						if pp["type"].find("*") == -1 and pp["type"].find("vector") == -1 and pp["name"] != "setScale" and pp["name"] != "setPosition" and pp["name"] != "BUFFER_CACHE_PRECISION" and not pp["name"].isdigit():
 							classProperties.append(pp)
 
 				luaDocOut += "\t\t</static_members>\n"
@@ -312,12 +312,8 @@
 							if pp["type"] == "Number" or  pp["type"] == "String" or pp["type"] == "int" or pp["type"] == "bool" or pp["type"] == "PolyKEY":
 								wrappersHeaderOut += "\t%s(L, inst->%s%s);\n" % (outfunc, pp["name"], retFunc)
 							else:
-								if pp["type"].find("*") != -1:
-									wrappersHeaderOut += "\tPolyBase **userdataPtr = (PolyBase**)lua_newuserdata(L, sizeof(PolyBase*));\n"
-									wrappersHeaderOut += "\t*userdataPtr = (PolyBase*)inst->%s%s;\n" % (pp["name"], retFunc)
-								else:
-									wrappersHeaderOut += "\tPolyBase **userdataPtr = (PolyBase**)lua_newuserdata(L, sizeof(PolyBase*));\n"
-									wrappersHeaderOut += "\t*userdataPtr = (PolyBase*)&inst->%s%s;\n" % (pp["name"], retFunc)
+								wrappersHeaderOut += "\tPolyBase **userdataPtr = (PolyBase**)lua_newuserdata(L, sizeof(PolyBase*));\n"
+								wrappersHeaderOut += "\t*userdataPtr = (PolyBase*)&inst->%s%s;\n" % (pp["name"], retFunc)
 							wrappersHeaderOut += "\treturn 1;\n"
 							wrappersHeaderOut += "}\n\n"
 						
diff --git a/CMake/ExternalPNG.cmake b/CMake/ExternalPNG.cmake
--- a/CMake/ExternalPNG.cmake
+++ b/CMake/ExternalPNG.cmake
@@ -17,8 +17,8 @@
     PREFIX ${libpng_PREFIX}
 
     DOWNLOAD_DIR ${POLYCODE_DEPS_DOWNLOAD_DIR}
-    URL http://zlib.net/zlib-1.2.8.tar.gz
-    URL_MD5 44d667c142d7cda120332623eab69f40
+    URL http://zlib.net/zlib-1.2.7.tar.gz
+    URL_MD5 60df6a37c56e7c1366cca812414f7b85
 
     PATCH_COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PolycodeDependencies_SOURCE_DIR}/../CMake/zlib.cmake <SOURCE_DIR>/CMakeLists.txt && ${CMAKE_COMMAND} -E remove <SOURCE_DIR>/zconf.h
 
diff --git a/CMake/PolycodeDependencies.cmake b/CMake/PolycodeDependencies.cmake
deleted file mode 100644
--- a/CMake/PolycodeDependencies.cmake
+++ /dev/null
@@ -1,100 +0,0 @@
-# Find the required dependency libraries to use the polycode static library.
-#
-# Required variables by this cmake file:
-# ${POLYCODE_CMAKE_DIR} points to the directory with all of polycode's cmake scripts(including this one)
-# ${POLYCODE_RELEASE_DIR} points to the directory where the binares are produced to(Polycode/Release/${SYSTEM_NAME}) by default
-#
-# Sets ${POLYCODE_DEPENDENCY_LIBS} to something you can pass to TARGET_LINK_LIBRARIES
-# It will use the "debug" and "optimized" cmake keywords, so it will not work for anything other than TARGET_LINK_LIBRARIES
-#
-#
-# Uses INCLUDE_DIRECTORIES AND LINK_DIRECTORIES to add the necessary directories for the given links/includes to work.
-
-
-INCLUDE(${POLYCODE_CMAKE_DIR}/PolycodeIncludes.cmake)
-INCLUDE(${POLYCODE_CMAKE_DIR}/FindBullet.cmake)
-
-
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/Include
-		${POLYCODE_RELEASE_DIR}/Framework/Core/include
-        ${POLYCODE_RELEASE_DIR}/Framework/Modules/include
-        ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include
-        ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include/AL
-        ${PolycodeIDE_SOURCE_DIR}/include)
-
-LINK_DIRECTORIES(${POLYCODE_RELEASE_DIR}/Framework/Core/lib
-        ${POLYCODE_RELEASE_DIR}/Framework/Modules/lib
-        ${POLYCODE_RELEASE_DIR}/Framework/Bindings/Lua/Core/lib
-		${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/lib)
-
-
-IF(MSVC OR MINGW)
-	SET(POLYCODE_DEPENDENCY_LIBS 
-        PolycodeLua_d
-        Polycore_d
-        ${ZLIB_LIBRARIES}
-        ${LUA_LIBRARY}
-        ${OPENGL_LIBRARIES}
-        ${OPENAL_LIBRARY}
-        ${PNG_LIBRARIES}
-        ${FREETYPE_LIBRARIES}
-        ${PHYSFS_LIBRARY}
-        ${OGG_LIBRARY}
-        ${VORBIS_LIBRARY}
-        ${VORBISFILE_LIBRARY}
-        opengl32
-        glu32
-        winmm
-        ws2_32
-		Polycode2DPhysics
-		Polycode3DPhysics
-		PolycodeUI
-		optimized ${BOX2D_RELEASE_LIBRARY}
-		debug ${BOX2D_DEBUG_LIBRARY}
-        optimized ${LIBBULLETMULTITHREADED}
-        optimized ${LIBBULLETSOFTBODY}
-        optimized ${LIBBULLETDYNAMICS}
-        optimized ${LIBBULLETCOLLISION}
-        optimized ${LIBBULLETMATH}
-        debug ${LIBBULLETMULTITHREADED_DEBUG}
-        debug ${LIBBULLETSOFTBODY_DEBUG}
-        debug ${LIBBULLETDYNAMICS_DEBUG}
-        debug ${LIBBULLETCOLLISION_DEBUG}
-        debug ${LIBBULLETMATH_DEBUG})
-ELSEIF(APPLE)
-	# TODO: Add apple support
-ELSE(MSVC OR MINGW)
-	SET(POLYCODE_DEPENDENCY_LIBS 
-		rt
-		pthread
-		PolycodeLua_d
-		PolycodeUI_d
-		Polycore_d
-		${LUA_LIBRARY}
-		${FREETYPE_LIBRARIES}
-		${VORBISFILE_LIBRARY}
-		${VORBIS_LIBRARY}
-		${OGG_LIBRARY}
-		${OPENAL_LIBRARY}
-		${PHYSFS_LIBRARY}
-		${PNG_LIBRARIES}
-		${ZLIB_LIBRARY}
-		${OPENGL_LIBRARIES}
-		${SDL_LIBRARY}
-		dl
-		Polycode2DPhysics_d
-		Polycode3DPhysics_d
-		${BOX2D_RELEASE_LIBRARY}
-
-		optimized ${LIBBULLETMULTITHREADED}
-		optimized ${LIBBULLETSOFTBODY}
-		optimized ${LIBBULLETDYNAMICS}
-		optimized ${LIBBULLETCOLLISION}
-		optimized ${LIBBULLETMATH}
-
-		debug ${LIBBULLETMULTITHREADED_DEBUG}
-		debug ${LIBBULLETSOFTBODY_DEBUG}
-		debug ${LIBBULLETDYNAMICS_DEBUG}
-		debug ${LIBBULLETCOLLISION_DEBUG}
-		debug ${LIBBULLETMATH_DEBUG})
-ENDIF(MSVC OR MINGW)
diff --git a/CMake/libogg.cmake b/CMake/libogg.cmake
--- a/CMake/libogg.cmake
+++ b/CMake/libogg.cmake
@@ -23,19 +23,6 @@
     LIST(APPEND libogg_SRCS win32/ogg.def)
 ENDIF(MSVC)
 
-IF("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
-	# libogg expects configure to be called on linux to
-	# generate config_types.h
-    LIST(APPEND libogg_HDRS include/ogg/config_types.h)
-
-	add_custom_command(OUTPUT include/ogg/config_types.h
-						COMMAND ./configure
-						DEPENDS include/ogg/ogg.h # Hopefully if the libogg version changes, so does this file
-												  # so configure_types.h will be regenerated.
-						WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-					   )
-ENDIF()
-
 #ADD_LIBRARY(libogg_dynamic SHARED ${libogg_SRCS} ${libogg_HDRS})
 ADD_LIBRARY(libogg ${libogg_SRCS} ${libogg_HDRS})
 
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -48,14 +48,6 @@
     ${POLYCODE_RELEASE_DIR}/Framework/Modules/Dependencies
     ${POLYCODE_RELEASE_DIR}/Framework/Tools/Dependencies)
 
-IF(POLYCODE_DEBUG_SYMBOLS)
-IF(CMAKE_COMPILER_IS_GNUCC)
-    ADD_DEFINITIONS(-g)
-ELSE(CMAKE_COMPILER_IS_GNUCC)
-MESSAGE("Warning: POLYCODE_DEBUG_SYMBOLS was specified, but this only works with GCC")
-ENDIF(CMAKE_COMPILER_IS_GNUCC)
-ENDIF(POLYCODE_DEBUG_SYMBOLS)
-
 MESSAGE(DEBUG " CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}")
 
 # If the following large ugly mess is not present, failures can occur with -G "Unix Makefiles".
@@ -72,8 +64,10 @@
 SET(PNG_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include)
 SET(PHYSFS_LIBRARY physfs)
 SET(PHYSFS_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include)
-SET(OPENAL_LIBRARY OpenAL32)
-SET(OPENAL_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include/AL)
+IF (POLYCODE_USE_OPENAL)
+	SET(OPENAL_LIBRARY OpenAL32)
+	SET(OPENAL_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include/AL)
+ENDIF(POLYCODE_USE_OPENAL)
 SET(FREETYPE_LIBRARY freetype)
 SET(FREETYPE_INCLUDE_DIRS ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include)
 SET(VORBIS_LIBRARY libvorbis)
@@ -86,7 +80,9 @@
 SET(BOX2D_RELEASE_LIBRARY Box2D)
 SET(BOX2D_DEBUG_LIBRARY Box2D)
 SET(BOX2D_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Modules/Dependencies/include)
+IF (POLYCODE_BUILD_TOOLS)
 SET(ASSIMP_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/include)
+ENDIF()
 SET(BULLET_INCLUDE_DIR ${POLYCODE_RELEASE_DIR}/Framework/Modules/Dependencies/include/bullet)
 SET(LIBBULLETCOLLISION BulletCollision)
 SET(LIBBULLETDYNAMICS BulletDynamics)
@@ -100,6 +96,14 @@
 SET(LIBBULLETSOFTBODY_DEBUG BulletSoftBody)
 ENDIF()
 
+IF(POLYCODE_DEBUG_SYMBOLS)
+IF(CMAKE_COMPILER_IS_GNUCC)
+    ADD_DEFINITIONS(-g)
+ELSE(CMAKE_COMPILER_IS_GNUCC)
+MESSAGE("Warning: POLYCODE_DEBUG_SYMBOLS was specified, but this only works with GCC")
+ENDIF(CMAKE_COMPILER_IS_GNUCC)
+ENDIF(POLYCODE_DEBUG_SYMBOLS)
+
 # Process subdirectories
 ADD_SUBDIRECTORY(Core/Contents)
 ADD_SUBDIRECTORY("Assets/Default asset pack")
diff --git a/Core/Contents/CMakeLists.txt b/Core/Contents/CMakeLists.txt
--- a/Core/Contents/CMakeLists.txt
+++ b/Core/Contents/CMakeLists.txt
@@ -225,8 +225,6 @@
 	)
 ENDIF(MINGW)
 
-INCLUDE(FindPkgConfig)
-
 IF(MSVC OR MINGW)
     SET(polycore_SRCS ${polycore_SRCS} PolycodeView/MSVC/PolycodeView.cpp Source/PolyWinCore.cpp)
     SET(polycore_HDRS ${polycore_HDRS} PolycodeView/MSVC/PolycodeView.h Include/PolyWinCore.h)
@@ -258,21 +256,6 @@
 ADD_LIBRARY(Polycore ${polycore_SRCS} ${polycore_HDRS})
 #ENDIF(POLYCODE_BUILD_STATIC)
 
-# On linux, check for x11
-IF("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
-  # TODO: Allow to set X11 path manually instead of using pkg-config
-  IF(NOT ${PKG_CONFIG_FOUND})
-    message( FATAL_ERROR "You seem to be using Linux, but pkg-config is not installed. Please install pkg-config." )
-  endif()
-  PKG_CHECK_MODULES(X11 x11)
-  IF(${X11_FOUND})
-    INCLUDE_DIRECTORIES(${X11_INCLUDE_DIRS})
-    SET_TARGET_PROPERTIES(Polycore PROPERTIES COMPILE_FLAGS "-DUSE_X11")
-  ELSE()
-    message( FATAL_ERROR "You seem to be using Linux, but X11 is not installed. Please install X11." )
-  ENDIF()
-ENDIF()
-
 IF(POLYCODE_INSTALL_FRAMEWORK)
     # install headers
     INSTALL(FILES ${polycore_HDRS} 
diff --git a/Core/Contents/Include/OSBasics.h b/Core/Contents/Include/OSBasics.h
--- a/Core/Contents/Include/OSBasics.h
+++ b/Core/Contents/Include/OSBasics.h
@@ -72,11 +72,9 @@
 	
 		static std::vector<OSFileEntry> parsePhysFSFolder(const Polycode::String& pathString, bool showHidden);
 		static std::vector<OSFileEntry> parseFolder(const Polycode::String& pathString, bool showHidden);
-		static bool fileExists(const Polycode::String& pathString);
 		static bool isFolder(const Polycode::String& pathString);
 		static void createFolder(const Polycode::String& pathString);
 		static void removeItem(const Polycode::String& pathString);
-		static time_t getFileTime(const Polycode::String& pathString);
 		
 	private:
 	
diff --git a/Core/Contents/Include/PolyCamera.h b/Core/Contents/Include/PolyCamera.h
--- a/Core/Contents/Include/PolyCamera.h
+++ b/Core/Contents/Include/PolyCamera.h
@@ -121,18 +121,14 @@
 			* @return Current exposure value.
 			*/									
 			Number getExposureLevel();
-
+			
+			void createPostFilter(Material *shaderMaterial);
+			
 			/**
 			* Sets the post-processing shader for the camera.
-			* @param shaderMaterial Post processing shader material.
-			*/
-			void setPostFilter(Material *shaderMaterial);
-			
-			/**
-			* Sets the post-processing shader for the camera by name. The material needs have been added as a resource.
-			* @param materialName The material name of the post-processing filter.
+			* @param shaderName The shader name of the post-processing filter.
 			*/												
-			void setPostFilterByName(const String& shaderName);
+			void setPostFilter(const String& shaderName);
 			
 			/**
 			* Removes the currently assigned post filter.
diff --git a/Core/Contents/Include/PolyCocoaCore.h b/Core/Contents/Include/PolyCocoaCore.h
--- a/Core/Contents/Include/PolyCocoaCore.h
+++ b/Core/Contents/Include/PolyCocoaCore.h
@@ -107,10 +107,7 @@
 		
 		void enableMouse(bool newval);
 		unsigned int getTicks();		
-		bool Update();
-		
-		void Render();
-								
+		bool Update();		
 		void setVideoMode(int xRes, int yRes, bool fullScreen, bool vSync, int aaLevel, int anisotropyLevel);		
 		void resizeTo(int xRes, int yRes);
 		void createThread(Threaded *target);		
diff --git a/Core/Contents/Include/PolyColor.h b/Core/Contents/Include/PolyColor.h
--- a/Core/Contents/Include/PolyColor.h
+++ b/Core/Contents/Include/PolyColor.h
@@ -262,8 +262,7 @@
 
 			const static int BLEND_NORMAL = 0;
 			const static int BLEND_REPLACE_COLOR = 1;
-			const static int BLEND_ADDITIVE = 2;
-									
+						
 		protected:
 	
 	};
diff --git a/Core/Contents/Include/PolyCore.h b/Core/Contents/Include/PolyCore.h
--- a/Core/Contents/Include/PolyCore.h
+++ b/Core/Contents/Include/PolyCore.h
@@ -89,24 +89,12 @@
 		
 		virtual bool Update() = 0;
 
-		virtual void Render() = 0;
-		
-		bool updateAndRender();
 		
 		/**
 		* Show or hide cursor.
 		* @param newval True to show mouse, false to hide it.
 		*/		
 		virtual void enableMouse(bool newval);
-
-		/**
-		* Capture the mouse.
-		*
-		* The mouse will be unable to exit the polycode screen.
-		* 
-		* @param newval True to capture the mouse, false to uncapture it.
-		*/		
-		virtual void captureMouse(bool newval);
 		
 		/**
 		* Sets the cursor the application is using.
@@ -389,7 +377,6 @@
 		unsigned int elapsed;
 		
 		bool mouseEnabled;
-		bool mouseCaptured;
 		
 		unsigned int lastSleepFrameTicks;
 		
diff --git a/Core/Contents/Include/PolyCoreInput.h b/Core/Contents/Include/PolyCoreInput.h
--- a/Core/Contents/Include/PolyCoreInput.h
+++ b/Core/Contents/Include/PolyCoreInput.h
@@ -98,22 +98,6 @@
 		bool getKeyState(PolyKEY keyCode);		
 		
 		/** 
-		* Returns the state of the specified joystick button for the specified joystick index. If the joystick index is invalid, returns false
-		* @param joystickIndex Joystick index to check the state on
-		* @param button Joystick button to check the stat of.
-		* @return True if the button is pressed, false otherwise or if joystick index is invalid.
-		*/						
-		bool getJoystickButtonState(int joystickIndex, int button);
-		
-		/** 
-		* Returns the value of the specified joystick axis for the specified joystick index. If the joystick index is invalid, returns 0
-		* @param joystickIndex Joystick index to check the state on
-		* @param axis Joystick axis to get the value of.
-		* @return Value of the joystick axis (0 if joystickIndex is invalid)
-		*/						
-		Number getJoystickAxisValue(int joystickIndex, int axis);
-		
-		/** 
 		* Returns the current mouse position as delta from last frame.
 		* @return Mouse position as a 2d vector delta from last frame.
 		*/		
diff --git a/Core/Contents/Include/PolyCoreServices.h b/Core/Contents/Include/PolyCoreServices.h
--- a/Core/Contents/Include/PolyCoreServices.h
+++ b/Core/Contents/Include/PolyCoreServices.h
@@ -41,7 +41,6 @@
 	class SoundManager;
 	class Core;
 	class CoreMutex;
-	class Logger;
 	
 	/**
 	* Global services singleton. CoreServices instantiates and provides global Singleton access to all of the main manager classes in Polycode as well as the Renderer and Config classes.
@@ -65,8 +64,7 @@
 			*/			
 			Renderer *getRenderer();
 			
-			void Update(int elapsed);
-			void Render();
+			void Update(int elapsed, bool updateRenderer);
 			
 			void setCore(Core *core);
 		
@@ -148,16 +146,10 @@
 			FontManager *getFontManager();
 
 			/**
-			* Returns the logger. It can log messages and broadcast them to listeners.
-			*/
-			Logger *getLogger();
-
-			/**
 			* Returns the config. The config loads and saves data to disk.
 			* @return Config manager.
 			* @see Config
-			*/														
-						
+			*/																													
 			Config *getConfig();
 			
 			/**
@@ -188,7 +180,6 @@
 			MaterialManager *materialManager;
 			ScreenManager *screenManager;		
 			SceneManager *sceneManager;
-			Logger *logger;
 			TimerManager *timerManager;
 			TweenManager *tweenManager;
 			ResourceManager *resourceManager;
diff --git a/Core/Contents/Include/PolyCubemap.h b/Core/Contents/Include/PolyCubemap.h
--- a/Core/Contents/Include/PolyCubemap.h
+++ b/Core/Contents/Include/PolyCubemap.h
@@ -31,24 +31,9 @@
 	class _PolyExport Cubemap : public Resource {
 		public:
 			Cubemap(Texture *t0, Texture *t1, Texture *t2, Texture *t3, Texture *t4, Texture *t5);
-			
-			Texture *getTexture(int index);			
-			void setTexture(Texture *texture, int index);
-			
-			virtual void recreateFromTextures(){}
-			
 			virtual ~Cubemap();	
-			
-			static const int CUBEMAP_XPOS = 0;
-			static const int CUBEMAP_XNEG = 1;
-			static const int CUBEMAP_YPOS = 2;
-			static const int CUBEMAP_YNEG = 3;			
-			static const int CUBEMAP_ZPOS = 4;
-			static const int CUBEMAP_ZNEG = 5;
-																	
-		protected:
 		
-			std::vector<Texture*> textures;
+		protected:		
 		
 	};
 }
diff --git a/Core/Contents/Include/PolyEntity.h b/Core/Contents/Include/PolyEntity.h
--- a/Core/Contents/Include/PolyEntity.h
+++ b/Core/Contents/Include/PolyEntity.h
@@ -86,12 +86,12 @@
  			* @param ignoreEditorOnly If true, ignore all child entities where editorOnly is set to true (will still clone the entity you call Clone() on even if its editorOnly flag is set to true.
  			* @return The clone of the entity.
  			*/
-			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
+			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
 
 			/**
  			* This method must be implemented by all subvlasses implementing Clone.
  			*/
-			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 		
 		
 			// ----------------------------------------------------------------------------------------------------------------
@@ -603,7 +603,7 @@
 			* Returns the user data pointer.
 			* @return User data pointer
 			*/			
-			void *getUserData() const;
+			void *getUserData();
 				
 			/**
 			* Sets the entity's blending mode.
@@ -612,8 +612,8 @@
 			*/
 			void setBlendingMode(int newBlendingMode);
 			
-			Entity *getEntityById(String id, bool recursive) const;
-			std::vector<Entity*> getEntitiesByTag(String tag, bool recursive) const;
+			Entity *getEntityById(String id, bool recursive);
+			std::vector<Entity*> getEntitiesByTag(String tag, bool recursive);
 						
 			Vector3 getChildCenter() const;
 			
@@ -662,7 +662,7 @@
 			//@}		
 		protected:
 		
-			std::vector<String> *tags;
+			std::vector<String> tags;
 		
 			void checkTransformSetters();
 		
@@ -676,9 +676,13 @@
 			Vector3 _position;
 			Vector3 _scale;		
 			Rotation _rotation;
-	
+			
+			Quaternion qYaw;
+			Quaternion qPitch;
+			Quaternion qRoll;			
 			Quaternion rotationQuat;
 			
+			
 			bool lockMatrix;
 			bool matrixDirty;
 			Matrix4 transformMatrix;		
diff --git a/Core/Contents/Include/PolyEvent.h b/Core/Contents/Include/PolyEvent.h
--- a/Core/Contents/Include/PolyEvent.h
+++ b/Core/Contents/Include/PolyEvent.h
@@ -81,12 +81,7 @@
 			static const int COMPLETE_EVENT = EVENTBASE_EVENT+0;
 			static const int CHANGE_EVENT = EVENTBASE_EVENT+1;
 			static const int CANCEL_EVENT = EVENTBASE_EVENT+2;
-			static const int NOTIFY_EVENT = EVENTBASE_EVENT+3;
-			static const int FIRE_EVENT = EVENTBASE_EVENT+4;
-			static const int RESOURCE_RELOAD_EVENT = EVENTBASE_EVENT+5;
-			static const int SELECT_EVENT = EVENTBASE_EVENT+6;
-			static const int REMOVE_EVENT = EVENTBASE_EVENT+7;
-															
+			
 			static const int EVENTBASE_NONPOLYCODE = 0x10000;
 		
 			bool deleteOnDispatch;
diff --git a/Core/Contents/Include/PolyFixedShader.h b/Core/Contents/Include/PolyFixedShader.h
--- a/Core/Contents/Include/PolyFixedShader.h
+++ b/Core/Contents/Include/PolyFixedShader.h
@@ -47,6 +47,7 @@
 			
 			void addTexture(const String& name, Texture *texture);
 			void addCubemap(const String& name, Cubemap *cubemap);
+			void addParam(const String& type, const String& name, const String& value);
 			
 			Texture *getDiffuseTexture();
 			
diff --git a/Core/Contents/Include/PolyGLCubemap.h b/Core/Contents/Include/PolyGLCubemap.h
--- a/Core/Contents/Include/PolyGLCubemap.h
+++ b/Core/Contents/Include/PolyGLCubemap.h
@@ -25,8 +25,8 @@
 #include "PolyGlobals.h"
 #include "PolyCubemap.h"
 
-#ifdef _WINDOWS
-#include <windows.h>
+#ifdef _WINDOWS
+#include <windows.h>
 #endif
 
 #if defined(__APPLE__) && defined(__MACH__)
@@ -48,13 +48,10 @@
 		OpenGLCubemap(Texture *t0, Texture *t1, Texture *t2, Texture *t3, Texture *t4, Texture *t5);
 		virtual ~OpenGLCubemap();
 		
-		void recreateFromTextures();
-		
 		GLuint getTextureID();		
 			
 	protected:
-	
-		bool glCubemapLoaded;
+		
 		int filteringMode;
 		GLuint textureID;
 	};
diff --git a/Core/Contents/Include/PolyGLHeaders.h b/Core/Contents/Include/PolyGLHeaders.h
--- a/Core/Contents/Include/PolyGLHeaders.h
+++ b/Core/Contents/Include/PolyGLHeaders.h
@@ -98,8 +98,6 @@
 typedef GLEEPFNGLUNIFORM2FPROC PFNGLUNIFORM2FPROC;
 typedef GLEEPFNWGLSWAPINTERVALEXTPROC PFNWGLSWAPINTERVALEXTPROC;
 typedef GLEEPFNWGLGETSWAPINTERVALEXTPROC PFNWGLGETSWAPINTERVALEXTPROC;
-typedef GLEEPFNGLGETPROGRAMIVPROC PFNGLGETPROGRAMIVPROC;
-typedef GLEEPFNGLGETACTIVEUNIFORMPROC PFNGLGETACTIVEUNIFORMPROC;
 #endif
 
 #if defined(__APPLE__) && defined(__MACH__)
diff --git a/Core/Contents/Include/PolyGLRenderer.h b/Core/Contents/Include/PolyGLRenderer.h
--- a/Core/Contents/Include/PolyGLRenderer.h
+++ b/Core/Contents/Include/PolyGLRenderer.h
@@ -100,8 +100,6 @@
 		
 		OpenGLRenderer();
 		virtual ~OpenGLRenderer();
-
-		bool Init();
 		
 		void Resize(int xRes, int yRes);
 		void BeginRender();
@@ -118,7 +116,6 @@
 		void createVertexBufferForMesh(Mesh *mesh);
 		void drawVertexBuffer(VertexBuffer *buffer, bool enableColorBuffer);						
 		void bindFrameBufferTexture(Texture *texture);
-		void bindFrameBufferTextureDepth(Texture *texture);		
 		void unbindFramebuffers();
 		
 		void cullFrontFaces(bool val);
@@ -154,6 +151,8 @@
 		void setScissorBox(Polycode::Rectangle box);		
 		
 		Vector3 projectRayFrom2DCoordinate(Number x, Number y);
+
+		void initOSSpecific();
 		
 		void setLineSize(Number lineSize);
 		
@@ -195,7 +194,7 @@
 		void applyMaterial(Material *material,  ShaderBinding *localOptions, unsigned int shaderIndex);
 		
 	protected:
-		void initOSSpecific();
+
 		
 		Number nearPlane;
 		Number farPlane;
diff --git a/Core/Contents/Include/PolyGLSLProgram.h b/Core/Contents/Include/PolyGLSLProgram.h
--- a/Core/Contents/Include/PolyGLSLProgram.h
+++ b/Core/Contents/Include/PolyGLSLProgram.h
@@ -29,15 +29,26 @@
 
 namespace Polycode {
 
-	class _PolyExport GLSLProgram : public ShaderProgram {
+class _PolyExport GLSLProgramParam : public ProgramParam {
+	public:		
+		static void createParamData(int *retType, const String& type, const String& value, const String& min, const String& max, void **valueRes, void **minRes, void **maxRes);	
+	};
+
+	class _PolyExport GLSLProgram : public Resource {
 		public:
-			GLSLProgram(String fileName, int type);
+			GLSLProgram(int type);
 			virtual ~GLSLProgram();
 			
-			void reloadProgram();
-			
+			GLSLProgramParam addParam(const String& name, const String& typeString, const String& valueString, bool isAuto, int autoID, int paramType, void *defaultData, void *minData, void *maxData);
+		
 			unsigned int program;
-			String fileName;
+//			GLSLparameter modelViewProjection;
 	
+			static const int TYPE_VERT = 0;
+			static const int TYPE_FRAG = 1;		
+			
+			int type;
+			
+			std::vector<GLSLProgramParam> params;
 	};
 }
diff --git a/Core/Contents/Include/PolyGLSLShader.h b/Core/Contents/Include/PolyGLSLShader.h
--- a/Core/Contents/Include/PolyGLSLShader.h
+++ b/Core/Contents/Include/PolyGLSLShader.h
@@ -49,18 +49,13 @@
 
 			ShaderBinding *createBinding();
 			virtual void reload();
-			
-			void handleEvent(Event *event);
-			
-			static int getPolycodeParamType(int glType);
+		
+			unsigned int shader_id;		
+			GLSLProgram *vp;
+			GLSLProgram *fp;			
 			
-			void setVertexProgram(ShaderProgram *vp);
-			void setFragmentProgram(ShaderProgram *fp);			
-				
-			unsigned int shader_id;		
-			
-			void linkProgram();			
-			void unlinkProgram();
+		protected:
+			void linkProgram();
 	};
 	
 	class _PolyExport GLSLShaderBinding : public ShaderBinding {
@@ -68,12 +63,11 @@
 			GLSLShaderBinding(GLSLShader *shader);
 			virtual ~GLSLShaderBinding();
 			
-			void clearCubemap(const String& name);
 			void addTexture(const String& name, Texture *texture);
 			void addCubemap(const String& name, Cubemap *cubemap);
 			void clearTexture(const String& name);
 			Texture *getTexture(const String& name);
-			Cubemap *getCubemap(const String& name);
+			void addParam(const String& type, const String& name, const String& value);
 			
 			std::vector<GLSLTextureBinding> textures;
 			std::vector<GLSLCubemapBinding> cubemaps;
diff --git a/Core/Contents/Include/PolyGLSLShaderModule.h b/Core/Contents/Include/PolyGLSLShaderModule.h
--- a/Core/Contents/Include/PolyGLSLShaderModule.h
+++ b/Core/Contents/Include/PolyGLSLShaderModule.h
@@ -27,9 +27,8 @@
 namespace Polycode {
 	
 	class GLSLProgram;
-	class ProgramParam;
+	class GLSLProgramParam;
 	class GLSLShader;
-	class ShaderProgram;
 
 	class _PolyExport GLSLShaderModule : public PolycodeShaderModule {
 		public:
@@ -37,18 +36,19 @@
 			virtual ~GLSLShaderModule();
 		
 			bool acceptsExtension(const String& extension);
-			ShaderProgram* createProgramFromFile(const String& extension, const String& fullPath);
+			Resource* createProgramFromFile(const String& extension, const String& fullPath);
 			void reloadPrograms();
 			String getShaderType();
 			Shader *createShader(TiXmlNode *node);
-			Shader *createShader(String name, String vpName, String fpName);
 			bool applyShaderMaterial(Renderer *renderer, Material *material, ShaderBinding *localOptions, unsigned int shaderIndex);	
 			void clearShader();
 		
 	protected:
-		
+
+		GLSLProgramParam addParamToProgram(GLSLProgram *program,TiXmlNode *node);		
+		void recreateGLSLProgram(GLSLProgram *prog, const String& fileName, int type);
 		GLSLProgram *createGLSLProgram(const String& fileName, int type);
-		void updateGLSLParam(Renderer *renderer, GLSLShader *glslShader, ProgramParam &param, ShaderBinding *materialOptions, ShaderBinding *localOptions);			
+		void updateGLSLParam(Renderer *renderer, GLSLShader *glslShader, GLSLProgramParam &param, ShaderBinding *materialOptions, ShaderBinding *localOptions);			
 		
 		std::vector<GLSLProgram*> programs;
 	};
diff --git a/Core/Contents/Include/PolyGlobals.h b/Core/Contents/Include/PolyGlobals.h
--- a/Core/Contents/Include/PolyGlobals.h
+++ b/Core/Contents/Include/PolyGlobals.h
@@ -39,9 +39,6 @@
 	#pragma warning(disable:4996)
 	#pragma warning(disable:4309)
 	#define NULL 0
-	// Prevent windows.h includes from generating min/max macros that
-	// clash with the templates in <algorithm>
-	#define NOMINMAX
 
 
 #endif
@@ -87,12 +84,8 @@
     return x < a ? a : (x > b ? b : x);
 }
 
-#ifndef MIN
-	#define MIN(a, b)  (((a) < (b)) ? (a) : (b))
-#endif
-#ifndef MAX
-	#define MAX(a, b)  (((a) > (b)) ? (a) : (b))
-#endif
+#define MIN(a, b)  (((a) < (b)) ? (a) : (b))
+#define MAX(a, b)  (((a) > (b)) ? (a) : (b))
 
 // Special flag read by create_lua_library parser, suppresses Lua bindings for item.
 #define POLYIGNORE
diff --git a/Core/Contents/Include/PolyImage.h b/Core/Contents/Include/PolyImage.h
--- a/Core/Contents/Include/PolyImage.h
+++ b/Core/Contents/Include/PolyImage.h
@@ -23,7 +23,6 @@
 #pragma once
 #include "PolyGlobals.h"
 #include "PolyColor.h"
-#include "PolyRectangle.h"
 
 namespace Polycode {
 
@@ -104,13 +103,16 @@
 			* @param width Width of the image to create.
 			* @param height Height of the image to create.			
 			*/ 						
-			void createEmpty(int width, int height);
-
+			void createEmpty(unsigned int width, unsigned int height);
+			
 			/**
 			* Fills the image with the specified color values.
-			* @param color The color to fill it with.
+			* @param r Red value 0-1.
+			* @param g Green value 0-1
+			* @param b Blue value 0-1
+			* @param a Alpha value 0-1									
 			*/ 									
-			void fill(Color color);
+			void fill(Number r, Number g, Number b, Number a);
 			
 			/**
 			* Sets a pixel at specified coordinates to specified color.
@@ -149,21 +151,21 @@
 			* @param y1 Ending y position.
 			* @param col Color to use.						
 			*/						
-			void drawLine(int x0, int y0, int x1, int y1, Color col);
+			void line(int x0, int y0, int x1, int y1, Color col);
 
 			/**
 			* Moves brush to specified position
 			* @param x New brush position X
 			* @param y New brush position Y
 			*/									
-			void moveBrushTo(int x, int y);
+			void moveTo(int x, int y);
 			
 			/**
 			* Translates brush a specified amount relative to its current position.
 			* @param x Amount to translate on X axis
 			* @param y Amount to translate on Y axis
 			*/												
-			void moveBrush(int x, int y);
+			void move(int x, int y);
 			
 			/**
 			* Draws a line to specified position.
@@ -171,7 +173,7 @@
 			* @param y Ending y position.
 			* @param col Color to use.						
 			*/												
-			void drawLineTo(int x, int y, Color col);
+			void lineTo(int x, int y, Color col);
 			
 			/**
 			* Draws a rectangle with specified color.
@@ -181,7 +183,7 @@
 			* @param h Rectangle height.
 			* @param col Color to use.						
 			*/									
-			void fillRect(int x, int y, int w, int h, Color col);
+			void drawRect(int x, int y, int w, int h, Color col);
 			
 			/**
 			* Draws perlin noise in the image
@@ -216,19 +218,9 @@
 			* @param x X position of the area to return.
 			* @param y Y position of the area to return.
 			* @param width Width of the area to return.
-			* @param height Height of the area to return.
-			* @return Raw image data, in the format specified by the constructor.
+			* @param height Height of the area to return.					
 			*/			
-			char *getPixelsInRect(int x, int y, int width, int height);
-
-			/**
-			* Returns a copy of the specified subRect part of the image.
-			*
-			* @param subRect The part of the image to copy. (0, 0) refers to the top left of the image.
-			* @return A pointer to an Image object allocated with new. You have to manually delete this
-			*         object using free.
-			*/
-			Image *getImagePart(Rectangle subRect);
+			char *getPixelsInRect(unsigned int x, unsigned int y, unsigned int width, unsigned int height);
 			
 			/**
 			* Returns the x position of the brush.
@@ -249,16 +241,16 @@
 			/**
 			* Returns the width of the image.
 			*/			
-			int getWidth() const;
+			unsigned int getWidth() const;
 			
 			/**
 			* Returns the height of the image.
 			*/						
-			int getHeight() const;
+			unsigned int getHeight() const;
 			
 			/**
 			* Returns the raw image data
-			* @return Pointer to raw image data, in the format specified by the constructor.
+			* @return Pointer to raw image data.
 			*/						
 			char *getPixels();
 			
@@ -270,14 +262,7 @@
 		
 		protected:
 		
-			void setPixelType(int type);
-
-			// transform coordinates from external topleft position mode
-			// to internal bottomleft position mode
-			//
-			// results are written directly into the pointers
-			void transformCoordinates(int *x, int *y);	
-			void transformCoordinates(int *x, int *y, int *w, int *h);	
+			void setPixelType(int type);		
 		
 		int imageType;
 		int pixelSize;
@@ -289,8 +274,8 @@
 		int brushPosY;
 		
 		char *imageData;
-		int width;
-		int height;
+		unsigned int width;
+		unsigned int height;
 	};
 
 }
diff --git a/Core/Contents/Include/PolyLabel.h b/Core/Contents/Include/PolyLabel.h
--- a/Core/Contents/Include/PolyLabel.h
+++ b/Core/Contents/Include/PolyLabel.h
@@ -90,8 +90,6 @@
 			
 			int getAntialiasMode() const;			
 			void setAntialiasMode(int newMode);
-			
-			bool optionsChanged();
 					
 			static const int ANTIALIAS_FULL = 0;
 			static const int ANTIALIAS_NONE = 1;
@@ -101,7 +99,7 @@
 			
 		protected:
 		
-			bool _optionsChanged;
+			
 			GlyphData labelData;
 	
 			std::vector<ColorRange> colorRanges;
diff --git a/Core/Contents/Include/PolyLogger.h b/Core/Contents/Include/PolyLogger.h
--- a/Core/Contents/Include/PolyLogger.h
+++ b/Core/Contents/Include/PolyLogger.h
@@ -22,25 +22,13 @@
 
 #pragma once
 #include "PolyGlobals.h"
-#include "PolyEventDispatcher.h"
 
 namespace Polycode {
 
-	class _PolyExport LoggerEvent : public Event {
+	class _PolyExport Logger : public PolyBase {
 		public:
-			LoggerEvent(String message);
-			virtual ~LoggerEvent();
-			
-			String message;
-			
-	};
-
-	class _PolyExport Logger : public EventDispatcher {
-		public:
-			Logger();
-			virtual ~Logger();
-
-			void logBroadcast(String message);
+			Logger(){}
+			~Logger(){}
 
 			static void log(const char *format, ...);
 			static void logw(const char *str);
diff --git a/Core/Contents/Include/PolyMaterial.h b/Core/Contents/Include/PolyMaterial.h
--- a/Core/Contents/Include/PolyMaterial.h
+++ b/Core/Contents/Include/PolyMaterial.h
@@ -39,20 +39,12 @@
 			virtual ~Material();
 			
 			void addShader(Shader *shader,ShaderBinding *shaderBinding);
-			void addShaderAtIndex(Shader *shader,ShaderBinding *shaderBinding, int shaderIndex);			
 			unsigned int getNumShaders() const;
 			
-			void removeShader(int shaderIndex);
-			
 			void addShaderRenderTarget(ShaderRenderTarget *newTarget);
 			int getNumShaderRenderTargets();
 			ShaderRenderTarget *getShaderRenderTarget(unsigned int index);
-			void removeShaderRenderTarget(int index);
-			void recreateRenderTarget(ShaderRenderTarget *renderTarget);	
-			void recreateRenderTargets();
-			
-			void handleEvent(Event *event);
-						
+				
 			const String& getName() const;
 			Shader *getShader(unsigned int index) const;
 			ShaderBinding *getShaderBinding(unsigned int index) const;
@@ -68,8 +60,6 @@
 			
 			int blendingMode;
 			
-			bool screenMaterial;
-			
 		protected:
 		
 			std::vector<Shader*> materialShaders;
diff --git a/Core/Contents/Include/PolyMaterialManager.h b/Core/Contents/Include/PolyMaterialManager.h
--- a/Core/Contents/Include/PolyMaterialManager.h
+++ b/Core/Contents/Include/PolyMaterialManager.h
@@ -37,7 +37,6 @@
 	class SceneRenderTexture;
 	class Shader;
 	class String;
-	class ShaderProgram;
 	
 	/**
 	* Manages loading and reloading of materials, textures and shaders. This class should be only accessed from the CoreServices singleton.
@@ -69,8 +68,6 @@
 			//SceneRenderTexture *createRenderTexture(Scene *targetScene, Camera *targetCamera, int renderWidth,int renderHeight);
 			Texture *getTextureByResourcePath(const String& resourcePath) const;
 			
-			ShaderProgram *createProgramFromFile(String programPath);
-			
 			// cubemaps
 		
 			Cubemap *cubemapFromXMLNode(TiXmlNode *node);
@@ -82,22 +79,18 @@
 			
 			Shader *setShaderFromXMLNode(TiXmlNode *node);
 			Shader *createShaderFromXMLNode(TiXmlNode *node);
-			Shader *createShader(String shaderType, String name, String vpName, String fpName, bool screenShader);
+			
+			void registerShader(Shader *shader);
 		
 			std::vector<Material*> loadMaterialsFromFile(String fileName);
-			std::vector<Shader*> loadShadersFromFile(String fileName);		
-			std::vector<Cubemap*> loadCubemapsFromFile(String fileName);	
-						
+		
 			void addMaterial(Material *material);
-			void addShader(Shader *shader);
 		
 			unsigned int getNumShaders();
 			Shader *getShaderByIndex(unsigned int index);
 		
 			bool premultiplyAlphaOnLoad;
-			bool clampDefault;
-			bool mipmapsDefault;
-			
+		
 		private:
 			std::vector<Texture*> textures;
 			std::vector<Material*> materials;
diff --git a/Core/Contents/Include/PolyMatrix4.h b/Core/Contents/Include/PolyMatrix4.h
--- a/Core/Contents/Include/PolyMatrix4.h
+++ b/Core/Contents/Include/PolyMatrix4.h
@@ -265,7 +265,7 @@
 				
 				*ax = -fabs(angle_x);
 				*ay = fabs(angle_y);
-				*az = -fabs(angle_z);
+				*az = fabs(angle_z);
 
 			}
 		
@@ -282,7 +282,7 @@
 			/**
 			* Returns the inverse of the matrix.
 			*/
-			Matrix4 Inverse() const;
+			Matrix4 inverse() const;
 			
 			/**
 			* Returns the affine inverse of the matrix.
diff --git a/Core/Contents/Include/PolyModule.h b/Core/Contents/Include/PolyModule.h
--- a/Core/Contents/Include/PolyModule.h
+++ b/Core/Contents/Include/PolyModule.h
@@ -20,7 +20,6 @@
 	class Shader;
 	class ShaderBinding;
 	class Resource;
-	class ShaderProgram;
 	
 	class _PolyExport PolycodeModule : public PolyBase {
 	public:
@@ -47,11 +46,10 @@
 		virtual ~PolycodeShaderModule();
 		
 		virtual bool acceptsExtension(const String& extension) = 0;
-		virtual ShaderProgram* createProgramFromFile(const String& extension, const String& fullPath) = 0;
+		virtual Resource* createProgramFromFile(const String& extension, const String& fullPath) = 0;
 		virtual String getShaderType() = 0;
 		virtual Shader *createShader(TiXmlNode *node) = 0;
-		virtual Shader *createShader(String name, String vpName, String fpName) = 0;
-			
+	
 		virtual bool applyShaderMaterial(Renderer *renderer, Material *material, ShaderBinding *localOptions, unsigned int shaderIndex) = 0;
 		bool hasShader(Shader *shader) { for(int i=0; i < shaders.size(); i++) { if(shaders[i] == shader){ return true; } } return false; }	
 		virtual void clearShader() = 0;
diff --git a/Core/Contents/Include/PolyObject.h b/Core/Contents/Include/PolyObject.h
--- a/Core/Contents/Include/PolyObject.h
+++ b/Core/Contents/Include/PolyObject.h
@@ -38,7 +38,7 @@
 		/**
 		* Default constructor
 		*/
-		ObjectEntry() { type = UNKNOWN_ENTRY; length = 0; }
+		ObjectEntry() { type = ObjectEntry::CONTAINER_ENTRY; type = UNKNOWN_ENTRY; length = 0; }
 				
 		/**
 		* Type of entry. Possible values are (FLOAT_ENTRY, INT_ENTRY, BOOL_ENTRY, ARRAY_ENTRY, STRING_ENTRY, CONTAINER_ENTRY).
@@ -74,98 +74,6 @@
 		* Length of this object entry if its type is ARRAY_ENTRY.
 		*/										
 		int length;
-
-		/**
-		 * Tries to write the Number value of this[key] to out.
-		 * @param out A pointer to the value to write the number value to.
-		 * @return true if this[key] is a number, false otherwise.
-		 */
-		bool readNumber(String key, Number *out) {
-			ObjectEntry *child = this->operator[](key);
-
-			if(!child) {
-				return false;
-			}
-
-			if(child->type == FLOAT_ENTRY) {
-				*out = child->NumberVal;
-				return true;
-			} else if(child->type == INT_ENTRY) {
-				*out = (Number) child->intVal;
-				return true;
-			}
-
-			return false;
-		}
-
-		/**
-		 * Tries to write the int value of this[key] to out.
-		 * @param out A pointer to the value to write the int value to.
-		 * @return true if this[key] is an integer, false otherwise.
-		 */
-		bool readInt(String key, int *out) {
-			ObjectEntry *child = this->operator[](key);
-
-			if(!child) {
-				return false;
-			}
-
-			if(child->type == INT_ENTRY) {
-				*out = child->intVal;
-				return true;
-			}
-
-			return false;
-		}
-
-		/**
-		 * Tries to write the int value of this[key] to out.
-		 * @param out A pointer to the value to write the int value to.
-		 * @return true if this[key] is an integer, false otherwise.
-		 */
-		bool readInt(String key, unsigned *out) {
-			return readInt(key, (int*) out);
-		}
-
-		/**
-		 * Tries to write the String value of this[key] to out.
-		 * @param out A pointer to the value to write the String value to.
-		 * @return true if this[key] is a String, false otherwise.
-		 */
-		bool readString(String key, String *out) {
-			ObjectEntry *child = this->operator[](key);
-
-			if(!child) {
-				return false;
-			}
-
-			if(child->type == STRING_ENTRY) {
-				*out = child->stringVal;
-				return true;
-			}
-
-			return false;
-		}
-
-		/**
-		 * Tries to write the boolean value of this[key] to out.
-		 * @param out A pointer to the value to write the boolean value to.
-		 * @return true if this[key] is a bool, false otherwise.
-		 */
-		bool readBool(String key, bool *out) {
-			ObjectEntry *child = this->operator[](key);
-
-			if(!child) {
-				return false;
-			}
-
-			if(child->type == BOOL_ENTRY) {
-				*out = child->boolVal;
-				return true;
-			}
-
-			return false;
-		}
 		
 		/**
 		* Adds an empty child entry.
@@ -177,7 +85,7 @@
 			entry->type = ObjectEntry::CONTAINER_ENTRY;			
 			entry->name = name;
 			children.push_back(entry);
-			length = (int)children.size();
+			length = children.size();
 			return entry;
 		}
 		
@@ -193,7 +101,7 @@
 			entry->NumberVal = val;
 			entry->name = name;
 			children.push_back(entry);
-			length = (int)children.size();
+			length = children.size();			
 			return entry;			
 		}
 
@@ -210,7 +118,7 @@
 			entry->intVal = val;
 			entry->name = name;
 			children.push_back(entry);	
-			length = (int)children.size();
+			length = children.size();			
 			return entry;			
 		}
 		
@@ -226,7 +134,7 @@
 			entry->stringVal = val;
 			entry->name = name;
 			children.push_back(entry);
-			length = (int)children.size();
+			length = children.size();			
 			return entry;			
 		}		
 		
@@ -242,7 +150,7 @@
 			entry->stringVal = val;
 			entry->name = name;
 			children.push_back(entry);
-			length = (int)children.size();
+			length = children.size();			
 			return entry;			
 		}		
 		
@@ -259,13 +167,13 @@
 			entry->boolVal = val;
 			entry->name = name;
 			children.push_back(entry);
-			length = (int)children.size();
+			length = children.size();			
 			return entry;			
 		}
 		
 		ObjectEntry *addChild(ObjectEntry *entry) {
 			children.push_back(entry);
-			length = (int)children.size();
+			length = children.size();			
 			return entry;			
 		}		
 		
diff --git a/Core/Contents/Include/PolyParticleEmitter.h b/Core/Contents/Include/PolyParticleEmitter.h
--- a/Core/Contents/Include/PolyParticleEmitter.h
+++ b/Core/Contents/Include/PolyParticleEmitter.h
@@ -228,7 +228,7 @@
 			
 			Number particleSize;
 			
-			Texture *getParticleTexture() const;
+			Texture *getParticleTexture();
 			
 			void setParticleTexture(Texture *texture);
 		
@@ -240,15 +240,9 @@
 				
 			Number rotationSpeed;
 							
-			int emitterType;
-			
-			bool getIgnoreParentMatrix() const;
-			void setIgnoreParentMatrix(bool val);
-											
+			int emitterType;											
 		protected:
 		
-			bool ignoreParentMatrix;
-		
 			int blendingMode;
 		
 			bool isScreenEmitter;
@@ -334,8 +328,8 @@
 		ScreenParticleEmitter(const String& imageFile, int particleType, int emitterType, Number lifespan, unsigned int numParticles, Vector3 direction, Vector3 gravity, Vector3 deviation, Vector3 emitterRadius, Mesh *particleMesh = NULL, ScreenMesh *emitter = NULL);
 		virtual ~ScreenParticleEmitter();		
 		
-		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 		
 		/**
 		* Returns the emitter (helper method for LUA).
diff --git a/Core/Contents/Include/PolyQuaternion.h b/Core/Contents/Include/PolyQuaternion.h
--- a/Core/Contents/Include/PolyQuaternion.h
+++ b/Core/Contents/Include/PolyQuaternion.h
@@ -58,133 +58,132 @@
 			
 		
 			inline void setFromMatrix(const Matrix4 &_mat) {
-				Number fTrace = _mat.m[0][0]+_mat.m[1][1]+_mat.m[2][2];
-				Number fRoot;
+			Number fTrace = _mat.m[0][0]+_mat.m[1][1]+_mat.m[2][2];
+			Number fRoot;
+			
+			if ( fTrace > 0.0 ) {
+				fRoot = sqrtf(fTrace + 1.0);  // 2w
+				w = 0.5*fRoot;
+				fRoot = 0.5/fRoot;
+				x = (_mat.m[2][1]-_mat.m[1][2])*fRoot;
+				y = (_mat.m[0][2]-_mat.m[2][0])*fRoot;
+				z = (_mat.m[1][0]-_mat.m[0][1])*fRoot;
+			}
+			else
+			{
+				static size_t s_iNext[3] = { 1, 2, 0 };
+				size_t i = 0;
+				if ( _mat.m[1][1] > _mat.m[0][0] )
+					i = 1;
+				if ( _mat.m[2][2] > _mat.m[i][i] )
+					i = 2;
+				size_t j = s_iNext[i];
+				size_t k = s_iNext[j];
 				
-				if ( fTrace > 0.0 ) {
-					fRoot = sqrtf(fTrace + 1.0);  // 2w
-					w = 0.5*fRoot;
-					fRoot = 0.5/fRoot;
-					x = (_mat.m[2][1]-_mat.m[1][2])*fRoot;
-					y = (_mat.m[0][2]-_mat.m[2][0])*fRoot;
-					z = (_mat.m[1][0]-_mat.m[0][1])*fRoot;
-				}
-				else
-				{
-					static size_t s_iNext[3] = { 1, 2, 0 };
-					size_t i = 0;
-					if ( _mat.m[1][1] > _mat.m[0][0] )
-						i = 1;
-					if ( _mat.m[2][2] > _mat.m[i][i] )
-						i = 2;
-					size_t j = s_iNext[i];
-					size_t k = s_iNext[j];
-					
-					fRoot = sqrtf(_mat.m[i][i]-_mat.m[j][j]-_mat.m[k][k] + 1.0);
-					Number* apkQuat[3] = { &x, &y, &z };
-					*apkQuat[i] = 0.5*fRoot;
-					fRoot = 0.5/fRoot;
-					w = (_mat.m[k][j]-_mat.m[j][k])*fRoot;
-					*apkQuat[j] = (_mat.m[j][i]+_mat.m[i][j])*fRoot;
-					*apkQuat[k] = (_mat.m[k][i]+_mat.m[i][k])*fRoot;
-				}			
-			}
+				fRoot = sqrtf(_mat.m[i][i]-_mat.m[j][j]-_mat.m[k][k] + 1.0);
+				Number* apkQuat[3] = { &x, &y, &z };
+				*apkQuat[i] = 0.5*fRoot;
+				fRoot = 0.5/fRoot;
+				w = (_mat.m[k][j]-_mat.m[j][k])*fRoot;
+				*apkQuat[j] = (_mat.m[j][i]+_mat.m[i][j])*fRoot;
+				*apkQuat[k] = (_mat.m[k][i]+_mat.m[i][k])*fRoot;
+			}			
+		}
 			
 			static Quaternion Slerp(Number fT, const Quaternion& rkP, const Quaternion& rkQ, bool shortestPath=false);
 			Number Dot(const Quaternion& rkQ) const;
-			Quaternion Log () const;
-			Quaternion Exp () const;	
-			Number Norm () const;
-			Number Normalize();	
-			Quaternion operator+ (const Quaternion& rkQ) const;
-			Quaternion operator* (const Quaternion& rkQ) const;
-			Quaternion operator* (Number fScalar) const;
-
-			// TODO: implement
-			inline void lookAt(const Vector3 &D, const Vector3 &upVector) {
-				/*
-				Vector3 D;
-				Vector3 back = D * -1;
-				back.Normalize();
+	Quaternion Log () const;
+    Quaternion Exp () const;	
+    Number Norm () const;
+    Number normalize();	
+    Quaternion operator+ (const Quaternion& rkQ) const;
+    Quaternion operator* (const Quaternion& rkQ) const;
+    Quaternion operator* (Number fScalar) const;
+		
+		inline void lookAt(const Vector3 &D, const Vector3 &upVector) {
+			/*
+			Vector3 D;
+			Vector3 back = D * -1;
+			back.Normalize();
+			
+			Vector3 right = back.crossProduct(upVector) ;
+			right.Normalize();
+			right = right * -1;
+			
+			Vector3 up = back.crossProduct(right);
+			
+			set( y.z - z.y , z.x - x.z, x.y - y.x, tr + 1.0f ); 
+			 */
+		}
+		
+		void createFromMatrix(const Matrix4& matrix) {
+			Number  tr, s, q[4];
+			int    i, j, k;
+			
+			static const int nxt[3] = {1, 2, 0};			
+			
+			tr = matrix.m[0][0] + matrix.m[1][1] + matrix.m[2][2];
+			
+			
+			// check the diagonal
+			if (tr > 0.0f)
+			{
+                s = sqrtf(tr + 1.0f);
+                w = s / 2.0f;
+                s = 0.5f / s;
+                x = (matrix.m[1][2] - matrix.m[2][1]) * s;
+                y = (matrix.m[2][0] - matrix.m[0][2]) * s;
+                z = (matrix.m[0][1] - matrix.m[1][0]) * s;
+			}
+			else
+			{
+                // diagonal is negative
+                i = 0;
+                if (matrix.m[1][1] > matrix.m[0][0]) i = 1;
+                if (matrix.m[2][2] > matrix.m[i][i]) i = 2;
+                j = nxt[i];
+                k = nxt[j];
 				
-				Vector3 right = back.crossProduct(upVector) ;
-				right.Normalize();
-				right = right * -1;
+                s = sqrtf((matrix.m[i][i] - (matrix.m[j][j] + matrix.m[k][k])) + 1.0f);
+				
+                q[i] = s * 0.5f;
+				
+                if (s != 0.0f) s = 0.5f / s;
 				
-				Vector3 up = back.crossProduct(right);
+                q[3] = (matrix.m[j][k] - matrix.m[k][j]) * s;
+                q[j] = (matrix.m[i][j] + matrix.m[j][i]) * s;
+                q[k] = (matrix.m[i][k] + matrix.m[k][i]) * s;
 				
-				set( y.z - z.y , z.x - x.z, x.y - y.x, tr + 1.0f ); 
-				 */
+                x = q[0];
+                y = q[1];
+                z = q[2];
+                w = q[3];
 			}
 			
-			void createFromMatrix(const Matrix4& matrix) {
-				Number  tr, s, q[4];
-				int    i, j, k;
-				
-				static const int nxt[3] = {1, 2, 0};			
-				
-				tr = matrix.m[0][0] + matrix.m[1][1] + matrix.m[2][2];
-				
-				
-				// check the diagonal
-				if (tr > 0.0f)
-				{
-					s = sqrtf(tr + 1.0f);
-					w = s / 2.0f;
-					s = 0.5f / s;
-					x = (matrix.m[1][2] - matrix.m[2][1]) * s;
-					y = (matrix.m[2][0] - matrix.m[0][2]) * s;
-					z = (matrix.m[0][1] - matrix.m[1][0]) * s;
-				}
-				else
-				{
-					// diagonal is negative
-					i = 0;
-					if (matrix.m[1][1] > matrix.m[0][0]) i = 1;
-					if (matrix.m[2][2] > matrix.m[i][i]) i = 2;
-					j = nxt[i];
-					k = nxt[j];
-					
-					s = sqrtf((matrix.m[i][i] - (matrix.m[j][j] + matrix.m[k][k])) + 1.0f);
-					
-					q[i] = s * 0.5f;
-					
-					if (s != 0.0f) s = 0.5f / s;
-					
-					q[3] = (matrix.m[j][k] - matrix.m[k][j]) * s;
-					q[j] = (matrix.m[i][j] + matrix.m[j][i]) * s;
-					q[k] = (matrix.m[i][k] + matrix.m[k][i]) * s;
-					
-					x = q[0];
-					y = q[1];
-					z = q[2];
-					w = q[3];
-				}
-				
-			}
+		}
 
 
-			inline bool operator== (const Quaternion& rhs) const
-			{
-					return (rhs.x == x) && (rhs.y == y) &&
-						(rhs.z == z) && (rhs.w == w);
-			}
+	inline bool operator== (const Quaternion& rhs) const
+	{
+			return (rhs.x == x) && (rhs.y == y) &&
+				(rhs.z == z) && (rhs.w == w);
+	}
 
-			inline bool operator!= (const Quaternion& rhs) const
-			{
-					return (rhs.x != x) && (rhs.y != y) &&
-						(rhs.z != z) && (rhs.w != w);
-			}
+	inline bool operator!= (const Quaternion& rhs) const
+	{
+			return (rhs.x != x) && (rhs.y != y) &&
+				(rhs.z != z) && (rhs.w != w);
+	}
 
 
-			static Quaternion Squad(Number fT, const Quaternion& rkP, const Quaternion& rkA, const Quaternion& rkB, const Quaternion& rkQ, bool shortestPath);
-			Quaternion Inverse() const;
+    static Quaternion Squad(Number fT, const Quaternion& rkP, const Quaternion& rkA, const Quaternion& rkB, const Quaternion& rkQ, bool shortestPath);
+	Quaternion Inverse () const;
+	
+    Quaternion operator- () const
+    {
+        return Quaternion(-w,-x,-y,-z);
+    }
 			
-			Quaternion operator- () const
-			{
-				return Quaternion(-w,-x,-y,-z);
-			}
-					
 			void set(Number w, Number x, Number y, Number z) {
 				this->w = w;
 				this->x = x;
@@ -192,86 +191,77 @@
 				this->z = z;												
 			}
 			
-			Quaternion Inverse() {
+			Quaternion inverse() {
 				Number fNorm = w*w+x*x+y*y+z*z;
 				Number fInvNorm = 1.0/fNorm;
 				return Quaternion(w*fInvNorm,-x*fInvNorm,-y*fInvNorm,-z*fInvNorm);
 
 			}
 			
-			Number InvSqrt(Number x) {
-				Number xhalf = 0.5f * x;
-				int i = *(int*)&x; // store Numbering-point bits in integer
-				i = 0x5f3759d5 - (i >> 1); // initial guess for Newton's method
-				x = *(Number*)&i; // convert new bits into Number
-				x = x*(1.5f - xhalf*x*x); // One round of Newton's method
-				return x;
-			}
-				
-			inline void fromAxes(Number az, Number ay, Number ax) {
-				ax *= TORADIANS;
-				ay *= TORADIANS;
-				az *= TORADIANS;		
-				
-				Number c1 = cos(ay / 2.0f);
-				Number c2 = cos(ax / 2.0f);
-				Number c3 = cos(az / 2.0f);
-				
-				Number s1 = sin(ay / 2.0f);
-				Number s2 = sin(ax / 2.0f);
-				Number s3 = sin(az / 2.0f);
-				
-				w = (c1*c2*c3) - (s1*s2*s3);
-				x = (s1*s2*c3) + (c1*c2*s3);
-				y = (s1*c2*c3) + (c1*s2*s3);
-				z = (c1*s2*c3) - (s1*c2*s3);		
-			}
+	Number InvSqrt(Number x){
+   Number xhalf = 0.5f * x;
+   int i = *(int*)&x; // store Numbering-point bits in integer
+   i = 0x5f3759d5 - (i >> 1); // initial guess for Newton's method
+   x = *(Number*)&i; // convert new bits into Number
+   x = x*(1.5f - xhalf*x*x); // One round of Newton's method
+   return x;
+}
+		
+	inline void fromAxes(Number az, Number ay, Number ax) {
+		ax *= TORADIANS;
+		ay *= TORADIANS;
+		az *= TORADIANS;		
+		
+		Number c1 = cos(ay / 2.0f);
+		Number c2 = cos(ax / 2.0f);
+		Number c3 = cos(az / 2.0f);
+		
+		Number s1 = sin(ay / 2.0f);
+		Number s2 = sin(ax / 2.0f);
+		Number s3 = sin(az / 2.0f);
+		
+		w = (c1*c2*c3) - (s1*s2*s3);
+		x = (s1*s2*c3) + (c1*c2*s3);
+		y = (s1*c2*c3) + (c1*s2*s3);
+		z = (c1*s2*c3) - (s1*c2*s3);		
+	}
+			
 			
-					
-			void fromAngleAxis(const Number& rfAngle,
-				const Vector3& rkAxis)
-			{
-				Number fHalfAngle ( 0.5*rfAngle );
-				Number fSin = sin(fHalfAngle);
-				w = cos(fHalfAngle);
-				x = fSin*rkAxis.x;
-				y = fSin*rkAxis.y;
-				z = fSin*rkAxis.z;
-			}
-
-			void toEulerAngles (Vector3& eulerAngles) {
-				// See http://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles
-				// q0 = w, q1 = x, q2 = y, q3 = z
-				eulerAngles.x = atan2( 2 * ( w * x + y * z), 1 - 2 * (x * x + y * y) );
-				eulerAngles.y = asin(2 * ( w * y - z * x));
-				eulerAngles.z = atan2( 2 * ( w * z + x * y), 1 - 2 * (y * y + z * z) );
-			}
+    void FromAngleAxis (const Number& rfAngle,
+        const Vector3& rkAxis)
+    {
+        Number fHalfAngle ( 0.5*rfAngle );
+        Number fSin = sin(fHalfAngle);
+        w = cos(fHalfAngle);
+        x = fSin*rkAxis.x;
+        y = fSin*rkAxis.y;
+        z = fSin*rkAxis.z;
+    }
+    //-----------------------------------------------------------------------
+    void ToAngleAxis (Number& rfAngle, Vector3& rkAxis) 
+    {
+        // The quaternion representing the rotation is
+        //   q = cos(A/2)+sin(A/2)*(x*i+y*j+z*k)
 
-			//-----------------------------------------------------------------------
-			void toAngleAxis (Number& rfAngle, Vector3& rkAxis) 
-			{
-				// The quaternion representing the rotation is
-				//   q = cos(A/2)+sin(A/2)*(x*i+y*j+z*k)
-
-				Number fSqrLength = x*x+y*y+z*z;
-				if ( fSqrLength > 0.0 )
-				{
-					rfAngle = 2.0*acos(w);
-					Number fInvLength = InvSqrt(fSqrLength);
-					rkAxis.x = x*fInvLength;
-					rkAxis.y = y*fInvLength;
-					rkAxis.z = z*fInvLength;
-				}
-				else
-				{
-					// angle is 0 (mod 2*pi), so any axis will do
-					rfAngle = Number(0.0);
-					rkAxis.x = 1.0;
-					rkAxis.y = 0.0;
-					rkAxis.z = 0.0;
-				}
-			}			
-					
+        Number fSqrLength = x*x+y*y+z*z;
+        if ( fSqrLength > 0.0 )
+        {
+            rfAngle = 2.0*acos(w);
+            Number fInvLength = InvSqrt(fSqrLength);
+            rkAxis.x = x*fInvLength;
+            rkAxis.y = y*fInvLength;
+            rkAxis.z = z*fInvLength;
+        }
+        else
+        {
+            // angle is 0 (mod 2*pi), so any axis will do
+            rfAngle = Number(0.0);
+            rkAxis.x = 1.0;
+            rkAxis.y = 0.0;
+            rkAxis.z = 0.0;
+        }
+    }			
+			
 			void createFromAxisAngle(Number x, Number y, Number z, Number degrees);
 			Matrix4 createMatrix() const;
 			
diff --git a/Core/Contents/Include/PolyRectangle.h b/Core/Contents/Include/PolyRectangle.h
--- a/Core/Contents/Include/PolyRectangle.h
+++ b/Core/Contents/Include/PolyRectangle.h
@@ -46,37 +46,6 @@
 			void setRect(Number x, Number y, Number w, Number h);
 
 			/**
-			* Return a Rectangle formed by clipping this rectangle to the
-			* bounds of the passed rectangle.
-			*/
-			Rectangle Clipped(const Rectangle& rect) const;
-
-			/**
-			* Return the minimum X coordinate (the left edge).
-			*/
-			Number minX() const { return x; }
-
-			/**
-			* Return the maximum X coordinate (the right edge).
-			*/
-			Number maxX() const { return x + w; }
-
-			/**
-			 * Return the minimum Y coordinate (the top edge in a Y-down coordinate
-			 * system).
-			 */
-			Number minY() const { return y; }
-
-			/**
-			* Return the maximum Y coordinate (the bottom edge in a Y-down coordinate
-			* system).
-			*/
-			Number maxY() const { return y + h; }
-
-			bool operator==(const Rectangle& rect) const;
-			bool operator!=(const Rectangle& rect) const { return !(*this == rect); }
-
-			/**
 			* X position
 			*/									
 			Number x;
diff --git a/Core/Contents/Include/PolyRenderer.h b/Core/Contents/Include/PolyRenderer.h
--- a/Core/Contents/Include/PolyRenderer.h
+++ b/Core/Contents/Include/PolyRenderer.h
@@ -75,23 +75,13 @@
 	};
 
 	/**
-	* Provides low-level settings for the main renderer.
-	*
-	* The methods and settings in this class are closely related to OpenGL.
-	* If you have trouble understanding anything in this class, it is thus suggested to brush up on your OpenGL knowledge.
-	*
-	* The renderer should only be accessed from the CoreServices singleton. Renderer operations should only be called from within Render methods of entities so that they can be properly managed.
-	*
-	* @see http://www.glprogramming.com/red/
-	* @see http://nehe.gamedev.net/tutorial/lessons_01__05/22004/
+	* Main renderer. The renderer should only be accessed from the CoreServices singleton. Renderer operations should only be called from within Render methods of entities so that they can be properly managed.
 	*/
 	class _PolyExport Renderer : public PolyBase {
 	public:
 		Renderer();
 		virtual ~Renderer();
 		
-		virtual bool Init();
-
 		virtual void Resize(int xRes, int yRes) = 0;
 		
 		virtual void BeginRender() = 0;
@@ -104,7 +94,6 @@
 		
 		virtual Texture *createFramebufferTexture(unsigned int width, unsigned int height) = 0;
 		virtual void bindFrameBufferTexture(Texture *texture) = 0;
-		virtual void bindFrameBufferTextureDepth(Texture *texture) = 0;
 		virtual void unbindFramebuffers() = 0;
 
 		virtual Image *renderScreenToImage() = 0;
@@ -186,30 +175,8 @@
 		
 		void setTextureFilteringMode(int mode);
 		
-		/**
-		 * Set the near and far clipping planes for the visible frustum.
-		 *
-		 * Please check the supplied external links for more information
-		 * about the problems of a high farPlane/nearPlane setting.
-		 *
-		 * @param nearPlane The new near clipping plane.
-		 * @param farPlane The new far clipping plane.
-		 *
-		 * @see http://en.wikipedia.org/wiki/Viewing_frustum
-		 * @see http://www.opengl.org/sdk/docs/man2/xhtml/glFrustum.xml
-		 */
-		virtual void setClippingPlanes(Number nearPlane, Number farPlane) = 0;
+		virtual void setClippingPlanes(Number nearPlane_, Number farPlane_) = 0;
 		
-		/**
-		 * Enable/disable alpha tests.
-		 *
-		 * If alpha tests are enabled, drawn pixels of textures will
-		 * be "mixed" with framebuffer pixels based on the drawn pixel's
-		 * alpha value. If alpha tests are disabled, they will be drawn
-		 * as solid color.
-		 *
-		 * @param val Whether to enable or disable alpha tests.
-		 */
 		virtual void enableAlphaTest(bool val) = 0;
 		
 		virtual void clearBuffer(bool colorBuffer, bool depthBuffer) = 0;
@@ -252,6 +219,8 @@
 		
 		void *getDataPointerForName(const String &name);
 		void setRendererShaderParams(Shader *shader, ShaderBinding *binding);
+
+		virtual void initOSSpecific() {};
 		
 		void addShaderModule(PolycodeShaderModule *module);
 		
@@ -302,8 +271,7 @@
 		
 		bool blendNormalAsPremultiplied;
 				
-	protected:
-		virtual void initOSSpecific() {};
+	protected:	
 	
 		bool scissorEnabled;
 		
@@ -321,6 +289,11 @@
 		Texture *currentTexture;
 		Material *currentMaterial;
 		
+//		vector<Texture*> shadowMapTextures;
+		
+		Texture *currentFrameBufferTexture;
+		Texture *previousFrameBufferTexture;
+			
 		int textureFilteringMode;
 		int renderMode;
 		
diff --git a/Core/Contents/Include/PolyResource.h b/Core/Contents/Include/PolyResource.h
--- a/Core/Contents/Include/PolyResource.h
+++ b/Core/Contents/Include/PolyResource.h
@@ -24,14 +24,13 @@
 #pragma once
 #include "PolyString.h"
 #include "PolyGlobals.h"
-#include "PolyEventDispatcher.h"
 
 namespace Polycode {
 
 	/**
 	* Base class for resources. All resources that are managed by the ResourceManager subclass this.
 	*/
-	class _PolyExport Resource : public EventDispatcher {
+	class _PolyExport Resource : public PolyBase {
 		public:
 					
 			// ----------------------------------------------------------------------------------------------------------------
@@ -43,7 +42,6 @@
 			Resource(int type);
 			virtual ~Resource();
 			
-			virtual void reloadResource();
 			
 			const String& getResourceName() const;
 			int getResourceType() const;
@@ -56,17 +54,11 @@
 			static const int RESOURCE_SHADER = 2;
 			static const int RESOURCE_PROGRAM = 3;
 			static const int RESOURCE_MESH = 5;
-			static const int RESOURCE_CUBEMAP = 6;
-			static const int RESOURCE_SCREEN_SPRITE = 7;	
-			static const int RESOURCE_SCREEN_ENTITY_INSTANCE = 8;
+			static const int RESOURCE_CUBEMAP = 6;				
 			
-			bool reloadOnFileModify;
-			time_t resourceFileTime;
-						
 			//@}
 			
 		protected:
-
 			
 			int type;
 			String resourcePath;
diff --git a/Core/Contents/Include/PolyResourceManager.h b/Core/Contents/Include/PolyResourceManager.h
--- a/Core/Contents/Include/PolyResourceManager.h
+++ b/Core/Contents/Include/PolyResourceManager.h
@@ -25,8 +25,6 @@
 #include "PolyGlobals.h"
 #include <vector>
 
-#define RESOURCE_CHECK_INTERVAL	2000
-
 namespace Polycode {
 
 	class Resource;
@@ -46,19 +44,7 @@
 			* @param resource Resource to add.
 			*/ 
 			void addResource(Resource *resource);
-
-			/** 
-			* Removes a resource.
-			* @param resource Resource to resource.
-			*/ 
-			void removeResource(Resource *resource);
 			
-			
-			/**
-			* Returns true if the following resource has been adde to the resource manager.
-			* @param resource Resource to check.
-			*/
-			bool hasResource(Resource *resource);
 			/**
 			* Loads resources from a directory.
 			* @param dirPath Path to directory to load resources from.
@@ -92,9 +78,6 @@
 			* @param resourceName Name of the resource to request.
 			*/
 			Resource *getResource(int resourceType, const String& resourceName) const;
-
-			Resource *getResourceByPath(const String& resourcePath) const;
-
 		
 			/**
 			 * Request a full set of loaded resources. You need to manually cast them to their subclasses based on their type.
@@ -104,15 +87,8 @@
 		
 			void addShaderModule(PolycodeShaderModule *module);
 		
-			void checkForChangedFiles();
-		
-			void Update(int elapsed);
-			
-			bool reloadResourcesOnModify;
 		
 		private:
-			int ticksSinceCheck;
-		
 			std::vector <Resource*> resources;
 			std::vector <PolycodeShaderModule*> shaderModules;
 	};
diff --git a/Core/Contents/Include/PolySDLCore.h b/Core/Contents/Include/PolySDLCore.h
--- a/Core/Contents/Include/PolySDLCore.h
+++ b/Core/Contents/Include/PolySDLCore.h
@@ -47,10 +47,8 @@
 		~SDLCore();
 
 		void enableMouse(bool newval);
-		void captureMouse(bool);
 		unsigned int getTicks();
 		bool Update();
-		void Render();
 		void setVideoMode(int xRes, int yRes, bool fullScreen, bool vSync, int aaLevel, int anisotropyLevel);
 		void createThread(Threaded *target);
 		std::vector<Rectangle> getVideoModes();
diff --git a/Core/Contents/Include/PolyScene.h b/Core/Contents/Include/PolyScene.h
--- a/Core/Contents/Include/PolyScene.h
+++ b/Core/Contents/Include/PolyScene.h
@@ -120,7 +120,7 @@
 		bool isEnabled();		
 		void setEnabled(bool enabled);
 		
-		int getNumEntities() { return (int)entities.size(); }
+		int getNumEntities() { return entities.size(); }
 		SceneEntity *getEntity(int index) { return entities[index]; }
 		
 		/**
@@ -134,6 +134,10 @@
 		virtual void Render(Camera *targetCamera = NULL);
 		virtual void RenderDepthOnly(Camera *targetCamera);
 		
+		static String readString(OSFILE *inFile);
+		void loadScene(const String& fileName);
+		void generateLightmaps(Number lightMapRes, Number lightMapQuality, int numRadPasses);
+		
 		/**
 		* Adds a light to the scene.
 		* @param light Light to add to the scene.
@@ -147,10 +151,22 @@
 		void removeLight(SceneLight *light);
 		
 		SceneLight *getNearestLight(Vector3 pos);
-				
+		
+		void writeEntityMatrix(SceneEntity *entity, OSFILE *outFile);
+		void writeString(const String& str, OSFILE *outFile);
+		void saveScene(const String& fileName);
+		
+		int getNumStaticGeometry();
+		SceneMesh *getStaticGeometry(int index);
+		
+		virtual void loadCollisionChild(SceneEntity *entity, bool autoCollide=false, int type=0){}
+		
 		int getNumLights();
 		SceneLight *getLight(int index);
-				
+		
+		SceneEntity *getCustomEntityByType(const String& type) const;
+		std::vector<SceneEntity*> getCustomEntitiesByType(const String& type) const;
+		
 		static const unsigned int ENTITY_MESH = 0;
 		static const unsigned int ENTITY_LIGHT = 1;			
 		static const unsigned int ENTITY_CAMERA = 2;			
@@ -197,6 +213,10 @@
 		bool hasLightmaps;
 		
 		std::vector <SceneLight*> lights;
+		std::vector <SceneMesh*> staticGeometry;
+		std::vector <SceneMesh*> collisionGeometry;
+		std::vector <SceneEntity*> customEntities;
+		
 		
 		bool isSceneVirtual;
 		
diff --git a/Core/Contents/Include/PolySceneManager.h b/Core/Contents/Include/PolySceneManager.h
--- a/Core/Contents/Include/PolySceneManager.h
+++ b/Core/Contents/Include/PolySceneManager.h
@@ -37,10 +37,7 @@
 		
 		void addScene(Scene *newScene);
 		void Update();
-		void Render();
-		
-		void renderVirtual();
-				
+		void UpdateVirtual();
 		void removeScene(Scene *scene);	
 		void registerRenderTexture(SceneRenderTexture *renderTexture);
 		void unregisterRenderTexture(SceneRenderTexture *renderTexture);
diff --git a/Core/Contents/Include/PolySceneMesh.h b/Core/Contents/Include/PolySceneMesh.h
--- a/Core/Contents/Include/PolySceneMesh.h
+++ b/Core/Contents/Include/PolySceneMesh.h
@@ -92,7 +92,7 @@
 			* @param fileName Filename to load the mesh from.
 			* @param clamp If true, clamps the texture to edges. See Texture for details on that.
 			*/
-			void loadTexture(const String& fileName);
+			void loadTexture(const String& fileName, bool clamp=true);
 			
 			/**
 			* Loads a skeleton from a file and applies it to the scene mesh.
diff --git a/Core/Contents/Include/PolySceneRenderTexture.h b/Core/Contents/Include/PolySceneRenderTexture.h
--- a/Core/Contents/Include/PolySceneRenderTexture.h
+++ b/Core/Contents/Include/PolySceneRenderTexture.h
@@ -44,7 +44,9 @@
 			*/
 			SceneRenderTexture(Scene *targetScene, Camera *targetCamera, int renderWidth,int renderHeight, bool floatingPoint = false);
 			virtual ~SceneRenderTexture();
-						
+			
+			void drawScreen();
+			
 			/**
 			* Returns the actual render texture.
 			*/
@@ -53,7 +55,6 @@
 			Texture *getFilterColorBufferTexture();
 			Texture *getFilterZBufferTexture();			
 
-			void resizeRenderTexture(int newWidth, int newHeight);
 			/**
 			* Returns the target scene.
 			*/			
@@ -69,8 +70,6 @@
 			Texture *filterColorBufferTexture;
 			Texture *filterZBufferTexture;
 		
-			bool floatingPoint;
-		
 			Texture *depthTexture;		
 			Texture *targetTexture;
 			Scene *targetScene;
diff --git a/Core/Contents/Include/PolyScreen.h b/Core/Contents/Include/PolyScreen.h
--- a/Core/Contents/Include/PolyScreen.h
+++ b/Core/Contents/Include/PolyScreen.h
@@ -75,12 +75,7 @@
 				
 		virtual void Shutdown();
 		virtual void Update();
-		
-		/**
-		* Returns the entity at specified point. May not take rotation or scale into account.
-		*/
-		ScreenEntity *getEntityAt(Number x, Number y);
-
+				
 		virtual void Render();
 		void setRenderer(Renderer *renderer);
 
diff --git a/Core/Contents/Include/PolyScreenEntity.h b/Core/Contents/Include/PolyScreenEntity.h
--- a/Core/Contents/Include/PolyScreenEntity.h
+++ b/Core/Contents/Include/PolyScreenEntity.h
@@ -40,21 +40,19 @@
 	};
 
 /**
-* 2D Entity base.
-*
-* The ScreenEntity is the base class for all 2D elements in Polycode. They can be added to a screen or to other ScreenEntities and are rendered automatically. If you want to create custom screen objects, subclass this. ScreenEntity subclasses Entity, which use 3d positioning and tranformation, but provides some 2d-only versions of the transformation functions for convenience.
+* 2D Entity base. The ScreenEntity is the base class for all 2D elements in Polycode. They can be added to a screen or to other ScreenEntities and are rendered automatically. If you want to create custom screen objects, subclass this. ScreenEntity subclasses Entity, which use 3d positioning and tranformation, but provides some 2d-only versions of the transformation functions for convenience.
 */
 class _PolyExport ScreenEntity : public Entity {
 		
 	public:
 		using Entity::setPosition;		
 		using Entity::setScale;		
-
+	
 		ScreenEntity();
 		virtual ~ScreenEntity();
 		
-		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 
 		void addEntity(Entity *newChild);
 		
@@ -98,11 +96,11 @@
 		*/						
 		Number getRotation() const;
 			
-		MouseEventResult _onMouseDown(Number x, Number y, int mouseButton, int timestamp);
-		MouseEventResult _onMouseUp(Number x, Number y, int mouseButton, int timestamp);
-		MouseEventResult _onMouseMove(Number x, Number y, int timestamp);
-		MouseEventResult _onMouseWheelUp(Number x, Number y, int timestamp);
-		MouseEventResult _onMouseWheelDown(Number x, Number y, int timestamp);
+		MouseEventResult _onMouseDown(Number x, Number y, int mouseButton, int timestamp, Vector2 parentAdjust = Vector2(0,0));
+		MouseEventResult _onMouseUp(Number x, Number y, int mouseButton, int timestamp, Vector2 parentAdjust = Vector2(0,0));
+		MouseEventResult _onMouseMove(Number x, Number y, int timestamp, Vector2 parentAdjust = Vector2(0,0));
+		MouseEventResult _onMouseWheelUp(Number x, Number y, int timestamp, Vector2 parentAdjust = Vector2(0,0));
+		MouseEventResult _onMouseWheelDown(Number x, Number y, int timestamp, Vector2 parentAdjust = Vector2(0,0));
 	
 		virtual void onMouseDown(Number x, Number y){}
 		virtual void onMouseUp(Number x, Number y){}
@@ -113,13 +111,12 @@
 		void _onKeyDown(PolyKEY key, wchar_t charCode);	
 		void _onKeyUp(PolyKEY key, wchar_t charCode);	
 		
-		Matrix4 getScreenConcatenatedMatrix() const;
+		Matrix4 getScreenConcatenatedMatrix();
 		
 		virtual void onKeyDown(PolyKEY key, wchar_t charCode){}
 		virtual void onKeyUp(PolyKEY key, wchar_t charCode){}
 		
-		bool hitTest(Number x, Number y) const;
-		bool hitTest(Vector2 v) const;
+		bool hitTest(Number x, Number y);
 	
 		Matrix4 buildPositionMatrix();
 		void adjustMatrixForChildren();
@@ -158,142 +155,41 @@
 		/** 
 		* Changes the positioning mode of the screen entity.		
 		
-		If the positioning mode is ScreenEntity::POSITION_TOPLEFT, the entity is translated by half its width and half its height when it's rendered, making all other transformations relative to its top-left corner instead of the center.		
+		If the positioning mode is ScreenEntity::POSITION_TOPLEFT, the entity is translated by half its width and half its height when it's rendered, making all other transformations relative to its top-left cornder.instead of the center.		
 		If the mode is ScreenEntity::POSITION_CENTER, the entity is rendered as is.
 		Set to POSITION_CENTER by default.
 		@param newPositionMode The new positioning mode.
 		*/
 		void setPositionMode(int newPositionMode);
-
-		/**
-		 * Get the position mode.
-		 * @see setPositionMode()
-		 */
-		int getPositionMode() const;
-
-		/**
-		 * Set a rectangle to which dragging will be restricted.
-		 *
-		 * Dragging the item past the given rectangle will snap it
-		 * back to the edge of the rectangle.
-		 *
-		 * @param rect The rectangle to restrict dragging to. Uses the
-		 *              same positioning mode as `this->position`.
-		 */
+		
+		int getPositionMode();
+		
 		void setDragLimits(Rectangle rect);
-
-		/**
-		 * Disable restricting where `this` can be dragged.
-		 * @see setDragLimits()
-		 */
 		void clearDragLimits();
-
-		/**
-		 * Set options for `this` and all children recursively.
-		 *
-		 * @param snapToPixels Whether to snap entity positions to pixels before rendering.
-		 */
+		
 		void setDefaultScreenOptions(bool snapToPixels);
-
-		/*
-		 * Make `child` take focus, which will cause certain events
-		 * to be sent to it.
-		 *
-		 * Note that this is a global setting. Only one Entity per
-		 * running instance can take focus.
-		 */
-		void focusChild(ScreenEntity *child);
 		
-		/*
-		 * Make the next child in `this->children`, after the currently
-		 * focused child entity take focus.
-		 *
-		 * Does nothing if no child of `this` has focus.
-		 */
+		void focusChild(ScreenEntity *child);
 		void focusNextChild();
-
-		/**
-		 * @name Child position operations.
-		 * 
-		 * Move a child in the list of children. Affects display
-		 * order of entities(entities further down in the list will
-		 * appear on top).
-		 */
-		//@{	
+		
 		void moveChildUp(ScreenEntity *child);
 		void moveChildDown(ScreenEntity *child);
 		void moveChildTop(ScreenEntity *child);
 		void moveChildBottom(ScreenEntity *child);
-		//}@
-
-		/**
-		 * Same semantics as getPosition(), but returns only the x and y coordinates.
-		 * 
-		 * @see getPosition()
-		 * @see getScreenPosition()
-		 */
+							
 		Vector2 getPosition2D() const;
-		
-		/**
-		 * Get the position of ScreenEntity in relation to the top-left
-		 * corner of the Polycode screen it's on.
-		 *
-		 * This is unlike getPosition(), which will return the position
-		 * of an Entity in relation to its parent Entity.
-		 *
-		 * @see getPosition()
-		 */
 		Vector2 getScreenPosition() const;
 
-		/**
-		 * Same semantics as getScale(), but returns only the x and y scale.
-		 *
-		 * @see getScale()
-		 */
 		Vector2 getScale2D() const;
-
-		/**
-		 * Positioning mode in which you specify an entity's topleft corner
-		 * as coordinate for placement.
-		 */
+		
 		static const int POSITION_TOPLEFT = 0;
-
-		/**
-		 * Positioning mode in which you specify an entity's center as
-		 * coordinate for placement.
-		 */
 		static const int POSITION_CENTER = 1;
 
 		bool isFocusable() const;
 		
 		bool hasFocus;
 		
-		/**
-		 * Does the same as getEntityByID, but casts to ScreenEntity.
-		 *
-		 * Note: Make sure only entities of type ScreenEntity have the tag you're
-		 *       querying, or otherwise you will be treating an Entity as ScreenEntity.
-		 */
-		ScreenEntity *getScreenEntityById(String id, bool recursive) const;
-
-		/**
-		 * Does the same as getEntitiesByID, but casts each result to ScreenEntity.
-		 *
-		 * Note: Make sure only entities of type ScreenEntity have the tag you're
-		 *       querying, or otherwise you will be treating an Entity as ScreenEntity.
-		 */
-		std::vector<ScreenEntity*> getScreenEntitiesByTag(String tag, bool recursive) const;
 		
-        /**
-		 * Returns the entity at specified point. May not take rotation or scale into account.
-		 */
-        ScreenEntity *getEntityAt(Number x, Number y);
-
-        /**
-		 * Returns the entity at specified point, searching only children. May not take rotation or scale into account.
-		 */
-        ScreenEntity *getChildAt(Number x, Number y);
-        
 		/**
 		* If set to true, will block mouse events for underlaying entities.
 		* (NOTE: processInputEvents must be set to true)
@@ -306,47 +202,19 @@
 		bool snapToPixels;
 		bool processInputEvents;
 
-		/**
-		 * Get the hitbox of this ScreenEntity.
-		 * @see setHitBox()
-		 */
-		Rectangle getHitbox() const;
-
-
+		Rectangle getHitbox();
 		void setHitbox(Number width, Number height);
-
-		/**
-		 * Set the hitbox of this ScreenEntity.
-		 *
-		 * The hitbox determines the "physical" dimensions of the entity.
-		 * 
-		 * For instance, when it is checked whether you clicked an entity,
-		 * it is checked whether the mouse was pointing inside the hitbox.
-		 *
-		 * The hitbox is measured from the entity's center, so a hitbox covering
-		 * a square would be `(-square.w/2, -square.h/2, square.w, square.h)`
-		 *
-		 * @param left The left of the hitbox, as measured from the entity's center.
-		 * @param top The top of the hitbox, as measured from the entity's center.
-		 * @param width The width of the hitbox.
-		 * @param height The height of the hitbox.
-		 */
 		void setHitbox(Number width, Number height, Number left, Number top);
 
 		Number width;
 		Number height;
-		
-		/**
-		 * Get the drag status (true if currently being dragged) of the entity.
-		 */
-		bool isDragged();
 
 	protected:
 	
 		bool focusable;
 		bool focusChildren;
 		
-		bool dragged;
+		bool isDragged;
 		Number dragOffsetX;
 		Number dragOffsetY;
 		
diff --git a/Core/Contents/Include/PolyScreenEntityInstance.h b/Core/Contents/Include/PolyScreenEntityInstance.h
--- a/Core/Contents/Include/PolyScreenEntityInstance.h
+++ b/Core/Contents/Include/PolyScreenEntityInstance.h
@@ -32,13 +32,10 @@
 #include "PolyScreenSprite.h"
 #include "PolyParticleEmitter.h"
 #include "PolyParticle.h"
-#include "PolyResource.h"
 #include "PolySound.h"
 
 namespace Polycode {
 
-class ScreenEntityInstanceResourceEntry;
-
 class ScreenEntityInstance : public ScreenEntity {
 	public:
 		ScreenEntityInstance(const String& fileName);
@@ -46,46 +43,25 @@
 		
 		static ScreenEntityInstance *BlankScreenEntityInstance();
 
-		virtual ~ScreenEntityInstance();
+		~ScreenEntityInstance();
 	
-		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
-		
-		void reloadEntityInstance();
-
-		void clearInstance();
+		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 
 		void parseObjectIntoCurve(ObjectEntry *entry, BezierCurve *curve);
 		void applyScreenShape(ObjectEntry *entry, ScreenShape *shape);
-		ScreenEntity *loadObjectEntryIntoEntity(ObjectEntry *entry, ScreenEntity *targetEntity = NULL);
+		ScreenEntity *loadObjectEntryIntoEntity(ObjectEntry *entry);
 		bool loadFromFile(const String& fileName);
 		
-		
-		ScreenEntityInstanceResourceEntry *getResourceEntry();
+		ScreenEntity *getRootEntity();
 		
 		String getFileName() const;
 		
 		bool cloneUsingReload;
 
 		String fileName;
-		
-	protected:
-		
-		ScreenEntityInstanceResourceEntry *resourceEntry;
-		
+
+		ScreenEntity *rootEntity;		
 };
 
-class ScreenEntityInstanceResourceEntry : public Resource {
-	public:
-		ScreenEntityInstanceResourceEntry(ScreenEntityInstance *instance);
-		virtual ~ScreenEntityInstanceResourceEntry();
-		
-		ScreenEntityInstance *getInstance();
-		void reloadResource();
-		
-	protected:
-		ScreenEntityInstance* instance;
-};
-
-
 }
diff --git a/Core/Contents/Include/PolyScreenImage.h b/Core/Contents/Include/PolyScreenImage.h
--- a/Core/Contents/Include/PolyScreenImage.h
+++ b/Core/Contents/Include/PolyScreenImage.h
@@ -63,8 +63,8 @@
 		
 		virtual ~ScreenImage();
 		
-		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 
 		/**
 		* Changes which part of the image is displayed.
diff --git a/Core/Contents/Include/PolyScreenLabel.h b/Core/Contents/Include/PolyScreenLabel.h
--- a/Core/Contents/Include/PolyScreenLabel.h
+++ b/Core/Contents/Include/PolyScreenLabel.h
@@ -45,8 +45,8 @@
 			ScreenLabel(const String& text, int size, const String& fontName = "sans", int amode = 0, bool premultiplyAlpha = false);
 			virtual ~ScreenLabel();		
 		
-			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 					
 			/**
 			* Sets a new text to the screen label.
diff --git a/Core/Contents/Include/PolyScreenManager.h b/Core/Contents/Include/PolyScreenManager.h
--- a/Core/Contents/Include/PolyScreenManager.h
+++ b/Core/Contents/Include/PolyScreenManager.h
@@ -44,7 +44,6 @@
 		void removeScreen(Screen *screen);
 		void addScreen(Screen* screen);
 		void Update();
-		void Render();
 		
 		void handleEvent(Event *event);
 		
diff --git a/Core/Contents/Include/PolyScreenMesh.h b/Core/Contents/Include/PolyScreenMesh.h
--- a/Core/Contents/Include/PolyScreenMesh.h
+++ b/Core/Contents/Include/PolyScreenMesh.h
@@ -24,7 +24,6 @@
 #include "PolyGlobals.h"
 #include "PolyScreenEntity.h"
 #include "PolyMesh.h"
-#include "PolyMaterial.h"
 
 namespace Polycode {
 
@@ -97,31 +96,6 @@
 			void setTexture(Texture *texture);
 			
 			/**
-			* Set material from existing Material instance.
-			* @param material Material to apply.
-			*/												
-			void setMaterial(Material *material);
-
-			/**
-			* Set material by name. You can create materials in material files and name them there, then use this to set a material by name to a scene mesh.
-			* @param materialName Name of material to apply.
-			*/									
-			void setMaterialByName(const String& materialName);
-			
-			/**
-			* Clears the currently applied material
-			*/
-			void clearMaterial();
-			
-			/**
-			* Returns the material applied.
-			*/							
-			Material *getMaterial();			
-			
-			
-			ShaderBinding *getLocalShaderOptions();
-						
-			/**
 			* If this is set to true, the lines in wireframe meshes will be anti-aliased if the support is available in the renderer.
 			*/			
 			bool lineSmooth;
@@ -140,8 +114,6 @@
 		
 		protected:
 		
-			Material *material;
-			ShaderBinding *localShaderOptions;			
 			Mesh *mesh;
 			Texture *texture;
 	};
diff --git a/Core/Contents/Include/PolyScreenShape.h b/Core/Contents/Include/PolyScreenShape.h
--- a/Core/Contents/Include/PolyScreenShape.h
+++ b/Core/Contents/Include/PolyScreenShape.h
@@ -44,8 +44,8 @@
 			*/
 			ScreenShape(int shapeType, Number option1=0, Number option2=0, Number option3=0, Number option4=0);
 		
-			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 				
 			virtual ~ScreenShape();
 			void Render();
diff --git a/Core/Contents/Include/PolyScreenSound.h b/Core/Contents/Include/PolyScreenSound.h
--- a/Core/Contents/Include/PolyScreenSound.h
+++ b/Core/Contents/Include/PolyScreenSound.h
@@ -47,8 +47,8 @@
 			ScreenSound(const String& fileName, Number referenceDistance, Number maxDistance);
 			virtual ~ScreenSound();			
 
-			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+			virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+			virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 
 			void Update();			
 			
diff --git a/Core/Contents/Include/PolyScreenSprite.h b/Core/Contents/Include/PolyScreenSprite.h
--- a/Core/Contents/Include/PolyScreenSprite.h
+++ b/Core/Contents/Include/PolyScreenSprite.h
@@ -75,8 +75,8 @@
 		
 		virtual ~ScreenSprite();
 		
-		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly) const;
-		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const;
+		virtual Entity *Clone(bool deepClone, bool ignoreEditorOnly);
+		virtual void applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly);
 
 		/**
 		* Adds a new animation to the sprite. Animations are added by specifying a list of frame indexes and then can be played back by the specified name.
diff --git a/Core/Contents/Include/PolyShader.h b/Core/Contents/Include/PolyShader.h
--- a/Core/Contents/Include/PolyShader.h
+++ b/Core/Contents/Include/PolyShader.h
@@ -39,34 +39,23 @@
 		public:
 	
 	String name;
-	int type;
-
-	static void *createParamData(int type);
-	
+	String typeString;
+	String valueString;
+	bool isAuto;
+	int autoID;
+	void *defaultData;
+	void *minValue;
+	void *maxValue;	
+	int paramType;
+			
 	static const int PARAM_UNKNOWN = 0;	
-	static const int PARAM_NUMBER = 1;
-	static const int PARAM_VECTOR2 = 2;		
-	static const int PARAM_VECTOR3 = 3;
-	static const int PARAM_COLOR = 4;
-	static const int PARAM_MATRIX = 5;
+	static const int PARAM_Number = 1;
+	static const int PARAM_Vector2 = 2;		
+	static const int PARAM_Vector3 = 3;
+	static const int PARAM_Color = 4;
+	
 	};	
 
-	class _PolyExport ShaderProgram : public Resource {
-		public:
-			ShaderProgram(int type);
-			virtual ~ShaderProgram();
-			
-			virtual void reloadProgram() {}
-			
-			static const int TYPE_VERT = 0;
-			static const int TYPE_FRAG = 1;		
-			
-			int type;
-			
-			void reloadResource();
-			
-	};
-
 	class _PolyExport Shader : public Resource {
 		public:
 			Shader(int type);
@@ -77,13 +66,8 @@
 			const String& getName() const;
 			
 			virtual ShaderBinding *createBinding() = 0;
-			virtual void reload() {}								
-			
-			int getExpectedParamType(String name);
-			
-			virtual void setVertexProgram(ShaderProgram *vp) {}
-			virtual void setFragmentProgram(ShaderProgram *fp) {}
-			
+			virtual void reload() {}
+
 			static const int FIXED_SHADER = 0;
 			static const int MODULE_SHADER = 1;
 
@@ -91,14 +75,11 @@
 			int numAreaLights;
 			
 			std::vector<String> expectedTextures;
-			std::vector<String> expectedCubemaps;			
-			std::vector<ProgramParam> expectedParams;
+			std::vector<ProgramParam> expectedFragmentParams;
+			std::vector<ProgramParam> expectedVertexParams;
 								
 			bool screenShader;
 			
-			ShaderProgram *vp;
-			ShaderProgram *fp;			
-			
 		protected:
 		
 		
@@ -108,17 +89,13 @@
 	
 	class _PolyExport ShaderRenderTarget : public PolyBase {
 		public:
-			ShaderRenderTarget();
-			
 			String id;
 			Number width;
 			Number height;
 			int sizeMode;
-			Texture *texture;			
+			bool hasSize;
+			Texture *texture;
 			
-			Number normalizedWidth;
-			Number normalizedHeight;
-						
 			static const int SIZE_MODE_PIXELS = 0;
 			static const int SIZE_MODE_NORMALIZED = 1;
 	};
@@ -136,7 +113,7 @@
 		void setNumber(Number x)   { memcpy(data, &x, sizeof(x)); }
 		void setVector2(Vector2 x) { memcpy(data, &x, sizeof(x)); }
 		void setVector3(Vector3 x) { memcpy(data, &x, sizeof(x)); }
-		void setColor(Color x)     { static_cast<Color*>(data)->setColor(&x); }
+		void setColor(Color x)     { memcpy(data, &x, sizeof(x)); }
 	};	
 	
 	class RenderTargetBinding : public PolyBase {
@@ -145,10 +122,10 @@
 			String name;
 			int mode;
 			Texture *texture;
+			Number width;
+			Number height;			
 			static const int MODE_IN= 0;
 			static const int MODE_OUT = 1;
-			static const int MODE_COLOR = 2;
-			static const int MODE_DEPTH = 3;			
 	};
 
 	class _PolyExport ShaderBinding : public PolyBase {
@@ -157,11 +134,9 @@
 			virtual ~ShaderBinding();
 
 			virtual Texture *getTexture(const String& name){ return NULL;};
-			virtual Cubemap *getCubemap(const String& name){ return NULL;};			
 			virtual void clearTexture(const String& name){};
-			virtual void clearCubemap(const String& name){};
 			virtual void addTexture(const String& name, Texture *texture)  {};
-			LocalShaderParam *addParam(int type, const String& name);
+			virtual void addParam(const String& type, const String& name, const String& value) {};
 			virtual void addCubemap(const String& name, Cubemap *cubemap) {};
 		
 			unsigned int getNumLocalParams();
@@ -169,7 +144,6 @@
 			LocalShaderParam *getLocalParamByName(const String& name);
 			
 			void addRenderTargetBinding(RenderTargetBinding *binding);
-			void removeRenderTargetBinding(RenderTargetBinding *binding);
 
 			unsigned int getNumRenderTargetBindings();
 			RenderTargetBinding *getRenderTargetBinding(unsigned int index);
@@ -177,12 +151,6 @@
 			unsigned int getNumInTargetBindings();
 			RenderTargetBinding *getInTargetBinding(unsigned int index);
 
-			unsigned int getNumColorTargetBindings();
-			RenderTargetBinding *getColorTargetBinding(unsigned int index);
-
-			unsigned int getNumDepthTargetBindings();
-			RenderTargetBinding *getDepthTargetBinding(unsigned int index);
-
 			unsigned int getNumOutTargetBindings();
 			RenderTargetBinding *getOutTargetBinding(unsigned int index);
 			
@@ -193,8 +161,6 @@
 			std::vector<RenderTargetBinding*> renderTargetBindings;
 			std::vector<RenderTargetBinding*> inTargetBindings;
 			std::vector<RenderTargetBinding*> outTargetBindings;
-			std::vector<RenderTargetBinding*> colorTargetBindings;
-			std::vector<RenderTargetBinding*> depthTargetBindings;			
 	};
 
 }
diff --git a/Core/Contents/Include/PolyString.h b/Core/Contents/Include/PolyString.h
--- a/Core/Contents/Include/PolyString.h
+++ b/Core/Contents/Include/PolyString.h
@@ -1,4 +1,4 @@
-  /*
+/*
  Copyright (C) 2011 by Ivan Safrin
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
@@ -174,7 +174,7 @@
 			* @param value Number to convert.
 			* @return A string converted from the Number.
 			*/																										
-			static String NumberToString(Number value, int precision = 2);
+			static String NumberToString(Number value);
 
 			/**
 			* Convert an integer to a String.
diff --git a/Core/Contents/Include/PolyTexture.h b/Core/Contents/Include/PolyTexture.h
--- a/Core/Contents/Include/PolyTexture.h
+++ b/Core/Contents/Include/PolyTexture.h
@@ -37,8 +37,6 @@
 			Number scrollSpeedX;
 			Number scrollSpeedY;
 			
-			void reloadResource();			
-			
 			virtual void setTextureData(char *data) = 0;
 
 			virtual void recreateFromImageData() = 0;
@@ -48,7 +46,10 @@
 			
 			void setImageData(Image *data);
 		
-			void updateScroll(int elapsed);		
+			void updateScroll(int elapsed);
+			void setResourcePath(const String& newPath);
+			const String& getResourcePath() const;
+		
 			char *getTextureData() const { return textureData;}
 			
 			int getWidth() const;
@@ -65,6 +66,7 @@
 			bool createMipmaps;
 			int width;
 			int height;
+			String resourcePath;
 			Number scrollOffsetX;
 			Number scrollOffsetY;
 	};
diff --git a/Core/Contents/Include/PolyWinCore.h b/Core/Contents/Include/PolyWinCore.h
--- a/Core/Contents/Include/PolyWinCore.h
+++ b/Core/Contents/Include/PolyWinCore.h
@@ -31,9 +31,9 @@
 #include <winsock2.h>
 #include <windows.h>
 #include <windowsx.h>
-#include <winuser.h>
+#include <WinUser.h>
 
-#include <mmsystem.h>
+#include <MMSystem.h>
 #include <regstr.h>
 
 
@@ -179,11 +179,10 @@
 		~Win32Core();
 
 		void enableMouse(bool newval);
-		void captureMouse(bool newval);
 		void warpCursor(int x, int y);
 		unsigned int getTicks();		
 		bool Update();
-		void Render();
+
 		void setVSync(bool vSyncVal);
 
 		void handleKeyDown(LPARAM lParam, WPARAM wParam, wchar_t unicodeChar);
diff --git a/Core/Contents/PolycodeView/Mac OS X/PolycodeView.mm b/Core/Contents/PolycodeView/Mac OS X/PolycodeView.mm
--- a/Core/Contents/PolycodeView/Mac OS X/PolycodeView.mm	
+++ b/Core/Contents/PolycodeView/Mac OS X/PolycodeView.mm	
@@ -527,10 +527,7 @@
 			} else {
 				newEvent.eventCode = InputEvent::EVENT_KEYUP;			
 			}		
-		break;
-		default:
-			// Don't care otherwise
-			break;
+		break;				
 	}
 	newEvent.unicodeChar = 0;
 	
@@ -552,7 +549,7 @@
 	newEvent.keyCode = keymap[[theEvent keyCode]];	
 	
 	NSString *chars = [theEvent characters];
-	NSUInteger numChars = [chars length];
+	unsigned int numChars = [chars length];
 	
 //	NSLog(@"CHARS: %@", [chars characterAtIndex:0]);
 	if(numChars > 0) {
@@ -572,13 +569,14 @@
 		return;
 	
 	core->lockMutex(core->eventMutex);	
+	NSPoint mouseLoc = [self convertPoint:[theEvent locationInWindow] fromView:self];	
 	CocoaEvent newEvent;
 	newEvent.eventGroup = CocoaEvent::INPUT_EVENT;
 	newEvent.eventCode = InputEvent::EVENT_KEYUP;
 	newEvent.keyCode = keymap[[theEvent keyCode]];
 	
 	NSString *chars = [theEvent characters];
-	NSUInteger numChars = [chars length];
+	unsigned int numChars = [chars length];
 	
 	if(numChars > 0)
 		newEvent.unicodeChar = [chars characterAtIndex:0];
diff --git a/Core/Contents/Source/OSBasics.cpp b/Core/Contents/Source/OSBasics.cpp
--- a/Core/Contents/Source/OSBasics.cpp
+++ b/Core/Contents/Source/OSBasics.cpp
@@ -23,12 +23,11 @@
 #include "OSBasics.h"
 #ifdef _WINDOWS
 	#include <windows.h>
-	#include <shellapi.h>
+	#include <Shellapi.h>
 #else
 	#include <dirent.h>
 	#include <sys/types.h>
 	#include <sys/stat.h>
-	#include <unistd.h>
 #endif
 
 #include <vector>
@@ -259,23 +258,6 @@
 	return returnVector;
 }
 
-bool OSBasics::fileExists(const Polycode::String& pathString) {
-	if(PHYSFS_exists(pathString.c_str())) {
-		return true;
-	}
-
-#ifdef _WINDOWS
-	WCHAR tmp[4096];
-	memset(tmp, 0, sizeof(WCHAR)*4096);
-	ctow(tmp, pathString.c_str());
-
-	DWORD dwAttrib = GetFileAttributes(tmp);
-    return (dwAttrib != 0xFFFFFFFF);
-#else
-	return (access(pathString.c_str(), F_OK) != -1);
-#endif
-}
-
 vector<OSFileEntry> OSBasics::parseFolder(const String& pathString, bool showHidden) {
 	vector<OSFileEntry> returnVector;
 	
@@ -356,47 +338,6 @@
 	return returnVector;
 }
 
-time_t OSBasics::getFileTime(const Polycode::String& pathString) {
-
-	String realString;
-	if(PHYSFS_exists(pathString.c_str())) {
-		realString = String(PHYSFS_getRealDir(pathString.c_str())) + "/" + pathString;
-	} else {
-		realString = pathString;
-	}
-
-#ifdef _WINDOWS
-	WCHAR tmp[4096];
-	memset(tmp, 0, sizeof(WCHAR)*4096);
-	ctow(tmp, pathString.c_str());
-	HANDLE hFile = CreateFile(tmp, GENERIC_READ, FILE_SHARE_WRITE | FILE_SHARE_READ | FILE_SHARE_DELETE,
-								NULL, OPEN_EXISTING, 0, NULL);
-								
-	if(hFile == INVALID_HANDLE_VALUE) {
-		return 0;
-	}
-
-	FILETIME lastModifyTime;
-	BOOL result = GetFileTime(hFile, NULL, NULL, &lastModifyTime);
-	if(!result) {
-		return 0;
-	} else {
-		ULARGE_INTEGER ull;
-		ull.LowPart = lastModifyTime.dwLowDateTime;
-		ull.HighPart = lastModifyTime.dwHighDateTime;
-		return ull.QuadPart / 10000000ULL - 11644473600ULL;
-	}
-#else
-	struct stat statbuf;
-	int retVal = stat(realString.c_str(), &statbuf);
-	if (retVal == 0) {
-		return statbuf.st_mtime;
-	} else {
-		return 0;
-	}
-#endif
-}
-
 void OSBasics::removeItem(const String& pathString) {
 #ifdef _WINDOWS
 	 String _tmp = pathString.replace("/", "\\");
diff --git a/Core/Contents/Source/PolyCamera.cpp b/Core/Contents/Source/PolyCamera.cpp
--- a/Core/Contents/Source/PolyCamera.cpp
+++ b/Core/Contents/Source/PolyCamera.cpp
@@ -262,10 +262,10 @@
 	this->parentScene = parentScene;
 }
 
-void Camera::setPostFilterByName(const String& materialName) {
-	Material *shaderMaterial = (Material*) CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_MATERIAL, materialName);
+void Camera::setPostFilter(const String& shaderName) {
+	Material *shaderMaterial = (Material*) CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_MATERIAL, shaderName);
 	if(shaderMaterial)
-		setPostFilter(shaderMaterial);		
+		createPostFilter(shaderMaterial);		
 }
 
 void Camera::removePostFilter() {
@@ -275,22 +275,32 @@
 	}
 }
 
-void Camera::setPostFilter(Material *shaderMaterial) {
+void Camera::createPostFilter(Material *shaderMaterial) {
 	if(!shaderMaterial)
 		return;
 	if(shaderMaterial->getNumShaders() == 0)
 		return;
 		
 	this->filterShaderMaterial = shaderMaterial;
+	
+	// TODO: make it save the textures to resource manager and check if they there
+//	originalSceneTexture = CoreServices::getInstance()->getMaterialManager()->createNewTexture(CoreServices::getInstance()->getCore()->getXRes(), CoreServices::getInstance()->getCore()->getYRes());
+//	zBufferSceneTexture = CoreServices::getInstance()->getMaterialManager()->createFramebufferTexture(CoreServices::getInstance()->getCore()->getXRes(), CoreServices::getInstance()->getCore()->getYRes(), 0);
+
 	if(!originalSceneTexture) {
 		CoreServices::getInstance()->getRenderer()->createRenderTextures(&originalSceneTexture, &zBufferSceneTexture, CoreServices::getInstance()->getCore()->getXRes(), CoreServices::getInstance()->getCore()->getYRes(), shaderMaterial->fp16RenderTargets);
 	}
 	
 	for(int i=0; i < shaderMaterial->getNumShaders(); i++) {
 		ShaderBinding* binding = shaderMaterial->getShader(i)->createBinding();		
+		if(i == 0) {
+			binding->addTexture("screenColorBuffer", originalSceneTexture);
+			binding->addTexture("screenDepthBuffer", zBufferSceneTexture);
+		}
 		localShaderOptions.push_back(binding);
 		binding->addLocalParam("exposure", (void*)&exposureLevel);				
 	}
+	
 
 	_hasFilterShader = true;
 }
@@ -316,36 +326,37 @@
 	Texture *finalTargetZTexture;	
 		
 	if(targetTexture) {	
+		ShaderBinding* binding = localShaderOptions[0];
+		binding->clearTexture("screenColorBuffer");
+		binding->clearTexture("screenDepthBuffer");				
+		binding->addTexture("screenColorBuffer", targetColorTexture);
+		binding->addTexture("screenDepthBuffer", targetZTexture);
+		
 		finalTargetColorTexture = targetColorTexture;
-		finalTargetZTexture = targetZTexture;		
+		finalTargetZTexture = targetZTexture;
+		
 		CoreServices::getInstance()->getRenderer()->setViewportSize(targetTextureWidth, targetTextureHeight);		
 	} else {
+	
+		ShaderBinding* binding = localShaderOptions[0];
+		binding->clearTexture("screenColorBuffer");
+		binding->clearTexture("screenDepthBuffer");				
+		binding->addTexture("screenColorBuffer", originalSceneTexture);
+		binding->addTexture("screenDepthBuffer", zBufferSceneTexture);	
+	
 		finalTargetColorTexture = originalSceneTexture;
-		finalTargetZTexture = zBufferSceneTexture;	
+		finalTargetZTexture = zBufferSceneTexture;
+	
 		CoreServices::getInstance()->getRenderer()->setViewportSize(CoreServices::getInstance()->getRenderer()->getXRes(), CoreServices::getInstance()->getRenderer()->getYRes());
 	}
 	CoreServices::getInstance()->getRenderer()->bindFrameBufferTexture(finalTargetColorTexture);
-	CoreServices::getInstance()->getRenderer()->bindFrameBufferTextureDepth(finalTargetZTexture);
+//	CoreServices::getInstance()->getRenderer()->bindFrameBufferTexture(finalTargetZTexture);	
 	parentScene->Render(this);
 	CoreServices::getInstance()->getRenderer()->unbindFramebuffers();
 
-
 	ShaderBinding* materialBinding;		
 	for(int i=0; i < filterShaderMaterial->getNumShaders(); i++) {
 		materialBinding = filterShaderMaterial->getShaderBinding(i);
-		
-		for(int j=0; j < materialBinding->getNumColorTargetBindings(); j++) {
-			RenderTargetBinding *colorBinding = materialBinding->getColorTargetBinding(j);
-			materialBinding->clearTexture(colorBinding->name);
-			materialBinding->addTexture(colorBinding->name, finalTargetColorTexture);
-		}
-
-		for(int j=0; j < materialBinding->getNumDepthTargetBindings(); j++) {
-			RenderTargetBinding *depthBinding = materialBinding->getDepthTargetBinding(j);
-			materialBinding->clearTexture(depthBinding->name);
-			materialBinding->addTexture(depthBinding->name, finalTargetZTexture);
-		}
-		
 		CoreServices::getInstance()->getRenderer()->applyMaterial(filterShaderMaterial, localShaderOptions[i], i);		
 		if(i==filterShaderMaterial->getNumShaders()-1) {
 				if(targetTexture) {
@@ -364,13 +375,10 @@
 				}
 		} else {
 			for(int j=0; j < materialBinding->getNumOutTargetBindings(); j++) {
-				Texture *bindingTexture = materialBinding->getOutTargetBinding(j)->texture;
-				if(bindingTexture) {
-					CoreServices::getInstance()->getRenderer()->setViewportSize(bindingTexture->getWidth(), bindingTexture->getHeight());
-					CoreServices::getInstance()->getRenderer()->bindFrameBufferTexture(bindingTexture);				
-					CoreServices::getInstance()->getRenderer()->drawScreenQuad(bindingTexture->getWidth(), bindingTexture->getHeight());
-					CoreServices::getInstance()->getRenderer()->unbindFramebuffers();
-				}
+				CoreServices::getInstance()->getRenderer()->setViewportSize(materialBinding->getOutTargetBinding(j)->width, materialBinding->getOutTargetBinding(j)->height);
+				CoreServices::getInstance()->getRenderer()->bindFrameBufferTexture(materialBinding->getOutTargetBinding(j)->texture);
+				CoreServices::getInstance()->getRenderer()->drawScreenQuad(materialBinding->getOutTargetBinding(j)->width, materialBinding->getOutTargetBinding(j)->height);
+				CoreServices::getInstance()->getRenderer()->unbindFramebuffers();
 			}		
 		}
 		CoreServices::getInstance()->getRenderer()->clearShader();
@@ -391,7 +399,7 @@
 
 	Matrix4 camMatrix = getConcatenatedMatrix();
 	CoreServices::getInstance()->getRenderer()->setCameraMatrix(camMatrix);	
-	camMatrix = camMatrix.Inverse();
+	camMatrix = camMatrix.inverse();
 	CoreServices::getInstance()->getRenderer()->multModelviewMatrix(camMatrix);		
 }
 
diff --git a/Core/Contents/Source/PolyCocoaCore.mm b/Core/Contents/Source/PolyCocoaCore.mm
--- a/Core/Contents/Source/PolyCocoaCore.mm
+++ b/Core/Contents/Source/PolyCocoaCore.mm
@@ -21,7 +21,6 @@
 */
 
 #include "PolyCocoaCore.h"
-#import "PolycodeView.h"
 #include <iostream>
 #include <limits.h>
 
@@ -30,44 +29,6 @@
 
 using namespace Polycode;
 
-static bool DisplayModeIs32Bit(CGDisplayModeRef displayMode)
-{
-	bool is32Bit = false;
-	CFStringRef pixelEncoding = CGDisplayModeCopyPixelEncoding(displayMode);
-    if(CFStringCompare(pixelEncoding, CFSTR(IO32BitDirectPixels), 0) == kCFCompareEqualTo)
-        is32Bit = true;
-    CFRelease(pixelEncoding);
-
-	return is32Bit;
-}
-
-static CGDisplayModeRef GetBestDisplayModeForParameters(size_t bitsPerPixel, size_t xRes, size_t yRes)
-{
-	CGDisplayModeRef bestDisplayMode = CGDisplayCopyDisplayMode(CGMainDisplayID());
-	size_t bestWidth = CGDisplayModeGetWidth(bestDisplayMode);
-	size_t bestHeight = CGDisplayModeGetHeight(bestDisplayMode);
-	NSArray* displayModes = (NSArray*)CGDisplayCopyAllDisplayModes(CGMainDisplayID(), NULL);
-	for(NSUInteger i = 0; i < [displayModes count]; ++i)
-	{
-		CGDisplayModeRef candidate = (CGDisplayModeRef)[displayModes objectAtIndex:i];
-		size_t candidateWidth  = CGDisplayModeGetWidth(candidate);
-		size_t candidateHeight = CGDisplayModeGetHeight(candidate);
-		if(!DisplayModeIs32Bit(candidate))
-			continue;
-		if(candidateWidth >= xRes && candidateWidth < bestWidth
-		   && candidateHeight >= yRes && candidateHeight < bestHeight)
-		{
-			CGDisplayModeRelease(bestDisplayMode);
-			bestDisplayMode = candidate;
-			bestWidth = candidateWidth;
-			bestHeight = candidateHeight;
-			CGDisplayModeRetain(bestDisplayMode);
-		}
-	}
-	[displayModes release];
-	return bestDisplayMode;
-}
-
 long getThreadID() {
 	return (long)pthread_self();
 }
@@ -103,11 +64,10 @@
 	context = nil;
 	
 	initTime = mach_absolute_time();					
-
+		
 	renderer = new OpenGLRenderer();
 	services->setRenderer(renderer);			
-	setVideoMode(xRes,yRes,fullScreen, vSync, aaLevel, anisotropyLevel);
-	renderer->Init();
+	setVideoMode(xRes,yRes,fullScreen, vSync, aaLevel, anisotropyLevel);		
 
 	CoreServices::getInstance()->installModule(new GLSLShaderModule());	
 
@@ -119,7 +79,7 @@
     NSArray *types = [NSArray arrayWithObjects:NSStringPboardType, nil];
     [pb declareTypes:types owner:nil];
 	
-	NSString *nsstr = [NSString stringWithCString: str.c_str() encoding:NSUTF8StringEncoding];
+	NSString *nsstr = [NSString stringWithCString: str.c_str()];
 	/*
 	char* data = (char*)str.c_str();
 	unsigned size = str.size() * sizeof(char);
@@ -202,18 +162,8 @@
 //	} else {
 //		CGDisplaySwitchToMode (kCGDirectMainDisplay, CGDisplayBestModeForParameters (kCGDirectMainDisplay, 32, xRes, yRes, NULL) );						
 //	}
-	if(fullScreen) {
-#		if __MAC_OS_X_VERSION_MIN_REQUIRED < 1060
-		{
-			CGDisplaySwitchToMode (kCGDirectMainDisplay, CGDisplayBestModeForParameters (kCGDirectMainDisplay, 32, xRes, yRes, NULL) );
-		}
-#		else
-		{
-			CGDisplayModeRef bestDisplayMode = GetBestDisplayModeForParameters(32, xRes, yRes);
-			CGDisplaySetDisplayMode(CGMainDisplayID(), bestDisplayMode, NULL);
-			CGDisplayModeRelease(bestDisplayMode);
-		}
-#		endif
+	if(fullScreen) {	
+		CGDisplaySwitchToMode (kCGDirectMainDisplay, CGDisplayBestModeForParameters (kCGDirectMainDisplay, 32, xRes, yRes, NULL) );			
 		
 		if(monitorIndex > -1) {
 			if(monitorIndex > [[NSScreen screens] count]-1) {
@@ -249,35 +199,36 @@
 
 void CocoaCore::openFileWithApplication(String file, String application) {
 	NSWorkspace *workspace = [NSWorkspace sharedWorkspace];
-	NSString *filePath = [NSString stringWithCString:file.c_str() encoding:NSUTF8StringEncoding];
-	NSString *appString = [NSString stringWithCString:application.c_str() encoding:NSUTF8StringEncoding];
+	NSString *filePath = [NSString stringWithCString:file.c_str()];
+	NSString *appString = [NSString stringWithCString:application.c_str()];
 		
 	[workspace openFile: filePath withApplication: appString andDeactivate: YES];
 }
 
 void CocoaCore::launchApplicationWithFile(String application, String file) {
 	NSWorkspace *workspace = [NSWorkspace sharedWorkspace];
-	NSURL *url = [NSURL fileURLWithPath: [NSString stringWithCString:application.c_str() encoding:NSUTF8StringEncoding]];
+	NSURL *url = [NSURL fileURLWithPath: [NSString stringWithCString:application.c_str()]];
 
 	NSError *error = nil;
-	NSArray *arguments = [NSArray arrayWithObjects: [NSString stringWithCString:file.c_str() encoding:NSUTF8StringEncoding], nil];
+	NSArray *arguments = [NSArray arrayWithObjects: [NSString stringWithCString:file.c_str()], nil];
 	[workspace launchApplicationAtURL:url options:0 configuration:[NSDictionary dictionaryWithObject:arguments forKey:NSWorkspaceLaunchConfigurationArguments] error:&error];
 //Handle error
 }
 
 String CocoaCore::executeExternalCommand(String command,  String args, String inDirectory) {
 
-	String finalCommand = "\""+command+"\" "+args;
+	String finalCommand = command+" "+args;
 	if(inDirectory != "") {
-		finalCommand = "cd \""+inDirectory+"\" && "+finalCommand;
+		finalCommand = "cd "+inDirectory+" && "+finalCommand;
 	}
 	
-	
 	FILE *fp = popen(finalCommand.c_str(), "r");
 	if(!fp) {
 		return "Unable to execute command";
 	}	
 	
+	int fd = fileno(fp);
+	
 	char path[1024];
 	String retString;
 	
@@ -533,9 +484,10 @@
 	if ( [attachmentPanel runModal] == NSOKButton )
 	{
 		// files and directories selected.
-		NSURL* url = [attachmentPanel URL];
+		NSArray* files = [attachmentPanel filenames];
+		NSString* fileName = [files objectAtIndex:0];
 		[attachmentPanel release];
-		return [[url path] UTF8String];
+		return [fileName UTF8String];
 	} else {
 		[attachmentPanel release];	
 		return [@"" UTF8String];
@@ -562,15 +514,13 @@
 		}
 	}
 	
-	[attachmentPanel setAllowedFileTypes:types];
-	if ( [attachmentPanel runModal] == NSOKButton )
+	if ( [attachmentPanel runModalForDirectory:nil file:nil types:types] == NSOKButton )
 	{
-		NSArray* files = [attachmentPanel URLs];
+		NSArray* files = [attachmentPanel filenames];
 	
 		if(files) {
 			for (int i=0; i < [files count]; i++) {		
-				NSURL* url = [files objectAtIndex:i];
-				NSString* fileName = [url path];
+				NSString* fileName = [files objectAtIndex:i];
 				retVector.push_back([fileName UTF8String]);
 			}
 		}
@@ -579,35 +529,29 @@
 	return retVector;
 }
 
-void CocoaCore::Render() {
+bool CocoaCore::Update() {
+	if(!running)
+		return false;
+	
 	lockMutex(CoreServices::getRenderMutex());	
 	checkEvents();
 	
 	if(!paused) {	
 		renderer->BeginRender();
 	}
-
-	services->Render();
-
+	
+	updateCore();
+		
 	if(!paused) {		
 		renderer->EndRender();
 		[context flushBuffer];
 	}
 	
-	unlockMutex(CoreServices::getRenderMutex());
-}
-
-bool CocoaCore::Update() {
-	if(!running)
-		return false;
-	doSleep();
-		
-	updateCore();		
+	unlockMutex(CoreServices::getRenderMutex());	
+	doSleep();	
 	return running;
 }
 
-
-
 static void hatValueToXY(CFIndex value, CFIndex range, int * outX, int * outY) {
 	if (value == range) {
 		*outX = *outY = 0;
@@ -636,8 +580,6 @@
 }
 
 
-// Marked as unused to avoid a warning, assuming that this is useful for debugging.
-__attribute__((unused))
 static int IOHIDDeviceGetIntProperty(IOHIDDeviceRef deviceRef, CFStringRef key) {
 	CFTypeRef typeRef;
 	int value;
@@ -742,7 +684,9 @@
 CFArrayRef elements;
 	CFIndex elementIndex;
 	IOHIDElementRef element;
+	CFStringRef cfProductName;
 	IOHIDElementType type;
+	char * description;
 	
 	GamepadDeviceEntry *entry = new GamepadDeviceEntry();
 	entry->device = device;
@@ -801,6 +745,7 @@
 
 void CocoaCore::shutdownGamepad() {
 	if (hidManager != NULL) {
+		unsigned int deviceIndex;
 		
 		IOHIDManagerRegisterDeviceMatchingCallback(hidManager, NULL, NULL);
 		IOHIDManagerRegisterDeviceRemovalCallback(hidManager, NULL, NULL);		
diff --git a/Core/Contents/Source/PolyColor.cpp b/Core/Contents/Source/PolyColor.cpp
--- a/Core/Contents/Source/PolyColor.cpp
+++ b/Core/Contents/Source/PolyColor.cpp
@@ -92,19 +92,6 @@
 			ret.b = (b * (1.0-premul)) + (c3.b * premul);
 			ret.a = a + premul;
 		break;
-		case Color::BLEND_ADDITIVE:
-			ret.r = r + (c2.r);
-			ret.g = g + (c2.g);
-			ret.b = b + (c2.b);
-			ret.a = a + premul;
-			if(ret.r > 1.0)
-				ret.r = 1.0;
-			if(ret.g > 1.0)
-				ret.g = 1.0;
-			if(ret.b > 1.0)
-				ret.b = 1.0;
-
-		break;		
 	}
 	
 	if(ret.a > 1.0)
diff --git a/Core/Contents/Source/PolyCore.cpp b/Core/Contents/Source/PolyCore.cpp
--- a/Core/Contents/Source/PolyCore.cpp
+++ b/Core/Contents/Source/PolyCore.cpp
@@ -68,7 +68,7 @@
 		if (fullScreen && !xRes && !yRes) {
 			getScreenInfo(&xRes, &yRes, NULL);
 		}
-		mouseEnabled = true; mouseCaptured = false;
+		mouseEnabled = true;
 		lastSleepFrameTicks = 0;
 		
 		this->monitorIndex = monitorIndex;
@@ -87,10 +87,6 @@
 	void Core::enableMouse(bool newval) {
 		mouseEnabled = newval;
 	}
-
-	void Core::captureMouse(bool newval) {
-		mouseCaptured = newval;
-	}
 	
 	int Core::getNumVideoModes() {
 		return numVideoModes;
@@ -186,12 +182,6 @@
 			unlockMutex(threadedEventMutex);			
 		}
 	}
-	
-	bool Core::updateAndRender() {
-		bool ret = Update();
-		Render();
-		return ret;
-	}
 							
 	void Core::updateCore() {
 		frames++;
@@ -201,7 +191,7 @@
 		if(elapsed > 1000)
 			elapsed = 1000;
 			
-		services->Update(elapsed);
+		services->Update(elapsed, !paused);
 		
 		if(frameTicks-lastFPSTicks >= 1000) {
 			fps = frames;
diff --git a/Core/Contents/Source/PolyCoreInput.cpp b/Core/Contents/Source/PolyCoreInput.cpp
--- a/Core/Contents/Source/PolyCoreInput.cpp
+++ b/Core/Contents/Source/PolyCoreInput.cpp
@@ -61,24 +61,6 @@
 		return &joysticks[index];
 	}	
 	
-	bool CoreInput::getJoystickButtonState(int joystickIndex, int button) {
-		JoystickInfo *info = getJoystickInfoByIndex(joystickIndex);
-		if(info) {
-			return info->joystickButtonState[button];
-		} else {
-			return false;
-		}
-	}
-	
-	Number CoreInput::getJoystickAxisValue(int joystickIndex, int axis) {
-		JoystickInfo *info = getJoystickInfoByIndex(joystickIndex);
-		if(info) {
-			return info->joystickAxisState[axis];
-		} else {
-			return 0.0;
-		}	
-	}
-	
 	JoystickInfo *CoreInput::getJoystickInfoByID(unsigned int deviceID) {
 		for(int i=0;i<joysticks.size();i++) {
 			if(joysticks[i].deviceID == deviceID) {
diff --git a/Core/Contents/Source/PolyCoreServices.cpp b/Core/Contents/Source/PolyCoreServices.cpp
--- a/Core/Contents/Source/PolyCoreServices.cpp
+++ b/Core/Contents/Source/PolyCoreServices.cpp
@@ -97,10 +97,6 @@
 	return config;
 }
 
-Logger *CoreServices::getLogger() {
-	return logger;
-}
-
 void CoreServices::installModule(PolycodeModule *module)  {
 	modules.push_back(module);
 	if(module->requiresUpdate()) {
@@ -122,7 +118,6 @@
 }
 
 CoreServices::CoreServices() : EventDispatcher() {
-	logger = new Logger();
 	resourceManager = new ResourceManager();	
 	config = new Config();
 	materialManager = new MaterialManager();
@@ -214,38 +209,39 @@
 	return renderer;
 }
 
-void CoreServices::Render() {
-	if(renderer->doClearBuffer)		
-		renderer->clearScreen();
-
-	renderer->setPerspectiveMode();
-	sceneManager->renderVirtual();
-	if(renderer->doClearBuffer)
-		renderer->clearScreen();					
-
-	if(drawScreensFirst) {
-		renderer->clearLights();	
-		screenManager->Render();
-		renderer->setPerspectiveMode();
-		sceneManager->Render();	
-	} else {
-		sceneManager->Render();
-		renderer->clearLights();		
-		screenManager->Render();	
-	}
-}
-
-void CoreServices::Update(int elapsed) {
+void CoreServices::Update(int elapsed, bool updateRenderer) {
 	
 	for(int i=0; i < updateModules.size(); i++) {
 		updateModules[i]->Update(elapsed);
 	}
-	resourceManager->Update(elapsed);
-	timerManager->Update();	
-	tweenManager->Update();	
-	materialManager->Update(elapsed);		
-	sceneManager->Update();
-	screenManager->Update();	
+
+	timerManager->Update();
+	
+	tweenManager->Update();
+	
+	if(updateRenderer) {
+		
+	materialManager->Update(elapsed);	
+	if(drawScreensFirst) {
+		if(renderer->doClearBuffer)
+			renderer->clearScreen();	
+		renderer->setPerspectiveMode();
+		sceneManager->UpdateVirtual();
+		if(renderer->doClearBuffer)		
+			renderer->clearScreen();					
+		screenManager->Update();
+		renderer->setPerspectiveMode();
+		sceneManager->Update();	
+	} else {
+		renderer->setPerspectiveMode();
+		sceneManager->UpdateVirtual();
+		if(renderer->doClearBuffer)		
+			renderer->clearScreen();		
+		sceneManager->Update();
+		screenManager->Update();	
+	}
+	
+	}	
 }
 
 SoundManager *CoreServices::getSoundManager() {
diff --git a/Core/Contents/Source/PolyCubemap.cpp b/Core/Contents/Source/PolyCubemap.cpp
--- a/Core/Contents/Source/PolyCubemap.cpp
+++ b/Core/Contents/Source/PolyCubemap.cpp
@@ -25,26 +25,7 @@
 using namespace Polycode;
 
 Cubemap::Cubemap(Texture *t0, Texture *t1, Texture *t2, Texture *t3, Texture *t4, Texture *t5) : Resource(Resource::RESOURCE_CUBEMAP) {
-	textures.push_back(t0);
-	textures.push_back(t1);
-	textures.push_back(t2);
-	textures.push_back(t3);
-	textures.push_back(t4);
-	textures.push_back(t5);	
-}
-
-void Cubemap::setTexture(Texture *texture, int index) {
-	if(index >= 0 && index < 6) {
-		textures[index] = texture;		
-	}	
-}
-
-Texture *Cubemap::getTexture(int index) {
-	if(index >= 0 && index < 6) {
-		return textures[index];
-	} else {
-		return NULL;
-	}
+	
 }
 
 Cubemap::~Cubemap() {
diff --git a/Core/Contents/Source/PolyEntity.cpp b/Core/Contents/Source/PolyEntity.cpp
--- a/Core/Contents/Source/PolyEntity.cpp
+++ b/Core/Contents/Source/PolyEntity.cpp
@@ -59,11 +59,9 @@
 	enableScissor = false;
 	
 	editorOnly = false; 
-
-	tags = NULL;
 }
 
-Entity *Entity::getEntityById(String id, bool recursive) const {
+Entity *Entity::getEntityById(String id, bool recursive) {
 	for(int i=0;i<children.size();i++) {
 		if(children[i]->id == id) {
 			return children[i];
@@ -79,13 +77,13 @@
 	return NULL;
 }
 
-Entity *Entity::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *Entity::Clone(bool deepClone, bool ignoreEditorOnly) {
 	Entity *newEntity = new Entity();
 	applyClone(newEntity, deepClone, ignoreEditorOnly);
 	return newEntity;
 }
 
-void Entity::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void Entity::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	clone->ownsChildren = ownsChildren;
 	clone->position = position;
 	clone->rotation = rotation;
@@ -100,7 +98,7 @@
 	clone->depthWrite = depthWrite;
 	clone->depthTest = depthTest;
 	clone->blendingMode = blendingMode;
-	clone->colorAffectsChildren = colorAffectsChildren;
+	clone->colorAffectsChildren;
 	clone->visibilityAffectsChildren = visibilityAffectsChildren;
 	clone->depthOnly = depthOnly;
 	clone->setUserData(getUserData());
@@ -111,13 +109,8 @@
 	clone->scissorBox = scissorBox;
 	clone->editorOnly = editorOnly;	
 	clone->id = id;
-	if(tags == NULL) {
-		clone->tags = NULL;
-	} else {
-		clone->tags = new std::vector<String>();
-		for(int i=0; i < tags->size(); i++) {	
-			clone->addTag((*tags)[i]);
-		}
+	for(int i=0; i < tags.size(); i++) {	
+		clone->addTag(tags[i]);
 	}
 	clone->setRenderer(renderer);
 
@@ -139,7 +132,7 @@
 	}
 }
 
-std::vector<Entity*> Entity::getEntitiesByTag(String tag, bool recursive) const {
+std::vector<Entity*> Entity::getEntitiesByTag(String tag, bool recursive) {
 
 	std::vector<Entity*> retVector;
 
@@ -162,7 +155,7 @@
 	this->userData = userData;
 }
 
-void *Entity::getUserData() const {
+void *Entity::getUserData() {
 	return userData;
 }
 
@@ -222,7 +215,6 @@
 	for(int i=0;i<children.size();i++) {
 		if(children[i] == entityToRemove) {
 			children.erase(children.begin()+i);
-			return;
 		}
 	}	
 }
@@ -294,7 +286,6 @@
 			delete children[i];
 		}
 	}
-	if(tags) delete tags;
 }
 
 Vector3 Entity::getChildCenter() const {
@@ -405,21 +396,37 @@
 		isScissorEnabled = renderer->isScissorEnabled();
 		oldScissorBox = renderer->getScissorBox();
 		renderer->enableScissor(true);
-
-		Rectangle finalScissorBox = scissorBox;
-
+		
+		Polycode::Rectangle finalScrissorBox = scissorBox;		
+		
 		// make sure that our scissor box is constrained to the parent one if it exists
 		if(isScissorEnabled) {
-			finalScissorBox = finalScissorBox.Clipped(renderer->getScissorBox());
+			if(finalScrissorBox.x < oldScissorBox.x)
+				finalScrissorBox.x = oldScissorBox.x;
+			if(finalScrissorBox.x > oldScissorBox.x + oldScissorBox.w)
+				finalScrissorBox.x = oldScissorBox.x + oldScissorBox.w;
+
+				
+			if(finalScrissorBox.x+finalScrissorBox.w > oldScissorBox.x + oldScissorBox.w)
+				finalScrissorBox.w = oldScissorBox.x - finalScrissorBox.x;
+
+			if(finalScrissorBox.y < oldScissorBox.y)
+				finalScrissorBox.y = oldScissorBox.y;
+			if(finalScrissorBox.y > oldScissorBox.y + oldScissorBox.h)
+				finalScrissorBox.y = oldScissorBox.y + oldScissorBox.h;
+
+			if(finalScrissorBox.y+finalScrissorBox.h > oldScissorBox.y + oldScissorBox.h)
+				finalScrissorBox.h = oldScissorBox.y - finalScrissorBox.y;
+
 		}
-
-		renderer->setScissorBox(finalScissorBox);
+		
+		renderer->setScissorBox(finalScrissorBox);
 	}
 		
 	renderer->pushMatrix();
 	if(ignoreParentMatrix && parentEntity) {
-		renderer->multModelviewMatrix(parentEntity->getConcatenatedMatrix().Inverse());
-//		renderer->setCurrentModelMatrix(parentEntity->getConcatenatedMatrix().Inverse());
+		renderer->multModelviewMatrix(parentEntity->getConcatenatedMatrix().inverse());
+//		renderer->setCurrentModelMatrix(parentEntity->getConcatenatedMatrix().inverse());
 	}
 
 		renderer->multModelviewMatrix(transformMatrix);
@@ -742,36 +749,30 @@
 }
 
 unsigned int Entity::getNumTags() const {
-	if(!tags) return 0;
-	return tags->size();
+	return tags.size();
 }
 
 String Entity::getTagAtIndex(unsigned int index) const {
-	if(!tags) return "";
-	if(index < tags->size())
-		return (*tags)[index];
+	if(index < tags.size())
+		return tags[index];
 	return "";
 }
 
 bool Entity::hasTag(String tag) const {
-	if(!tags) return false;
-	for(int i=0; i < tags->size(); i++) {
-		if((*tags)[i] == tag)
+
+	for(int i=0; i < tags.size(); i++) {
+		if(tags[i] == tag)
 			return true;
 	}
 	return false;
 }
 			
 void Entity::clearTags() {
-	if(!tags) return;
-	tags->clear();
+	tags.clear();
 }
 
 void Entity::addTag(String tag) {
-	if(!tags) tags = new std::vector<String>();
-	if(!hasTag(tag)) {
-		tags->push_back(tag);
-	}
+	tags.push_back(tag);
 }
 
 String Entity::description() {
diff --git a/Core/Contents/Source/PolyFixedShader.cpp b/Core/Contents/Source/PolyFixedShader.cpp
--- a/Core/Contents/Source/PolyFixedShader.cpp
+++ b/Core/Contents/Source/PolyFixedShader.cpp
@@ -45,6 +45,11 @@
 	return textures[0];
 }
 
+void FixedShaderBinding::addParam(const String& type, const String& name, const String& value) {
+
+}
+
+
 FixedShader::FixedShader() : Shader(Shader::FIXED_SHADER) {
 }
 
diff --git a/Core/Contents/Source/PolyGLCubemap.cpp b/Core/Contents/Source/PolyGLCubemap.cpp
--- a/Core/Contents/Source/PolyGLCubemap.cpp
+++ b/Core/Contents/Source/PolyGLCubemap.cpp
@@ -21,61 +21,30 @@
 */
 
 #include "PolyGLCubemap.h"
-#include "PolyTexture.h"
+#include "PolyTexture.h"
 
 using namespace Polycode;
 
 OpenGLCubemap::OpenGLCubemap(Texture *t0, Texture *t1, Texture *t2, Texture *t3, Texture *t4, Texture *t5) : Cubemap(t0,t1,t2,t3,t4,t5) {
 	
-	glCubemapLoaded = false;
-
-	recreateFromTextures();
-}
-
-void OpenGLCubemap::recreateFromTextures() {
-
-	if(glCubemapLoaded) {
-		glDeleteTextures(1, &textureID);
-	}
-
 	glGenTextures(1, &textureID);
 	glBindTexture(GL_TEXTURE_CUBE_MAP, textureID);	
 	
+	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X+0, 0, GL_RGBA, t0->getWidth(), t0->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, t0->getTextureData());
+	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X+1, 0, GL_RGBA, t1->getWidth(), t1->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, t1->getTextureData());
+	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X+2, 0, GL_RGBA, t2->getWidth(), t2->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, t2->getTextureData());
+	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X+3, 0, GL_RGBA, t3->getWidth(), t3->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, t3->getTextureData());
+	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X+4, 0, GL_RGBA, t4->getWidth(), t4->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, t4->getTextureData());	
+	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X+5, 0, GL_RGBA, t5->getWidth(), t5->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, t5->getTextureData());		
 	
-	glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);	
 	glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
 	glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
 	glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
 	glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
-	
-	Texture *tex;
-	
-	tex = getTexture(Cubemap::CUBEMAP_XPOS);
-	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, tex->getWidth(), tex->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, tex->getTextureData());
-
-	tex = getTexture(Cubemap::CUBEMAP_XNEG);	
-	glTexImage2D(GL_TEXTURE_CUBE_MAP_NEGATIVE_X, 0, GL_RGBA, tex->getWidth(), tex->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, tex->getTextureData());
-
-	tex = getTexture(Cubemap::CUBEMAP_YPOS);
-	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_Y, 0, GL_RGBA, tex->getWidth(), tex->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, tex->getTextureData());
-
-	tex = getTexture(Cubemap::CUBEMAP_YNEG);
-	glTexImage2D(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, GL_RGBA, tex->getWidth(), tex->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, tex->getTextureData());
-
-	tex = getTexture(Cubemap::CUBEMAP_ZPOS);
-	glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_Z, 0, GL_RGBA, tex->getWidth(), tex->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, tex->getTextureData());
-
-	tex = getTexture(Cubemap::CUBEMAP_ZNEG);
-	glTexImage2D(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, GL_RGBA, tex->getWidth(), tex->getHeight(), 0, GL_RGBA, GL_UNSIGNED_BYTE, tex->getTextureData());
-	
-		
-	glCubemapLoaded = true;
 }
 
 OpenGLCubemap::~OpenGLCubemap() {
-	if(glCubemapLoaded) {
-		glDeleteTextures(1, &textureID);
-	}
+
 }
 
 GLuint OpenGLCubemap::getTextureID() {
diff --git a/Core/Contents/Source/PolyGLES1Renderer.cpp b/Core/Contents/Source/PolyGLES1Renderer.cpp
--- a/Core/Contents/Source/PolyGLES1Renderer.cpp
+++ b/Core/Contents/Source/PolyGLES1Renderer.cpp
@@ -47,7 +47,7 @@
     glLoadIdentity();
 	gluPerspective(fov,(GLfloat)xRes/(GLfloat)yRes,nearPlane,farPlane);
 	glViewport(0, 0, xRes, yRes);
-	setScissorBox(0, 0, xRex, yRes);
+	glScissor(0, 0, xRes, yRes);
 	
 	glMatrixMode(GL_MODELVIEW);
 	glLineWidth(1);
@@ -132,7 +132,7 @@
 	GLfloat nearPlane[3],farPlane[3];
 	
 	GLfloat mv[16];
-	Matrix4 camInverse = cameraMatrix.Inverse();	
+	Matrix4 camInverse = cameraMatrix.inverse();	
 	Matrix4 cmv;
 	cmv.identity();
 	cmv = cmv * camInverse;
@@ -707,4 +707,4 @@
 
 OpenGLES1Renderer::~OpenGLES1Renderer() {
 	
-}
+}
\ No newline at end of file
diff --git a/Core/Contents/Source/PolyGLRenderer.cpp b/Core/Contents/Source/PolyGLRenderer.cpp
--- a/Core/Contents/Source/PolyGLRenderer.cpp
+++ b/Core/Contents/Source/PolyGLRenderer.cpp
@@ -59,9 +59,6 @@
 PFNGLENABLEVERTEXATTRIBARRAYARBPROC glEnableVertexAttribArrayARB;
 PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
 
-PFNGLGETPROGRAMIVPROC glGetProgramiv;
-PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
-
 // GL_EXT_framebuffer_object
 PFNGLISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
 PFNGLBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
@@ -89,7 +86,8 @@
 	nearPlane = 0.1f;
 	farPlane = 100.0f;
 	verticesToDraw = 0;
-
+	
+	glDisable(GL_SCISSOR_TEST);
 }
 
 void OpenGLRenderer::setClippingPlanes(Number nearPlane_, Number farPlane_) {
@@ -98,15 +96,6 @@
 	Resize(xRes,yRes);
 }
 
-bool OpenGLRenderer::Init() {
-	if(!Renderer::Init())
-		return false;
-
-	glDisable(GL_SCISSOR_TEST);
-
-	return true;
-}
-
 void OpenGLRenderer::initOSSpecific(){
 		
 #ifdef _WINDOWS
@@ -131,10 +120,6 @@
 		glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)wglGetProcAddress("glEnableVertexAttribArrayARB");
 		glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)wglGetProcAddress("glBindAttribLocation");
 
-		
-		glGetProgramiv = (PFNGLGETPROGRAMIVPROC)wglGetProcAddress("glGetProgramiv");
-		glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)wglGetProcAddress("glGetActiveUniform");
-
         glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC)wglGetProcAddress("glIsRenderbufferEXT");
         glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC)wglGetProcAddress("glBindRenderbufferEXT");
         glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC)wglGetProcAddress("glDeleteRenderbuffersEXT");
@@ -168,7 +153,7 @@
     glLoadIdentity();
 	gluPerspective(fov,(GLfloat)xRes/(GLfloat)yRes,nearPlane,farPlane);
 	glViewport(0, 0, xRes, yRes);
-	setScissorBox(Rectangle(0, 0, xRes, yRes));
+	glScissor(0, 0, xRes, yRes);
 	
 	glMatrixMode(GL_MODELVIEW);
 	glLineWidth(1);
@@ -188,7 +173,7 @@
 	GLint numBuffers;
 	glGetIntegerv(GL_MAX_DRAW_BUFFERS, &numBuffers);
 //	Logger::log("MAX_DRAW_BUFFERS: %d \n", numBuffers);
-
+	
 }
 
 void OpenGLRenderer::setDepthFunction(int depthFunction) {
@@ -258,7 +243,7 @@
 	GLdouble nearPlane[3],farPlane[3];
 	
 	GLdouble mv[16];
-	Matrix4 camInverse = cameraMatrix.Inverse();	
+	Matrix4 camInverse = cameraMatrix.inverse();	
 	Matrix4 cmv;
 	cmv.identity();
 	cmv = cmv * camInverse;
@@ -505,6 +490,7 @@
 	
 	if(!orthoMode) {
 		glMatrixMode(GL_PROJECTION);
+		glPushMatrix();
 		glLoadIdentity();
 		glOrtho(-orthoSizeX*0.5,orthoSizeX*0.5,-orthoSizeY*0.5,orthoSizeY*0.5,-farPlane,farPlane);
 		orthoMode = true;
@@ -527,6 +513,7 @@
 	glDisable(GL_LIGHTING);
 	glMatrixMode(GL_PROJECTION);
 	glDisable(GL_CULL_FACE);
+	glPushMatrix();
 	glLoadIdentity();
 		
 	if(centered) {
@@ -554,6 +541,7 @@
 		glEnable (GL_DEPTH_TEST);
 		glEnable(GL_CULL_FACE);
 		glMatrixMode( GL_PROJECTION );
+		glPopMatrix();
 		glMatrixMode( GL_MODELVIEW );
 		orthoMode = false;
 	}
@@ -584,28 +572,28 @@
 	glScalef(scale->x, scale->y, scale->z);
 }
 
-void OpenGLRenderer::bindFrameBufferTextureDepth(Texture *texture) {
-	if(!texture)
-		return;
+void OpenGLRenderer::bindFrameBufferTexture(Texture *texture) {
+	if(currentFrameBufferTexture) {
+		previousFrameBufferTexture = currentFrameBufferTexture;
+	}
 	OpenGLTexture *glTexture = (OpenGLTexture*)texture;
-	glBindRenderbufferEXT(GL_RENDERBUFFER_EXT, glTexture->getFrameBufferID());
-	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	
-}
 
+	glBindFramebufferEXT(GL_FRAMEBUFFER_EXT, glTexture->getFrameBufferID());
+	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
-void OpenGLRenderer::bindFrameBufferTexture(Texture *texture) {
-	if(!texture)
-		return;
-	OpenGLTexture *glTexture = (OpenGLTexture*)texture;
-	glBindFramebufferEXT(GL_FRAMEBUFFER_EXT, glTexture->getFrameBufferID());
-	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	
+	currentFrameBufferTexture = texture;
 }
 
 void OpenGLRenderer::unbindFramebuffers() {
-	glBindFramebufferEXT(GL_FRAMEBUFFER_EXT, 0);
-	glBindRenderbufferEXT(GL_RENDERBUFFER_EXT, 0);
+	glBindFramebufferEXT(GL_FRAMEBUFFER_EXT, 0);	
+	currentFrameBufferTexture = NULL;
+	if(previousFrameBufferTexture) {
+		bindFrameBufferTexture(previousFrameBufferTexture);
+		previousFrameBufferTexture = NULL;
+	}
 }
 
+
 void OpenGLRenderer::createRenderTextures(Texture **colorBuffer, Texture **depthBuffer, int width, int height, bool floatingPointBuffer) {
 			
 	GLuint depthTexture,colorTexture;
@@ -632,7 +620,7 @@
 
 	status = glCheckFramebufferStatusEXT(GL_FRAMEBUFFER_EXT);
 	if(status == GL_FRAMEBUFFER_COMPLETE_EXT) {
-//		Logger::log("color fbo generation successful\n");
+		Logger::log("color fbo generation successful\n");
 	} else {
 		Logger::log("color fbo generation failed\n");	
 	}
@@ -667,7 +655,7 @@
 		status = glCheckFramebufferStatusEXT(GL_FRAMEBUFFER_EXT);
 
 		if(status == GL_FRAMEBUFFER_COMPLETE_EXT) {
-//			Logger::log("depth fbo generation successful\n");
+			Logger::log("depth fbo generation successful\n");
 		} else {
 			Logger::log("depth fbo generation failed\n");	
 		}
diff --git a/Core/Contents/Source/PolyGLSLProgram.cpp b/Core/Contents/Source/PolyGLSLProgram.cpp
--- a/Core/Contents/Source/PolyGLSLProgram.cpp
+++ b/Core/Contents/Source/PolyGLSLProgram.cpp
@@ -26,17 +26,9 @@
 #include "PolyVector2.h"
 #include "PolyColor.h"
 #include "PolyLogger.h"
-#include "PolyCoreServices.h"
-#include "PolyLogger.h"
-#include "PolyGLHeaders.h"
 
 #ifdef _WINDOWS
 #include <windows.h>
-
-// Some shader functions that aren't defined in glext/wglext
-extern PFNGLGETSHADERIVPROC glGetShaderiv;
-extern PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
-
 #endif
 
 #include "PolyGLHeaders.h"
@@ -63,54 +55,86 @@
 
 using namespace Polycode;
 
-GLSLProgram::GLSLProgram(String fileName, int type) : ShaderProgram(type) {
-	program = -1;
-	this->fileName = fileName;
-	reloadProgram();
+GLSLProgram::GLSLProgram(int type) : Resource(Resource::RESOURCE_PROGRAM) {
+	this->type = type;
 }
 
 GLSLProgram::~GLSLProgram() {
 	glDeleteShader(program);
 }
 
-void GLSLProgram::reloadProgram() {
-	if(program != -1)
-		glDeleteShader(program);
+GLSLProgramParam GLSLProgram::addParam(const String& name, const String& typeString, const String& valueString, bool isAuto, int autoID, int paramType, void *defaultData, void *minData, void *maxData) {
+	GLSLProgramParam newParam;
+	newParam.name = name;
+	newParam.typeString = typeString;
+	newParam.valueString = valueString;	
+	newParam.paramType = paramType;
+	newParam.defaultData = defaultData;
+	newParam.minValue = minData;
+	newParam.maxValue = maxData;
+	newParam.isAuto = isAuto;
+	newParam.autoID = autoID;
+
+	params.push_back(newParam);
+	return newParam;
+}
+
+void GLSLProgramParam::createParamData(int *retType, const String& type, const String& value, const String& min, const String& max, void **valueRes, void **minRes, void **maxRes) {
 		
-	OSFILE *file = OSBasics::open(fileName, "r");
-	if (!file) {
-		Logger::log("Error: shader file %s not found\n", fileName.c_str());
-		program = -1;
-		return;
-	}
-	OSBasics::seek(file, 0, SEEK_END);	
-	long progsize = OSBasics::tell(file);
-	OSBasics::seek(file, 0, SEEK_SET);
-	char *buffer = (char*)malloc(progsize+1);
-	memset(buffer, 0, progsize+1);
-	OSBasics::read(buffer, progsize, 1, file);
-	OSBasics::close(file);
-	
-	if(type == GLSLProgram::TYPE_VERT) {
-		program =  glCreateShader(GL_VERTEX_SHADER);
-	} else {
-		program =  glCreateShader(GL_FRAGMENT_SHADER);
-	}
-	
-	glShaderSource(program, 1, (const GLchar**)&buffer, 0);
-	glCompileShader(program);	
-	
-	GLint compiled = true;
-    glGetShaderiv(program, GL_COMPILE_STATUS, &compiled);
-    if(!compiled) {
-        GLint length;
-        GLchar* log;
-        glGetShaderiv(program, GL_INFO_LOG_LENGTH, &length);
-        log = (GLchar*)malloc(length);
-        glGetShaderInfoLog(program, length, &length, log);
-		printf("GLSL ERROR: %s\n", log);
-		CoreServices::getInstance()->getLogger()->logBroadcast("GLSL ERROR:" + String(log));
-        free(log);
-    }	
-	free(buffer);
-}
\ No newline at end of file
+		(*valueRes) = NULL;
+		(*minRes) = NULL;
+		(*maxRes) = NULL;
+						
+		if(type == "Number") {
+			*retType = GLSLProgramParam::PARAM_Number;
+			Number *val = new Number();
+			*val = atof(value.c_str());
+			(*valueRes) = (void*)val;
+			
+			val = new Number();
+			*val = atof(min.c_str());
+			(*minRes) = (void*)val;
+
+			val = new Number();
+			*val = atof(max.c_str());
+			(*maxRes) = (void*)val;			
+			
+			return;		
+		} else if(type == "Vector2") {
+			*retType = GLSLProgramParam::PARAM_Vector2;
+			Vector2 *val = new Vector2();
+			(*valueRes) = (void*)val;
+			vector<String> values = value.split(" ");
+			if(values.size() == 2) {
+				val->set(atof(values[0].c_str()), atof(values[1].c_str()));
+			} else {
+				Logger::log("Error: A Vector2 must have 2 values (%d provided)!\n", values.size());
+			}
+			return;				
+		} else if(type == "Vector3") {
+			*retType = GLSLProgramParam::PARAM_Vector3;
+			Vector3 *val = new Vector3();
+			(*valueRes) = (void*)val;
+			vector<String> values = value.split(" ");
+			if(values.size() == 3) {
+				val->set(atof(values[0].c_str()), atof(values[1].c_str()), atof(values[2].c_str()));
+			} else {
+				Logger::log("Error: A Vector3 must have 3 values (%d provided)!\n", values.size());
+			}
+			return;
+		} else if(type == "Color") {
+			*retType = GLSLProgramParam::PARAM_Color;
+			Color *val = new Color();
+			(*valueRes) = (void*)val;
+			vector<String> values = value.split(" ");
+			if(values.size() == 4) {
+				val->setColor(atof(values[0].c_str()), atof(values[1].c_str()), atof(values[2].c_str()), atof(values[3].c_str()));
+			} else {
+				Logger::log("Error: A Color must have 4 values (%d provided)!\n", values.size());
+			}
+			return;			
+		} else {
+			*retType = GLSLProgramParam::PARAM_UNKNOWN;
+			(*valueRes) =  NULL;
+		}
+}
diff --git a/Core/Contents/Source/PolyGLSLShader.cpp b/Core/Contents/Source/PolyGLSLShader.cpp
--- a/Core/Contents/Source/PolyGLSLShader.cpp
+++ b/Core/Contents/Source/PolyGLSLShader.cpp
@@ -41,8 +41,6 @@
 extern PFNGLUSEPROGRAMPROC glUseProgram;
 extern PFNGLUNIFORM1IPROC glUniform1i;
 extern PFNGLACTIVETEXTUREPROC glActiveTexture;
-extern PFNGLGETPROGRAMIVPROC glGetProgramiv;
-extern PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
 extern PFNGLCREATESHADERPROC glCreateShader;
 extern PFNGLSHADERSOURCEPROC glShaderSource;
 extern PFNGLCOMPILESHADERPROC glCompileShader;
@@ -68,15 +66,6 @@
 	
 }
 
-Cubemap *GLSLShaderBinding::getCubemap(const String& name) {
-	for(int i=0; i < cubemaps.size(); i++) {
-		if(cubemaps[i].name == name) {			
-			return cubemaps[i].cubemap;
-		}
-	}
-	return NULL;
-}
-
 Texture *GLSLShaderBinding::getTexture(const String& name) {
 	for(int i=0; i < textures.size(); i++) {
 		if(textures[i].name == name) {			
@@ -90,6 +79,7 @@
 	GLSLTextureBinding binding;
 	binding.name = name;
 	binding.texture = texture;
+//	binding.vpParam = GLSLGetNamedParameter(glslShader->fp->program, name.c_str());
 	textures.push_back(binding);
 }
 
@@ -97,18 +87,10 @@
 	GLSLCubemapBinding binding;
 	binding.cubemap = cubemap;
 	binding.name = name;
+//	binding.vpParam = GLSLGetNamedParameter(GLSLShader->fp->program, name.c_str());
 	cubemaps.push_back(binding);
 }
 
-void GLSLShaderBinding::clearCubemap(const String& name) {
-	for(int i=0; i < cubemaps.size(); i++) {
-		if(cubemaps[i].name == name) {
-			cubemaps.erase(cubemaps.begin()+i);
-			return;
-		}
-	}
-}
-
 void GLSLShaderBinding::clearTexture(const String& name) {
 	for(int i=0; i < textures.size(); i++) {
 		if(textures[i].name == name) {
@@ -118,139 +100,29 @@
 	}
 }
 
-int GLSLShader::getPolycodeParamType(int glType) {
-	switch(glType) {
-		case GL_FLOAT:
-			return ProgramParam::PARAM_NUMBER;
-		break;
-		case GL_FLOAT_VEC2:
-			return ProgramParam::PARAM_VECTOR2;
-		break;
-		case GL_FLOAT_VEC3:
-			return ProgramParam::PARAM_VECTOR3;		
-		break;
-		case GL_FLOAT_VEC4:
-			return ProgramParam::PARAM_COLOR;
-		break;
-		case GL_INT:
-			return ProgramParam::PARAM_NUMBER;
-		break;
-		case GL_INT_VEC2:
-			return ProgramParam::PARAM_VECTOR2;
-		break;
-		case GL_INT_VEC3:
-			return ProgramParam::PARAM_VECTOR3;		
-		break;
-		case GL_INT_VEC4:
-			return ProgramParam::PARAM_COLOR;		
-		break;
-		case GL_BOOL:
-			return ProgramParam::PARAM_NUMBER;
-		break;
-		case GL_BOOL_VEC2:
-			return ProgramParam::PARAM_VECTOR2;		
-		break;
-		case GL_BOOL_VEC3:
-			return ProgramParam::PARAM_VECTOR3;		
-		break;
-		case GL_BOOL_VEC4:
-			return ProgramParam::PARAM_COLOR;
-		break;
-		case GL_FLOAT_MAT2:
-			return ProgramParam::PARAM_MATRIX;
-		break;
-		case GL_FLOAT_MAT3:
-			return ProgramParam::PARAM_MATRIX;		
-		break;
-		case GL_FLOAT_MAT4:
-			return ProgramParam::PARAM_MATRIX;		
-		break;
-		default:
-			return ProgramParam::PARAM_UNKNOWN;
-		break;
-	}
+
+void GLSLShaderBinding::addParam(const String& type, const String& name, const String& value) {
+	int paramType;
+	void *defaultData;
+	void *minData;
+	void *maxData;		
+	GLSLProgramParam::createParamData(&paramType, type, value, "", "", &defaultData,&minData, &maxData);
+	LocalShaderParam *newParam = new LocalShaderParam;
+	newParam->data = defaultData;
+	newParam->name = name;
+	localParams.push_back(newParam);
 }
 
 void GLSLShader::linkProgram() {
-	expectedParams.clear();
-	expectedTextures.clear();
-	expectedCubemaps.clear();
-
 	shader_id = glCreateProgram();
-    glAttachShader(shader_id, ((GLSLProgram*)fp)->program);
-    glAttachShader(shader_id, ((GLSLProgram*)vp)->program);	
-	glBindAttribLocation(shader_id, 6, "vTangent");	
-    glLinkProgram(shader_id);
-	if(vp) {
-		vp->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);
-	}
-	if(fp) {
-		fp->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);
-	}
+    glAttachShader(shader_id, fp->program);
+    glAttachShader(shader_id, vp->program);
 	
-	int total = -1;
-	glGetProgramiv( shader_id, GL_ACTIVE_UNIFORMS, &total ); 
-	for(int i=0; i < total; i++)  {
-		int name_len=-1, num=-1;
-		GLenum type = GL_ZERO;
-		char name[128];
-		glGetActiveUniform(shader_id, GLuint(i), sizeof(name)-1, &name_len, &num, &type, name );
-		name[name_len] = 0;
-		
-		if(!(String(name).find("gl_") == 0)) {
-		switch(type) {
-			case GL_SAMPLER_2D:
-				expectedTextures.push_back(String(name));
-				printf("expectedTextures: %s\n", name);
-			break;
-			case GL_SAMPLER_CUBE:
-				expectedCubemaps.push_back(String(name));
-			break;			
-			default:
-				ProgramParam param;
-				param.name = String(name);
-				param.type = getPolycodeParamType(type);
-				expectedParams.push_back(param);
-			break;
-		}
-		}
-	}	
+	glBindAttribLocation(shader_id, 6, "vTangent");
 	
-	dispatchEvent(new Event(), Event::RESOURCE_RELOAD_EVENT);
+    glLinkProgram(shader_id);
 }
 
-void GLSLShader::unlinkProgram() {
-	if(vp) {
-		vp->removeAllHandlersForListener(this);
-	}
-	if(fp) {
-		fp->removeAllHandlersForListener(this);
-	}
-	glDetachShader(shader_id, ((GLSLProgram*)fp)->program);
-    glDetachShader(shader_id, ((GLSLProgram*)vp)->program);
-	glDeleteProgram(shader_id);	
-}
-
-void GLSLShader::handleEvent(Event *event) {
-	if(event->getEventCode() == Event::RESOURCE_RELOAD_EVENT && (event->getDispatcher() == vp || event->getDispatcher() == fp)) {
-		unlinkProgram();
-		linkProgram();
-	}
-}
-
-void GLSLShader::setVertexProgram(ShaderProgram *vp) {
-	unlinkProgram();
-	this->vp = vp;
-	linkProgram();
-}
-
-void GLSLShader::setFragmentProgram(ShaderProgram *fp) {
-	unlinkProgram();
-	this->fp = fp;
-	linkProgram();
-}
-
-
 GLSLShader::GLSLShader(GLSLProgram *vp, GLSLProgram *fp) : Shader(Shader::MODULE_SHADER) {
 	this->vp = vp;
 	this->fp = fp;
@@ -264,7 +136,9 @@
 }
 
 GLSLShader::~GLSLShader() {
-	unlinkProgram();
+	glDetachShader(shader_id, fp->program);
+    glDetachShader(shader_id, vp->program);
+	glDeleteProgram(shader_id);	
 }
 
 ShaderBinding *GLSLShader::createBinding() {
diff --git a/Core/Contents/Source/PolyGLSLShaderModule.cpp b/Core/Contents/Source/PolyGLSLShaderModule.cpp
--- a/Core/Contents/Source/PolyGLSLShaderModule.cpp
+++ b/Core/Contents/Source/PolyGLSLShaderModule.cpp
@@ -29,7 +29,6 @@
 
 #include "PolyGLSLShaderModule.h"
 #include "PolyCoreServices.h"
-#include "PolyCore.h"
 #include "PolyResourceManager.h"
 #include "PolyRenderer.h"
 #include "PolyGLSLProgram.h"
@@ -112,31 +111,16 @@
 	return "glsl";
 }
 
-Shader *GLSLShaderModule::createShader(String name, String vpName, String fpName) {
-
-	GLSLShader *retShader = NULL;
-
-	GLSLProgram *vp = NULL;
-	GLSLProgram *fp = NULL;
-
-	vp = (GLSLProgram*)CoreServices::getInstance()->getResourceManager()->getResourceByPath(vpName);
-	fp = (GLSLProgram*)CoreServices::getInstance()->getResourceManager()->getResourceByPath(fpName);
-		
-	if(vp != NULL && fp != NULL) {
-		GLSLShader *shader = new GLSLShader(vp,fp);
-		shader->setName(name);
-		retShader = shader;
-		shaders.push_back((Shader*)shader);
-	}
-	return retShader;
-}
-
 Shader *GLSLShaderModule::createShader(TiXmlNode *node) {
-	TiXmlNode* pChild;
+	TiXmlNode* pChild, *pChild2, *pChild3;	
 	GLSLProgram *vp = NULL;
 	GLSLProgram *fp = NULL;
 	GLSLShader *retShader = NULL;
-			
+	
+	std::vector<String> expectedTextures;
+	std::vector<ProgramParam> expectedFragmentParams;	
+	std::vector<ProgramParam> expectedVertexParams;
+		
 	TiXmlElement *nodeElement = node->ToElement();
 	if (!nodeElement) return NULL; // Skip comment nodes
 	
@@ -145,36 +129,51 @@
 		if (!pChildElement) continue; // Skip comment nodes
 		
 		if(strcmp(pChild->Value(), "vp") == 0) {
-			String vpFileName = String(pChildElement->Attribute("source"));
-			vp = (GLSLProgram*)CoreServices::getInstance()->getResourceManager()->getResourceByPath(vpFileName);
-			if(!vp) {
-				vp = (GLSLProgram*)CoreServices::getInstance()->getMaterialManager()->createProgramFromFile(vpFileName);
-				if(vp) {
-					vp->setResourcePath(vpFileName);
-					OSFileEntry entry = OSFileEntry(vpFileName, OSFileEntry::TYPE_FILE);
-					vp->setResourceName(entry.name);
-					CoreServices::getInstance()->getResourceManager()->addResource(vp);
+			vp = (GLSLProgram*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_PROGRAM, String(pChildElement->Attribute("source")));
+			if(vp) {
+				for (pChild2 = pChild->FirstChild(); pChild2 != 0; pChild2 = pChild2->NextSibling()) {
+					if(strcmp(pChild2->Value(), "params") == 0) {
+						for (pChild3 = pChild2->FirstChild(); pChild3 != 0; pChild3 = pChild3->NextSibling()) {
+							if(strcmp(pChild3->Value(), "param") == 0) {
+								expectedVertexParams.push_back(addParamToProgram(vp,pChild3));
+							}
+						}
+					}
 				}
 			}
 		}
 		if(strcmp(pChild->Value(), "fp") == 0) {
-			String fpFileName = String(pChildElement->Attribute("source"));		
-			fp = (GLSLProgram*)CoreServices::getInstance()->getResourceManager()->getResourceByPath(fpFileName);
-			if(!fp) {
-				fp = (GLSLProgram*)CoreServices::getInstance()->getMaterialManager()->createProgramFromFile(fpFileName);
-				if(fp) {
-					fp->setResourcePath(fpFileName);
-					OSFileEntry entry = OSFileEntry(fpFileName, OSFileEntry::TYPE_FILE);					
-					fp->setResourceName(entry.name);
-					CoreServices::getInstance()->getResourceManager()->addResource(fp);				
+			fp = (GLSLProgram*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_PROGRAM, String(pChildElement->Attribute("source")));
+			if(fp) {
+				for (pChild2 = pChild->FirstChild(); pChild2 != 0; pChild2 = pChild2->NextSibling()) {
+					if(strcmp(pChild2->Value(), "params") == 0) {
+						for (pChild3 = pChild2->FirstChild(); pChild3 != 0; pChild3 = pChild3->NextSibling()) {
+							if(strcmp(pChild3->Value(), "param") == 0) {
+								expectedFragmentParams.push_back(addParamToProgram(fp,pChild3));	
+							}
+						}
+					}
+					if(strcmp(pChild2->Value(), "textures") == 0) {
+						for (pChild3 = pChild2->FirstChild(); pChild3 != 0; pChild3 = pChild3->NextSibling()) {
+							if(strcmp(pChild3->Value(), "texture") == 0) {
+								TiXmlElement *texNodeElement = pChild3->ToElement();
+								if (texNodeElement) {
+									expectedTextures.push_back(String(texNodeElement->Attribute("name")));
+								}
+							}
+						}
+					}					
 				}
-			}			
+			}
 		}
 		
 	}
 	if(vp != NULL && fp != NULL) {
 		GLSLShader *cgShader = new GLSLShader(vp,fp);
 		cgShader->setName(String(nodeElement->Attribute("name")));
+		cgShader->expectedTextures = expectedTextures;
+		cgShader->expectedVertexParams = expectedVertexParams;
+		cgShader->expectedFragmentParams = expectedFragmentParams;				
 		retShader = cgShader;
 		shaders.push_back((Shader*)cgShader);
 	}
@@ -186,51 +185,48 @@
 	glUseProgram(0);
 }
 
-void GLSLShaderModule::updateGLSLParam(Renderer *renderer, GLSLShader *glslShader, ProgramParam &param, ShaderBinding *materialOptions, ShaderBinding *localOptions) {
+void GLSLShaderModule::updateGLSLParam(Renderer *renderer, GLSLShader *glslShader, GLSLProgramParam &param, ShaderBinding *materialOptions, ShaderBinding *localOptions) {
 	
-		LocalShaderParam *localParam = NULL;		
-		localParam = materialOptions->getLocalParamByName(param.name);
+		void *paramData = param.defaultData;
+		LocalShaderParam *localParam = materialOptions->getLocalParamByName(param.name);
+		if(localParam) {
+			paramData = localParam->data;
+		}
 		
-		// local options override material options.
-		LocalShaderParam *localOptionsParam = localOptions->getLocalParamByName(param.name);
-		if(localOptionsParam) {
-			localParam = localOptionsParam;
+		localParam = localOptions->getLocalParamByName(param.name);
+		if(localParam) {
+			paramData = localParam->data;
 		}
-
-		int paramLocation = glGetUniformLocation(glslShader->shader_id, param.name.c_str());
-					
-		switch(param.type) {
-			case ProgramParam::PARAM_NUMBER:
-				if(localParam) {
-					glUniform1f(paramLocation, localParam->getNumber());				
-				} else {
-					glUniform1f(paramLocation, 0.0f);
-				}
-			break;
-			case ProgramParam::PARAM_VECTOR2:
-				if(localParam) {
-					Vector2 vec2 = localParam->getVector2();
-					glUniform2f(paramLocation, vec2.x, vec2.y);
-				} else {
-					glUniform2f(paramLocation, 0.0f, 0.0f);
-				}				
-			break;
-			case ProgramParam::PARAM_VECTOR3:
-				if(localParam) {
-					Vector3 vec3 = localParam->getVector3();
-					glUniform3f(paramLocation, vec3.x, vec3.y, vec3.z);
-				} else {
-					glUniform3f(paramLocation, 0.0f, 0.0f, 0.0f);
-				}
-			break;
-			case ProgramParam::PARAM_COLOR:
-				if(localParam) {
-					Color color = localParam->getColor();
-					glUniform4f(paramLocation, color.r, color.g, color.b, color.a);
-				} else {
-					glUniform4f(paramLocation, 0.0f, 0.0f, 0.0f, 0.0f);
-				}
-			break;				
+		
+		switch(param.paramType) {
+			case GLSLProgramParam::PARAM_Number:
+			{
+				Number *fval;			
+				fval = (Number*)paramData;
+				int paramLocation = glGetUniformLocation(glslShader->shader_id, param.name.c_str());
+				glUniform1f(paramLocation, *fval);
+				break;
+			}
+			case GLSLProgramParam::PARAM_Vector2:
+			{
+				Vector2 *fval2 = (Vector2*)paramData;
+				int paramLocation = glGetUniformLocation(glslShader->shader_id, param.name.c_str());
+				glUniform2f(paramLocation, fval2->x, fval2->y);				break;				
+			}			
+			case GLSLProgramParam::PARAM_Vector3:
+			{
+				Vector3 *fval3 = (Vector3*)paramData;
+				int paramLocation = glGetUniformLocation(glslShader->shader_id, param.name.c_str());
+				glUniform3f(paramLocation, fval3->x,fval3->y,fval3->z);
+				break;				
+			}
+			case GLSLProgramParam::PARAM_Color:
+			{
+				Color *col = (Color*)paramData;
+				int paramLocation = glGetUniformLocation(glslShader->shader_id, param.name.c_str());
+				glUniform4f(paramLocation, col->r, col->g, col->b, col->a);
+				break;				
+			}
 		}
 }
 
@@ -272,7 +268,7 @@
 		LightInfo light;
 		if(i < numRendererAreaLights) {
 			light = areaLights[i];
-			light.position = renderer->getCameraMatrix().Inverse() * light.position;
+			light.position = renderer->getCameraMatrix().inverse() * light.position;
 			ambientVal[0] = renderer->ambientColor.r;
 			ambientVal[1] = renderer->ambientColor.g;
 			ambientVal[2] = renderer->ambientColor.b;										
@@ -322,8 +318,8 @@
 			light = spotLights[i];
 			pos = light.position;
 			dir = light.dir;						
-			pos = renderer->getCameraMatrix().Inverse() * pos;
-			dir = renderer->getCameraMatrix().Inverse().rotateVector(dir);
+			pos = renderer->getCameraMatrix().inverse() * pos;
+			dir = renderer->getCameraMatrix().inverse().rotateVector(dir);
 			
 			ambientVal[0] = renderer->ambientColor.r;
 			ambientVal[1] = renderer->ambientColor.g;
@@ -422,75 +418,127 @@
 		
 	GLSLShaderBinding *cgBinding = (GLSLShaderBinding*)material->getShaderBinding(shaderIndex);
 	
-	for(int i=0; i < glslShader->expectedParams.size(); i++) {
-		ProgramParam param = glslShader->expectedParams[i];
+	for(int i=0; i < glslShader->vp->params.size(); i++) {
+		GLSLProgramParam param = glslShader->vp->params[i];
 		updateGLSLParam(renderer, glslShader, param, material->getShaderBinding(shaderIndex), localOptions);
 	}
-		
+	
+	for(int i=0; i < glslShader->fp->params.size(); i++) {
+		GLSLProgramParam param = glslShader->fp->params[i];
+		updateGLSLParam(renderer, glslShader, param, material->getShaderBinding(shaderIndex), localOptions);
+	}	
+	
 	for(int i=0; i < cgBinding->textures.size(); i++) {
-		OpenGLTexture *glTexture = (OpenGLTexture*)cgBinding->textures[i].texture;	
-		if(glTexture) {		
-			int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->textures[i].name.c_str());
-			glUniform1i(texture_location, textureIndex);
-			glActiveTexture(GL_TEXTURE0 + textureIndex);		
-			glBindTexture(GL_TEXTURE_2D, glTexture->getTextureID());
-			textureIndex++;
-		}
+		int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->textures[i].name.c_str());
+		glUniform1i(texture_location, textureIndex);
+		glActiveTexture(GL_TEXTURE0 + textureIndex);		
+		glBindTexture(GL_TEXTURE_2D, ((OpenGLTexture*)cgBinding->textures[i].texture)->getTextureID());	
+		textureIndex++;
 	}	
 	
 		
 	for(int i=0; i < cgBinding->cubemaps.size(); i++) {
-		OpenGLCubemap *glCubemap = (OpenGLCubemap*)cgBinding->cubemaps[i].cubemap;
-		if(glCubemap) {
-			int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->cubemaps[i].name.c_str());
-			glUniform1i(texture_location, textureIndex);		
-			glActiveTexture(GL_TEXTURE0 + textureIndex);				
-			glBindTexture(GL_TEXTURE_CUBE_MAP, glCubemap->getTextureID());
-			textureIndex++;
-		}
+		int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->cubemaps[i].name.c_str());
+		glUniform1i(texture_location, textureIndex);
+		
+		glActiveTexture(GL_TEXTURE0 + textureIndex);	
+			
+		glBindTexture(GL_TEXTURE_CUBE_MAP, ((OpenGLCubemap*)cgBinding->cubemaps[i].cubemap)->getTextureID());	
+		textureIndex++;
 	}	
 	
 	cgBinding = (GLSLShaderBinding*)localOptions;
 	for(int i=0; i < cgBinding->textures.size(); i++) {
-		OpenGLTexture *glTexture = (OpenGLTexture*)cgBinding->textures[i].texture;
-		if(glTexture) {		
-			int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->textures[i].name.c_str());
-			glUniform1i(texture_location, textureIndex);
-			glActiveTexture(GL_TEXTURE0 + textureIndex);		
-			glBindTexture(GL_TEXTURE_2D, glTexture->getTextureID());	
-			textureIndex++;
-		}
+		int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->textures[i].name.c_str());
+		glUniform1i(texture_location, textureIndex);
+		glActiveTexture(GL_TEXTURE0 + textureIndex);		
+		glBindTexture(GL_TEXTURE_2D, ((OpenGLTexture*)cgBinding->textures[i].texture)->getTextureID());	
+		textureIndex++;
 	}		
 
-	for(int i=0; i < cgBinding->cubemaps.size(); i++) {
-		OpenGLCubemap *glCubemap = (OpenGLCubemap*)cgBinding->cubemaps[i].cubemap;	
-		if(glCubemap) {
-			int texture_location = glGetUniformLocation(glslShader->shader_id, cgBinding->cubemaps[i].name.c_str());
-			glUniform1i(texture_location, textureIndex);		
-			glActiveTexture(GL_TEXTURE0 + textureIndex);				
-			glBindTexture(GL_TEXTURE_CUBE_MAP, glCubemap->getTextureID());
-			textureIndex++;
-		}
-	}	
-
 		 
 	return true;
 }
 
+GLSLProgramParam GLSLShaderModule::addParamToProgram(GLSLProgram *program,TiXmlNode *node) {
+		bool isAuto = false;
+		int autoID = 0;
+		int paramType = GLSLProgramParam::PARAM_UNKNOWN;
+		void *defaultData = NULL;
+		void *minData = NULL;
+		void *maxData = NULL;
+		
+		TiXmlElement *nodeElement = node->ToElement();
+		if (!nodeElement) {
+			GLSLProgramParam::createParamData(&paramType, "Number", "0.0", "0.0", "0.0", &defaultData, &minData, &maxData);		
+			return program->addParam("Unknown", "Number", nodeElement->Attribute("default"), isAuto, autoID, paramType, defaultData, minData, maxData); // Skip comment nodes
+		}
+
+		isAuto = false;
+		
+		if(nodeElement->Attribute("auto")) {
+			if(strcmp(nodeElement->Attribute("auto"), "true") == 0) {
+				isAuto = true;
+			}
+		}
+		
+		GLSLProgramParam::createParamData(&paramType, nodeElement->Attribute("type"), nodeElement->Attribute("default"), nodeElement->Attribute("min"), nodeElement->Attribute("max"), &defaultData, &minData, &maxData);
+		
+		return program->addParam(nodeElement->Attribute("name"), nodeElement->Attribute("type"), nodeElement->Attribute("default"), isAuto, autoID, paramType, defaultData, minData, maxData);
+}
+
 void GLSLShaderModule::reloadPrograms() {
 	for(int i=0; i < programs.size(); i++) {
 		GLSLProgram *program = programs[i];
-		program->reloadProgram();	
+		recreateGLSLProgram(program, program->getResourcePath(), program->type);	
 	}	
 }
 
+void GLSLShaderModule::recreateGLSLProgram(GLSLProgram *prog, const String& fileName, int type) {
+	
+	OSFILE *file = OSBasics::open(fileName, "r");
+	OSBasics::seek(file, 0, SEEK_END);	
+	long progsize = OSBasics::tell(file);
+	OSBasics::seek(file, 0, SEEK_SET);
+	char *buffer = (char*)malloc(progsize+1);
+	memset(buffer, 0, progsize+1);
+	OSBasics::read(buffer, progsize, 1, file);
+	OSBasics::close(file);
+	
+	if(type == GLSLProgram::TYPE_VERT) {
+		prog->program =  glCreateShader(GL_VERTEX_SHADER);
+	} else {
+		prog->program =  glCreateShader(GL_FRAGMENT_SHADER);
+	}
+	
+	glShaderSource(prog->program, 1, (const GLchar**)&buffer, 0);
+	glCompileShader(prog->program);	
+	
+	GLint compiled = true;
+    glGetShaderiv(prog->program, GL_COMPILE_STATUS, &compiled);
+    if(!compiled) {
+        GLint length;
+        GLchar* log;
+        glGetShaderiv(prog->program, GL_INFO_LOG_LENGTH, &length);
+        log = (GLchar*)malloc(length);
+        glGetShaderInfoLog(prog->program, length, &length, log);
+		printf("GLSL ERROR: %s\n", log);
+        free(log);
+    }		
+		
+	
+	free(buffer);		
+	
+}
+
 GLSLProgram *GLSLShaderModule::createGLSLProgram(const String& fileName, int type) {
-	GLSLProgram *prog = new GLSLProgram(fileName, type);	
+	GLSLProgram *prog = new GLSLProgram(type);	
+	recreateGLSLProgram(prog, fileName, type);	
 	programs.push_back(prog);
 	return prog;
 }
 
-ShaderProgram* GLSLShaderModule::createProgramFromFile(const String& extension, const String& fullPath) {
+Resource* GLSLShaderModule::createProgramFromFile(const String& extension, const String& fullPath) {
 	if(extension == "vert") {
 		Logger::log("Adding GLSL vertex program %s\n", fullPath.c_str());				
 		return createGLSLProgram(fullPath, GLSLProgram::TYPE_VERT);
diff --git a/Core/Contents/Source/PolyGLTexture.cpp b/Core/Contents/Source/PolyGLTexture.cpp
--- a/Core/Contents/Source/PolyGLTexture.cpp
+++ b/Core/Contents/Source/PolyGLTexture.cpp
@@ -62,9 +62,8 @@
 	
 	Number anisotropy = CoreServices::getInstance()->getRenderer()->getAnisotropyAmount();
 	
-	if(glTextureLoaded) {
+	if(glTextureLoaded)
 		glDeleteTextures(1, &textureID);
-	}
 	
 	glGenTextures(1, &textureID);
 	glBindTexture(GL_TEXTURE_2D, textureID);
@@ -84,7 +83,7 @@
 			}
 		
 			if(createMipmaps) {
-				glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+				glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR_MIPMAP_LINEAR);
 				glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
 				if(textureData) {
 					gluBuild2DMipmaps(GL_TEXTURE_2D, glTextureFormat, width, height, glTextureType, pixelType, textureData );
diff --git a/Core/Contents/Source/PolyImage.cpp b/Core/Contents/Source/PolyImage.cpp
--- a/Core/Contents/Source/PolyImage.cpp
+++ b/Core/Contents/Source/PolyImage.cpp
@@ -27,7 +27,6 @@
 #include "PolyLogger.h"
 #include "OSBasics.h"
 #include "PolyPerlin.h"
-#include <algorithm>
 
 using namespace Polycode;
 
@@ -118,34 +117,38 @@
 	return imageData;
 }
 
-char *Image::getPixelsInRect(int x, int y, int width, int height) {
-	transformCoordinates(&x, &y, &width, &height);
+char *Image::getPixelsInRect(unsigned int x, unsigned int y, unsigned int width, unsigned int height) {
 	char *retBuf = (char*) malloc(pixelSize * width * height);
 	memset(retBuf, 0, pixelSize * width * height);
 	
 	if(x < this->width-1 && y < this->height-1) {
-
-		width = std::min(width, this->width - x);
-		height = std::min(height, this->height - y);
+		
+		unsigned int xAmt;
+		unsigned int yAmt;	
+		if(x + width > this->width) {
+			xAmt = this->width - x;
+		} else {
+			xAmt = width;
+		}
 
-		for(int i=0; i < height; i++) {
+		if(y + height > this->height) {
+			yAmt = this->height - y;
+		} else {
+			yAmt = height;
+		}
+
+		for(int i=0; i < yAmt; i++) {
 			long srcOffset = ((pixelSize*this->width) * (y+i)) + (pixelSize*x);
-			long dstOffset = (pixelSize*width) * i;
-			memcpy(retBuf + dstOffset, imageData+srcOffset, pixelSize * width);
+			long dstOffset = (pixelSize*xAmt) * i;
+			memcpy(retBuf + dstOffset, imageData+srcOffset, pixelSize * xAmt);
 		}	
 	}
 		
 	return retBuf;
 }
 
-Image *Image::getImagePart(Rectangle subRect) {
-	char *newData = getPixelsInRect( (int) subRect.x, (int) subRect.y, (int) subRect.w, (int) subRect.h);
-	return new Image(newData, subRect.w, subRect.h, this->imageType);
-}
-
 
 Color Image::getPixel(int x, int y) {
-	transformCoordinates(&x, &y);
 	if(x < 0 || x >= width || y < 0 || y >= height)
 		return Color(0,0,0,0);
 	unsigned int *imageData32 = (unsigned int*)imageData;	
@@ -159,22 +162,22 @@
 	return Color(((Number)tr)/255.0f, ((Number)tg)/255.0f, ((Number)tb)/255.0f,((Number)ta)/255.0f);
 }
 
-int Image::getWidth() const {
+unsigned int Image::getWidth() const {
 	return width;
 }
 
-int Image::getHeight() const {
+unsigned int Image::getHeight() const {
 	return height;
 }
 
-void Image::createEmpty(int width, int height) {
+void Image::createEmpty(unsigned int width, unsigned int height) {
 	free(imageData);
 		
 	imageData = (char*)malloc(width*height*pixelSize);
 	this->width = width;
 	this->height = height;
 	
-	fill(Color(0,0,0,0));
+	fill(0,0,0,0);
 }
 
 void Image::perlinNoise(int seed, bool alpha) {
@@ -200,7 +203,7 @@
 //	SDL_SaveBMP(image, fileName.c_str());
 }
 
-void Image::fillRect(int x, int y, int w, int h, Color col) {
+void Image::drawRect(int x, int y, int w, int h, Color col) {
 	for(int i=0; i < w; i++) {
 		for(int j=0; j < h; j++) {
 			setPixel(x+i,y+j,col);
@@ -209,7 +212,6 @@
 }
 
 void Image::setPixel(int x, int y, Color col) {
-	transformCoordinates(&x, &y);
 	if(x < 0 || x >= width || y < 0 || y >= height)
 		return;
 
@@ -218,12 +220,12 @@
 }
 
 
-void Image::moveBrush(int x, int y) {
+void Image::move(int x, int y) {
 	brushPosX += x;
-	brushPosY -= y;
+	brushPosY += y;
 }
 
-void Image::moveBrushTo(int x, int y) {
+void Image::moveTo(int x, int y) {
 	brushPosX = x;
 	brushPosY = y;
 }
@@ -237,12 +239,11 @@
 	return brushPosY;
 }
 
-void Image::drawLineTo(int x, int y, Color col) {
-	drawLine(brushPosX, brushPosY, brushPosX+x, brushPosY+y, col);
+void Image::lineTo(int x, int y, Color col) {
+	line(brushPosX, brushPosY, brushPosX+x, brushPosY+y, col);
 }
 
 void Image::setPixel(int x, int y, Number r, Number g, Number b, Number a) {
-	transformCoordinates(&x, &y);
 	if(x < 0 || x > width || y < 0 || y > height)
 		return;
 
@@ -616,7 +617,7 @@
 	*v2 = tv;
 }
 
-void Image::drawLine(int x0, int y0, int x1, int y1, Color col) {
+void Image::line(int x0, int y0, int x1, int y1, Color col) {
 	bool steep = abs(y1 - y0) > abs(x1 - x0);
 	if(steep) {
 		swap(&x0, &y0);
@@ -653,7 +654,8 @@
 	}
 }
 
-void Image::fill(Color color) {
+void Image::fill(Number r, Number g, Number b, Number a) {
+	Color color = Color(r,g,b,a);
 	unsigned int val = color.getUint();
 	unsigned int *imageData32 = (unsigned int*) imageData;
 	for(int i=0; i< width*height; i++) {
@@ -784,35 +786,35 @@
 	
 	infile = OSBasics::open(fileName.c_str(), "rb");
 	if (!infile) {
-		Logger::log("Error opening png file (\"%s\")\n", fileName.c_str());
+		Logger::log("Error opening png file\n");	
 		return false;
 	}
 	
 	OSBasics::read(sig, 1, 8, infile);
 	
 	if (!png_check_sig((unsigned char *) sig, 8)) {
-		Logger::log("Error reading png signature (\"%s\")\n", fileName.c_str());
+		Logger::log("Error reading png signature\n");
 		OSBasics::close(infile);
 		return false;
 	}
 
 	png_ptr = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
 	if (!png_ptr) {
-		Logger::log("Error creating png struct (\"%s\")\n", fileName.c_str());
+		Logger::log("Error creating png struct\n");
 		OSBasics::close(infile);
 		return false;    /* out of memory */
 	}
 	
 	info_ptr = png_create_info_struct(png_ptr);
 	if (!info_ptr) {
-		Logger::log("Error creating info struct (\"%s\")\n", fileName.c_str());
+		Logger::log("Error creating info struct\n");		
 		png_destroy_read_struct(&png_ptr, (png_infopp) NULL, (png_infopp) NULL);
 		OSBasics::close(infile);
 		return false;    /* out of memory */
 	}
 	
 	if (setjmp(png_jmpbuf(png_ptr))) {
-		Logger::log("Error setting jump thingie (\"%s\")\n", fileName.c_str());
+		Logger::log("Error setting jump thingie\n");
 		png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 		OSBasics::close(infile);
 		return false;
@@ -856,13 +858,13 @@
 	
 	/* Allocate the image_data buffer. */
 	if ((image_data = (char *) malloc(rowbytes * height))==NULL) {
-		Logger::log("Error allocating image memory (\"%s\")\n", fileName.c_str());
+		Logger::log("Error allocating image memory\n");		
 		png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 		return false;
 	}
 	
 	if ((row_pointers = (png_bytepp)malloc(height*sizeof(png_bytep))) == NULL) {
-		Logger::log("Error allocating image memory (\"%s\")\n", fileName.c_str());
+		Logger::log("Error allocating image memory\n");
 		png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 		free(image_data);
 		image_data = NULL;
@@ -881,11 +883,3 @@
 	imageData = image_data;
 	return true;
 }
-
-void Image::transformCoordinates(int *x, int *y) {
-	*y = this->height - *y - 1;
-}
-
-void Image::transformCoordinates(int *x, int *y, int *w, int *h) {
-	*y = this->height - *h - *y - 1;
-}
diff --git a/Core/Contents/Source/PolyLabel.cpp b/Core/Contents/Source/PolyLabel.cpp
--- a/Core/Contents/Source/PolyLabel.cpp
+++ b/Core/Contents/Source/PolyLabel.cpp
@@ -58,8 +58,9 @@
 }
 
 
-Label::Label(Font *font, const String& text, int size, int antiAliasMode, bool premultiplyAlpha) : Image(), _optionsChanged(false) {
+Label::Label(Font *font, const String& text, int size, int antiAliasMode, bool premultiplyAlpha) : Image() {
 		setPixelType(Image::IMAGE_RGBA);
+		
 		this->font = font;
 		this->size = size;
 		this->premultiplyAlpha = premultiplyAlpha;
@@ -78,7 +79,6 @@
 
 void Label::setSize(int newSize) {
 	size = newSize;
-	_optionsChanged	= true;
 }
 
 int Label::getAntialiasMode() const {
@@ -87,7 +87,6 @@
 
 void Label::setAntialiasMode(int newMode) {
 	antiAliasMode = newMode;
-	_optionsChanged	= true;	
 }
 
 int Label::getTextWidthForString(const String& text) {
@@ -187,7 +186,6 @@
 	if(!newFont)
 		return;
 	font = newFont;
-	_optionsChanged	= true;	
 }
 
 const String& Label::getText() const {
@@ -196,12 +194,10 @@
 
 void Label::clearColors() {
 	colorRanges.clear();
-	_optionsChanged = true;
 }
 
 void Label::setColorForRange(Color color, unsigned int rangeStart, unsigned int rangeEnd) {
 	colorRanges.push_back(ColorRange(color, rangeStart, rangeEnd));
-	_optionsChanged = true;	
 }
 
 Color Label::getColorForIndex(unsigned int index) {
@@ -399,12 +395,8 @@
 	}
 }
 
-bool Label::optionsChanged() {
-	return _optionsChanged;
-}
+void Label::setText(const String& text) {
 
-void Label::setText(const String& text) {
-	
 	if(!font)
 		return;
 	if(!font->isValid())
@@ -426,5 +418,4 @@
 	
 	createEmpty(textWidth,textHeight);	
 	renderGlyphs(&labelData);
-	_optionsChanged = false;	
 }
diff --git a/Core/Contents/Source/PolyLogger.cpp b/Core/Contents/Source/PolyLogger.cpp
--- a/Core/Contents/Source/PolyLogger.cpp
+++ b/Core/Contents/Source/PolyLogger.cpp
@@ -28,34 +28,13 @@
 
 using namespace Polycode;
 
-LoggerEvent::LoggerEvent(String message) : Event() {
-	this->message = message;
-}
-
-LoggerEvent::~LoggerEvent() {
-
-}
-
-
-Logger::Logger() : EventDispatcher() {
-
-}
-
-Logger::~Logger() {
-
-}
-
-void Logger::logBroadcast(String message) {
-	dispatchEvent(new LoggerEvent(message), Event::NOTIFY_EVENT);
-	Logger::log(message.c_str());
-}
-
 void Logger::logw(const char *str) {
 	std::wcout << str << std::endl;
 }
 
 void Logger::log(const char *format, ...) {
 	va_list args;
+
 	va_start(args, format);
 	vfprintf(stderr, format, args);
 	va_end(args);
diff --git a/Core/Contents/Source/PolyMaterial.cpp b/Core/Contents/Source/PolyMaterial.cpp
--- a/Core/Contents/Source/PolyMaterial.cpp
+++ b/Core/Contents/Source/PolyMaterial.cpp
@@ -25,8 +25,6 @@
 #include "PolyShader.h"
 #include "PolyRenderer.h"
 #include "PolyCoreServices.h"
-#include "PolyCore.h"
-#include "PolyTexture.h"
 
 using namespace Polycode;
 
@@ -35,7 +33,6 @@
 	fp16RenderTargets = false;
 	shaderModule = NULL;
 	blendingMode = Renderer::BLEND_MODE_NORMAL;
-	screenMaterial = false;
 }
 
 Material::~Material() {
@@ -56,10 +53,6 @@
 		delete materialShaders[i];
 	}
 	*/
-	
-	for(int i=0; i < materialShaders.size(); i++)	{
-		materialShaders[i]->removeAllHandlersForListener(this);
-	}	
 	materialShaders.clear();
 
 	for(int i=0; i < shaderBindings.size(); i++)	{
@@ -72,108 +65,28 @@
 	}
 	renderTargets.clear();		
 }
-
-void Material::recreateRenderTargets() {
-	for(int i=0; i < renderTargets.size(); i++) {
-		recreateRenderTarget(renderTargets[i]);
-	}
-}
-
-void Material::recreateRenderTarget(ShaderRenderTarget *renderTarget) {
-	int textureWidth;
-	int textureHeight;
-	Texture *newTexture;
-	
-	if(renderTarget->sizeMode == ShaderRenderTarget::SIZE_MODE_NORMALIZED) {
-		Number safeWidth = renderTarget->width;
-		Number safeHeight = renderTarget->height;		
-		if(safeWidth > 1.0)
-			safeWidth = 1.0;
-		if(safeHeight > 1.0)
-			safeHeight = 1.0;
-			
-		if(safeWidth < 0.0)
-			safeWidth = 0.0;
-		if(safeHeight < 0.0)
-			safeHeight = 0.0;
-		
-		if(renderTarget->normalizedWidth > 0 && renderTarget->normalizedHeight > 0) {
-			textureWidth = (int) (renderTarget->normalizedWidth * safeWidth);
-			textureHeight = (int) (renderTarget->normalizedHeight * safeHeight);		
-		} else {
-			textureWidth = (int) (CoreServices::getInstance()->getCore()->getXRes() * safeWidth);
-			textureHeight = (int) (CoreServices::getInstance()->getCore()->getYRes() * safeHeight);
-		}
-	} else {
-		textureWidth = (int)renderTarget->width;
-		textureHeight = (int)renderTarget->height;		
-	}
-	
-	CoreServices::getInstance()->getRenderer()->createRenderTextures(&newTexture, NULL, textureWidth, textureHeight, fp16RenderTargets);
-	newTexture->setResourceName(renderTarget->id);
-	
-	Texture *oldTexture = renderTarget->texture;
-	renderTarget->texture = newTexture;
-
-	if(oldTexture) {	
-		for(int i=0; i < shaderBindings.size(); i++) {
-				
-			for(int j=0; j < shaderBindings[i]->getNumRenderTargetBindings(); j++) {
-				if(shaderBindings[i]->getRenderTargetBinding(j)->texture == oldTexture) {
-					shaderBindings[i]->getRenderTargetBinding(j)->texture = newTexture;
-					shaderBindings[i]->clearTexture(shaderBindings[i]->getRenderTargetBinding(j)->name);
-					shaderBindings[i]->addTexture(shaderBindings[i]->getRenderTargetBinding(j)->name, newTexture);					
-				}
-			}			
-		}
-		
-		CoreServices::getInstance()->getRenderer()->destroyTexture(oldTexture);
-	}
-}
-
-void Material::handleEvent(Event *event) {
-	std::vector<Shader*> _materialShaders = materialShaders;
-	clearShaders();
-	for(int i=0; i < _materialShaders.size(); i++)	{
-		ShaderBinding *newShaderBinding = _materialShaders[i]->createBinding();				
-		addShader(_materialShaders[i], newShaderBinding);
-	}	
-	dispatchEvent(new Event(), Event::RESOURCE_RELOAD_EVENT);	
-}
-
-void Material::removeShader(int shaderIndex) {
-	if(shaderIndex >= 0 && shaderIndex < materialShaders.size()) {
-		materialShaders.erase(materialShaders.begin() + shaderIndex);
-		shaderBindings.erase(shaderBindings.begin() + shaderIndex);		
-	}
-}
-
-void Material::addShaderAtIndex(Shader *shader,ShaderBinding *shaderBinding, int shaderIndex) {
-	materialShaders.insert(materialShaders.begin()+shaderIndex, shader);
-	shaderBindings.insert(shaderBindings.begin()+shaderIndex, shaderBinding);
-	
-	shader->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);	
-	CoreServices::getInstance()->getRenderer()->setRendererShaderParams(shader, shaderBinding);	
-	
-	for(int i=0; i < shader->expectedParams.size(); i++) {
-		if(!shaderBinding->getLocalParamByName(shader->expectedParams[i].name)) {
-			shaderBinding->addParam(shader->expectedParams[i].type, shader->expectedParams[i].name);
-		}
-	}
-}
 			
 void Material::addShader(Shader *shader,ShaderBinding *shaderBinding) {
 	materialShaders.push_back(shader);
 	shaderBindings.push_back(shaderBinding);
 	
-	shader->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);	
-	CoreServices::getInstance()->getRenderer()->setRendererShaderParams(shader, shaderBinding);	
+	for(int i=0; i < shader->expectedFragmentParams.size(); i++) {
+		if(!shaderBinding->getLocalParamByName(shader->expectedFragmentParams[i].name)) {
+		if(!shader->expectedFragmentParams[i].isAuto) {
+			shaderBinding->addParam(shader->expectedFragmentParams[i].typeString, shader->expectedFragmentParams[i].name, shader->expectedFragmentParams[i].valueString);
+		}
+		}
+	}		
 	
-	for(int i=0; i < shader->expectedParams.size(); i++) {
-		if(!shaderBinding->getLocalParamByName(shader->expectedParams[i].name)) {
-			shaderBinding->addParam(shader->expectedParams[i].type, shader->expectedParams[i].name);
+	for(int i=0; i < shader->expectedVertexParams.size(); i++) {
+		if(!shaderBinding->getLocalParamByName(shader->expectedVertexParams[i].name)) {
+		if(!shader->expectedVertexParams[i].isAuto) {	
+			shaderBinding->addParam(shader->expectedVertexParams[i].typeString, shader->expectedVertexParams[i].name, shader->expectedVertexParams[i].valueString);
+		}
 		}
 	}	
+	
+	CoreServices::getInstance()->getRenderer()->setRendererShaderParams(shader, shaderBinding);	
 }
 
 
@@ -216,11 +129,3 @@
 ShaderRenderTarget *Material::getShaderRenderTarget(unsigned int index) {
 	return renderTargets[index];
 }
-
-void Material::removeShaderRenderTarget(int index) {
-	if(index >= 0 && index < renderTargets.size()) {
-		ShaderRenderTarget *renderTarget = renderTargets[index];
-		renderTargets.erase(renderTargets.begin() + index);
-		delete renderTarget;
-	}
-}
diff --git a/Core/Contents/Source/PolyMaterialManager.cpp b/Core/Contents/Source/PolyMaterialManager.cpp
--- a/Core/Contents/Source/PolyMaterialManager.cpp
+++ b/Core/Contents/Source/PolyMaterialManager.cpp
@@ -36,8 +36,6 @@
 
 MaterialManager::MaterialManager() {
 	premultiplyAlphaOnLoad = false;
-	clampDefault = false;
-	mipmapsDefault = true;
 }
 
 MaterialManager::~MaterialManager() {
@@ -80,34 +78,11 @@
 	}
 }
 
-ShaderProgram *MaterialManager::createProgramFromFile(String programPath) {
-	OSFileEntry entry(programPath, OSFileEntry::TYPE_FILE);
-	
-	for(int m=0; m < shaderModules.size(); m++) {
-		PolycodeShaderModule *shaderModule = shaderModules[m];
-		if(shaderModule->acceptsExtension(entry.extension)) {
-			ShaderProgram *newProgram = shaderModule->createProgramFromFile(entry.extension, entry.fullPath);
-			if(newProgram) {
-				newProgram->setResourcePath(programPath);
-			}
-			return newProgram;
-		}
-	}
-	return NULL;
-}
-
 void MaterialManager::addShaderModule(PolycodeShaderModule *module) {
 	shaderModules.push_back(module);
 }
 
-#define DEFAULT_TEXTURE "default/default.png"
-
 Texture *MaterialManager::createTextureFromFile(const String& fileName, bool clamp, bool createMipmaps) {
-	if(fileName.size() == 0) {
-		Logger::log("empty texture filename, using default texture.\n");
-		return getTextureByResourcePath(DEFAULT_TEXTURE);
-	}
-
 	Texture *newTexture;
 	newTexture = getTextureByResourcePath(fileName);
 	if(newTexture) {
@@ -120,14 +95,18 @@
 			image->premultiplyAlpha();
 		}
 		newTexture = createTexture(image->getWidth(), image->getHeight(), image->getPixels(), clamp, createMipmaps);
-		newTexture->setResourcePath(fileName);
-		CoreServices::getInstance()->getResourceManager()->addResource(newTexture);		
 	} else {
-		Logger::log("Error loading image (\"%s\"), using default texture.\n", fileName.c_str());		
-		newTexture = getTextureByResourcePath(DEFAULT_TEXTURE);
+		Logger::log("Error loading image, using default texture.\n");
+		delete image;		
+		newTexture = getTextureByResourcePath("default/default.png");
+		return newTexture;
 	}
 		
 	delete image;
+
+//	vector<String> bits = fileName.split("/");
+	
+	newTexture->setResourcePath(fileName);
 	return newTexture;
 }
 
@@ -138,7 +117,7 @@
 
 Texture *MaterialManager::createNewTexture(int width, int height, bool clamp, bool createMipmaps, int type) {
 	Image *newImage = new Image(width, height, type);
-	newImage->fill(Color(1,1,1,1));
+	newImage->fill(1,1,1,1);
 	Texture *retTexture = createTextureFromImage(newImage, clamp, createMipmaps);
 	delete newImage;
 	return retTexture;
@@ -169,6 +148,10 @@
 	}
 }
 
+void MaterialManager::registerShader(Shader *shader) {
+	shaders.push_back(shader);
+}
+
 unsigned int MaterialManager::getNumShaders() {
 	return shaders.size();
 }
@@ -180,25 +163,6 @@
 		return NULL;
 }
 
-Shader *MaterialManager::createShader(String shaderType, String name, String vpName, String fpName, bool screenShader) {
-	Shader *retShader = NULL;
-	
-	for(int m=0; m < shaderModules.size(); m++) {
-		PolycodeShaderModule *shaderModule = shaderModules[m];
-		if(shaderModule->getShaderType() == shaderType) {
-			retShader = shaderModule->createShader(name, vpName, fpName);
-		}
-	}
-	
-	if(retShader) {
-		retShader->screenShader = screenShader;
-		retShader->numAreaLights = 0;
-		retShader->numSpotLights = 0;
-	}
-	
-	return retShader;
-}
-
 Shader *MaterialManager::createShaderFromXMLNode(TiXmlNode *node) {
 	TiXmlElement *nodeElement = node->ToElement();
 	if (!nodeElement) return NULL; // Skip comment nodes
@@ -207,6 +171,7 @@
 	
 	if(nodeElement->Attribute("type")) {
 		String shaderType = nodeElement->Attribute("type");
+//		Logger::log("Attempting to create %s shader\n", shaderType.c_str());
 		for(int m=0; m < shaderModules.size(); m++) {
 			PolycodeShaderModule *shaderModule = shaderModules[m];
 			if(shaderModule->getShaderType() == shaderType) {
@@ -279,20 +244,21 @@
 	Cubemap *newCubemap = NULL;
 	
 	String name = nodeElement->Attribute("name");
-	String xPos = nodeElement->Attribute("xPos");
-	String xNeg = nodeElement->Attribute("xNeg");
-	String yPos = nodeElement->Attribute("yPos");
-	String yNeg = nodeElement->Attribute("yNeg");
-	String zPos = nodeElement->Attribute("zPos");				
-	String zNeg = nodeElement->Attribute("zNeg");
-		
+	String mapString = nodeElement->GetText();
+	
+	vector<String> maps = mapString.split(",");	
+	if(maps.size() != 6) {
+		Logger::log("Error: A cubemap must contain 6 images \n");
+		return NULL;
+	}
+	
 	newCubemap = CoreServices::getInstance()->getRenderer()->createCubemap(
-		CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(xPos),
-		CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(xNeg),
-		CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(yPos),
-		CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(yNeg),
-		CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(zPos),
-		CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(zNeg)
+							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, maps[0]),
+							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, maps[1]),
+							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, maps[2]),
+							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, maps[3]),
+							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, maps[4]),
+							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, maps[5])
 	);
 	newCubemap->setResourceName(name);
 	return newCubemap;
@@ -302,59 +268,6 @@
 	materials.push_back(material);
 }
 
-void MaterialManager::addShader(Shader *shader) {
-	shaders.push_back(shader);
-}
-
-std::vector<Shader*> MaterialManager::loadShadersFromFile(String fileName) {
-	std::vector<Shader*> retVector;
-	
-	TiXmlDocument doc(fileName.c_str());
-	doc.LoadFile();
-	
-	if(doc.Error()) {
-		Logger::log("XML Error: %s\n", doc.ErrorDesc());
-	} else {
-		TiXmlElement *mElem = doc.RootElement()->FirstChildElement("shaders");
-		if(mElem) {
-			TiXmlNode* pChild;					
-			for (pChild = mElem->FirstChild(); pChild != 0; pChild = pChild->NextSibling()) {	
-				Shader *newShader = createShaderFromXMLNode(pChild);
-				if(newShader != NULL) {
-					Logger::log("Adding shader %s\n", newShader->getName().c_str());
-					newShader->setResourceName(newShader->getName());
-					retVector.push_back(newShader);
-				}
-			}
-		}
-	}
-	return retVector;
-}
-
-std::vector<Cubemap*> MaterialManager::loadCubemapsFromFile(String fileName) {
-	std::vector<Cubemap*> retVector;
-	
-	TiXmlDocument doc(fileName.c_str());
-	doc.LoadFile();
-	
-	if(doc.Error()) {
-		Logger::log("XML Error: %s\n", doc.ErrorDesc());
-	} else {
-		TiXmlElement *mElem = doc.RootElement()->FirstChildElement("cubemaps");
-		if(mElem) {
-			TiXmlNode* pChild;					
-			for (pChild = mElem->FirstChild(); pChild != 0; pChild = pChild->NextSibling()) {
-				Cubemap *newCubemap = cubemapFromXMLNode(pChild);
-				if (newCubemap) {
-					retVector.push_back(newCubemap);
-				}
-			}
-		}
-	}
-	
-	return retVector;
-}
-
 std::vector<Material*> MaterialManager::loadMaterialsFromFile(String fileName) {
 	std::vector<Material*> retVector;
 	
@@ -403,15 +316,10 @@
 	
 	vector<Shader*> materialShaders;
 	vector<ShaderBinding*> newShaderBindings;
-	vector<ShaderRenderTarget*> renderTargets;
+	vector<ShaderRenderTarget*> renderTargets;	
 
 	Material *newMaterial = new Material(mname);
 	
-	if(nodeElement->Attribute("screen")) {
-		if(String(nodeElement->Attribute("screen")) == "true") {
-			newMaterial->screenMaterial = true;
-		}
-	}	
 	
 	if(nodeElement->Attribute("blendingMode")) {
 		newMaterial->blendingMode = atoi(nodeElement->Attribute("blendingMode"));
@@ -444,19 +352,24 @@
 						newTarget->height = atof(pChildElement->Attribute("height"));	
 						if(pChildElement->Attribute("sizeMode")) {
 							if(strcmp(pChildElement->Attribute("sizeMode"), "normalized") == 0) {
-								newTarget->sizeMode = ShaderRenderTarget::SIZE_MODE_NORMALIZED;	
 								if(newTarget->width > 1.0f)
 									newTarget->width = 1.0f;
 								if(newTarget->height > 1.0f)
 									newTarget->height = 1.0f;
+									
+								newTarget->width = ((Number)CoreServices::getInstance()->getRenderer()->getXRes()) * newTarget->width;
+								newTarget->height = ((Number)CoreServices::getInstance()->getRenderer()->getYRes()) * newTarget->height;
 							}						
 						}
-					}
-					
-					newTarget->normalizedWidth = -1;
-					newTarget->normalizedHeight = -1;					
-					newMaterial->recreateRenderTarget(newTarget);					
+					}						
+//					Texture *newTexture = CoreServices::getInstance()->getMaterialManager()->createNewTexture(newTarget->width, newTarget->height, true);
+					Texture *newTexture, *temp;
+					CoreServices::getInstance()->getRenderer()->createRenderTextures(&newTexture, &temp, (int)newTarget->width, (int)newTarget->height, newMaterial->fp16RenderTargets);
+					newTexture->setResourceName(newTarget->id);
+					//CoreServices::getInstance()->getResourceManager()->addResource(newTexture);
+					newTarget->texture = newTexture;
 					renderTargets.push_back(newTarget);
+
 				}
 			}
 		}	
@@ -483,53 +396,9 @@
 
 							if(strcmp(pChild2->Value(), "param") == 0){
 								String pname =  pChild2Element->Attribute("name");
-								
-								if(!CoreServices::getInstance()->getRenderer()->getDataPointerForName(pname)) {								
-								String pvalue =  pChild2Element->Attribute("value");																
-								int type = materialShader->getExpectedParamType(pname);								
-								LocalShaderParam *param = newShaderBinding->addParam(type, pname);
-								
-								
-								if(param) {
-									switch(type) {
-										case ProgramParam::PARAM_NUMBER:
-										{
-											param->setNumber(atof(pvalue.c_str()));
-										}
-										break;
-										case ProgramParam::PARAM_VECTOR2:
-										{
-											std::vector<String> values = pvalue.split(" ");
-											if(values.size() == 2) {
-												param->setVector2(Vector2(atof(values[0].c_str()), atof(values[1].c_str())));
-											} else {
-												printf("Material parameter error: A Vector2 must have 2 values (%d provided)!\n", (int)values.size());
-											}
-										}											
-										break;
-										case ProgramParam::PARAM_VECTOR3:
-										{
-											std::vector<String> values = pvalue.split(" ");
-											if(values.size() == 3) {
-												param->setVector3(Vector3(atof(values[0].c_str()), atof(values[1].c_str()), atof(values[2].c_str())));
-											} else {
-												printf("Material parameter error: A Vector3 must have 3 values (%d provided)!\n", (int)values.size());
-											}
-										}										
-										break;
-										case ProgramParam::PARAM_COLOR:
-										{
-											std::vector<String> values = pvalue.split(" ");
-											if(values.size() == 4) {
-												param->setColor(Color(atof(values[0].c_str()), atof(values[1].c_str()), atof(values[2].c_str()), atof(values[3].c_str())));
-											} else {
-												printf("Material parameter error: A Vector3 must have 3 values (%d provided)!\n", (int)values.size());
-											}
-										}										
-										break;										
-									}
-									}
-								}
+								String ptype =  pChild2Element->Attribute("type");
+								String pvalue =  pChild2Element->Attribute("value");
+								newShaderBinding->addParam(ptype, pname, pvalue);
 							}						
 						}
 					}
@@ -549,21 +418,21 @@
 								}
 								String mode = pChild2Element->Attribute("mode");
 								if(strcmp(mode.c_str(), "in") == 0) {
-									newBinding->mode = RenderTargetBinding::MODE_IN;			
-								} else if(strcmp(mode.c_str(), "color") == 0) {
-									newBinding->mode = RenderTargetBinding::MODE_COLOR;
-								} else if(strcmp(mode.c_str(), "depth") == 0) {
-									newBinding->mode = RenderTargetBinding::MODE_DEPTH;
+									newBinding->mode = RenderTargetBinding::MODE_IN;
 								} else {
 									newBinding->mode = RenderTargetBinding::MODE_OUT;								
 								}
 																
 								newShaderBinding->addRenderTargetBinding(newBinding);
+								//Texture *texture =  (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, newBinding->id);
+//								newBinding->texture = texture;
 								
 								for(int l=0; l < renderTargets.size(); l++) {
 									if(renderTargets[l]->id == newBinding->id) {
 										printf("Assigning texture to %s\n", newBinding->id.c_str());
 										newBinding->texture = renderTargets[l]->texture;
+										newBinding->width = renderTargets[l]->width;
+										newBinding->height = renderTargets[l]->height;
 									}
 								}
 								
diff --git a/Core/Contents/Source/PolyMatrix4.cpp b/Core/Contents/Source/PolyMatrix4.cpp
--- a/Core/Contents/Source/PolyMatrix4.cpp
+++ b/Core/Contents/Source/PolyMatrix4.cpp
@@ -36,7 +36,7 @@
 	memcpy(ml, m, sizeof(Number)*16);
 }
 
-Matrix4 Matrix4::Inverse() const
+Matrix4 Matrix4::inverse() const
 {
 	Number m00 = m[0][0], m01 = m[0][1], m02 = m[0][2], m03 = m[0][3];
 	Number m10 = m[1][0], m11 = m[1][1], m12 = m[1][2], m13 = m[1][3];
diff --git a/Core/Contents/Source/PolyParticleEmitter.cpp b/Core/Contents/Source/PolyParticleEmitter.cpp
--- a/Core/Contents/Source/PolyParticleEmitter.cpp
+++ b/Core/Contents/Source/PolyParticleEmitter.cpp
@@ -36,8 +36,8 @@
 using namespace Polycode;
 
 SceneParticleEmitter::SceneParticleEmitter(const String& materialName, int particleType, int emitterType, Number lifespan, unsigned int numParticles, Vector3 direction, Vector3 gravity, Vector3 deviation, Vector3 emitterRadius, Mesh *particleMesh, SceneMesh *emitter)
-: SceneEntity(),
-ParticleEmitter(materialName, particleMesh, particleType, emitterType, lifespan, numParticles,  direction, gravity, deviation, emitterRadius)
+: ParticleEmitter(materialName, particleMesh, particleType, emitterType, lifespan, numParticles,  direction, gravity, deviation, emitterRadius),
+SceneEntity()
 {
 	isScreenEmitter = false;
 	emitterMesh = emitter;	
@@ -83,8 +83,8 @@
 }
 
 ScreenParticleEmitter::ScreenParticleEmitter(const String& imageFile, int particleType, int emitterType, Number lifespan, unsigned int numParticles, Vector3 direction, Vector3 gravity, Vector3 deviation, Vector3 emitterRadius, Mesh *particleMesh, ScreenMesh *emitter)
-		: ScreenEntity(),
-ParticleEmitter(imageFile, particleMesh, particleType, emitterType, lifespan, numParticles,  direction, gravity, deviation, emitterRadius)
+		: ParticleEmitter(imageFile, particleMesh, particleType, emitterType, lifespan, numParticles,  direction, gravity, deviation, emitterRadius),
+ScreenEntity()
 {
 	particleSize = 10.0; 
 	isScreenEmitter = true;
@@ -99,21 +99,19 @@
 	}
 }
 
-Entity *ScreenParticleEmitter::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenParticleEmitter::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenParticleEmitter *newEmitter = new ScreenParticleEmitter("default.png", Particle::BILLBOARD_PARTICLE, ParticleEmitter::CONTINUOUS_EMITTER, 2.0, 0, Vector3(0.0, -40.0, 0.0), Vector3(0.0, 0.0, 0.0), Vector3(0.0, 0.0, 0.0), Vector3(10.0, 10.0, 0.0));
 	applyClone(newEmitter, deepClone, ignoreEditorOnly);
 	return newEmitter;
 }
 
-void ScreenParticleEmitter::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenParticleEmitter::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	ScreenParticleEmitter *_clone = (ScreenParticleEmitter*) clone;
 
 	_clone->emitterRadius = this->emitterRadius;
 	_clone->dirVector = this->dirVector;
 	_clone->gravVector = this->gravVector;
 	_clone->deviation = this->deviation;
-
-	_clone->setIgnoreParentMatrix(getIgnoreParentMatrix());
 				
 	_clone->brightnessDeviation = this->brightnessDeviation;
 	_clone->particleSize = this->particleSize;
@@ -172,9 +170,8 @@
 	isScreenEmitter = false;
 	dirVector = direction;
 	gravVector = gravity;
-	ignoreParentMatrix = false;
 	this->emitterType = emitterType;
-	// TODO: initialize emitSpeed
+	this->emitSpeed = emitSpeed;
 	this->deviation = deviation;
 	pMesh = particleMesh;
 	rotationFollowsPath = false;
@@ -221,19 +218,7 @@
 	useScaleCurves = false;	
 }
 
-bool ParticleEmitter::getIgnoreParentMatrix() const {
-	return ignoreParentMatrix;
-}
-
-void ParticleEmitter::setIgnoreParentMatrix(bool val) {
-	ignoreParentMatrix = val;
-	for(int i=0; i < particles.size(); i++) {
-		particles[i]->particleBody->ignoreParentMatrix = ignoreParentMatrix;
-	}
-}
-
-
-Texture *ParticleEmitter::getParticleTexture() const {
+Texture *ParticleEmitter::getParticleTexture() {
 	return particleTexture;
 }
 
@@ -255,7 +240,7 @@
 	Particle *particle;	
 	for(int i=0; i < numParticles; i++) {
 		particle = new Particle(particleType, isScreenEmitter, particleMaterial, particleTexture, pMesh);
-		particle->particleBody->ignoreParentMatrix = ignoreParentMatrix;
+		particle->particleBody->ignoreParentMatrix = true;
 		particle->velVector = dirVector;
 		particle->dirVector = dirVector;
 		particle->deviation = deviation;
@@ -342,7 +327,7 @@
 		Particle *particle;
 		for(int i=0; i  < oldSize; i++) {
 			particle = new Particle(particleType, isScreenEmitter, particleMaterial, particleTexture, pMesh);
-			particle->particleBody->ignoreParentMatrix = ignoreParentMatrix;
+			particle->particleBody->ignoreParentMatrix = true;			
 			particle->velVector = dirVector;
 			particle->dirVector = dirVector;
 			particle->deviation = deviation;
@@ -395,10 +380,7 @@
 	
 	Vector3	startVector;
 	
-	Vector3 compoundScale(1.0, 1.0, 1.0);
-	if(ignoreParentMatrix) {
-		compoundScale = getParticleCompoundScale();
-	}
+	Vector3 compoundScale = getParticleCompoundScale();
 	
 	particle->dirVector = dirVector;
 //	if(emitterMesh) {
@@ -422,13 +404,9 @@
 	particle->brightnessDeviation = 1.0f - ( (-brightnessDeviation) + ((brightnessDeviation*2) * ((Number)rand()/RAND_MAX)));
 	
 //	particle->velVector = concatMatrix.rotateVector(particle->velVector);	
-
-	if(ignoreParentMatrix) {
-		particle->particleBody->setPosition(concatMatrix.getPosition());
-	} else {
-		particle->particleBody->setPosition(0.0, 0.0, 0.0);
-	}
 	
+	particle->particleBody->setPosition(concatMatrix.getPosition());
+//	particle->particleBody->setPosition(0.0, 0.0, 0.0);
 	particle->particleBody->Translate(startVector);
 	particle->particleBody->rebuildTransformMatrix();	
 	
@@ -500,10 +478,7 @@
 	Particle *particle;
 	Number normLife;
 	
-	Vector3 compoundScale(1.0, 1.0, 1.0);
-	if(ignoreParentMatrix) {
-		compoundScale = getParticleCompoundScale();
-	}
+	Vector3 compoundScale = getParticleCompoundScale();
 	
 	for(int i=0;i < numParticles; i++) {	
 		particle = particles[i];
diff --git a/Core/Contents/Source/PolyPerlin.cpp b/Core/Contents/Source/PolyPerlin.cpp
--- a/Core/Contents/Source/PolyPerlin.cpp
+++ b/Core/Contents/Source/PolyPerlin.cpp
@@ -228,6 +228,7 @@
 Number Perlin::perlin_noise_2D(Number vec[2])
 {
   int terms    = mOctaves;
+	Number freq   = mFrequency;
 	Number result = 0.0f;
   Number amp = mAmplitude;
 
@@ -249,6 +250,7 @@
 Number Perlin::perlin_noise_3D(Number vec[3])
 {
   int terms    = mOctaves;
+	Number freq   = mFrequency;
 	Number result = 0.0f;
   Number amp = mAmplitude;
 
diff --git a/Core/Contents/Source/PolyQuaternion.cpp b/Core/Contents/Source/PolyQuaternion.cpp
--- a/Core/Contents/Source/PolyQuaternion.cpp
+++ b/Core/Contents/Source/PolyQuaternion.cpp
@@ -178,7 +178,7 @@
         return w*w+x*x+y*y+z*z;
     }
 
-    Number Quaternion::Normalize()
+    Number Quaternion::normalize()
     {
         Number len = Norm();
         Number factor = 1.0f / sqrtf(len);
@@ -222,7 +222,7 @@
             //    have method to fix this case, so just use linear interpolation here.
             Quaternion t = (1.0f - fT) * rkP + fT * rkT;
             // taking the complement requires renormalisation
-            t.Normalize();
+            t.normalize();
             return t;
         }
     }
diff --git a/Core/Contents/Source/PolyRectangle.cpp b/Core/Contents/Source/PolyRectangle.cpp
--- a/Core/Contents/Source/PolyRectangle.cpp
+++ b/Core/Contents/Source/PolyRectangle.cpp
@@ -21,7 +21,6 @@
 */
 
 #include "PolyRectangle.h"
-#include <algorithm> // for min/max
 
 using namespace Polycode;
 
@@ -31,24 +30,3 @@
 	this->w = w;
 	this->h = h;		
 }
-
-Rectangle Rectangle::Clipped(const Rectangle& rect) const
-{
-	Rectangle result;
-
-	result.x = std::min(std::max(x, rect.x), rect.maxX());
-	result.w = std::max(std::min(maxX(), rect.maxX()), result.x) - result.x;
-
-	result.y = std::min(std::max(y, rect.y), rect.maxY());
-	result.h = std::max(std::min(maxY(), rect.maxY()), result.y) - result.y;
-
-	return result;
-}
-
-bool Rectangle::operator==(const Rectangle& rect) const
-{
-	if( x == rect.x && y == rect.y && w == rect.w && h == rect.h)
-		return true;
-
-	return false;
-}
diff --git a/Core/Contents/Source/PolyRenderer.cpp b/Core/Contents/Source/PolyRenderer.cpp
--- a/Core/Contents/Source/PolyRenderer.cpp
+++ b/Core/Contents/Source/PolyRenderer.cpp
@@ -25,13 +25,15 @@
 
 using namespace Polycode;
 
-Renderer::Renderer() : clearColor(0.2f, 0.2f, 0.2f, 0.0), currentTexture(NULL), renderMode(0), lightingEnabled(false), orthoMode(false), xRes(0), yRes(0) {
+Renderer::Renderer() : currentTexture(NULL), xRes(0), yRes(0), renderMode(0), orthoMode(false), lightingEnabled(false), clearColor(0.2f, 0.2f, 0.2f, 0.0) {
 	anisotropy = 0;
 	textureFilteringMode = TEX_FILTERING_LINEAR;
 	currentMaterial = NULL;
 	numLights = 0;
 	exposureLevel = 1;
 	shadersEnabled = true;
+	currentFrameBufferTexture = NULL;
+	previousFrameBufferTexture = NULL;
 	currentMaterial = NULL;
 	numLights = 0;
 	numAreaLights = 0;
@@ -39,6 +41,8 @@
 	exposureLevel = 1;
 	shadersEnabled = true;
 	currentShaderModule = NULL;
+	currentFrameBufferTexture = NULL;
+	previousFrameBufferTexture = NULL;
 	fov = 45.0;
 	setAmbientColor(0.0,0.0,0.0);
 	cullingFrontFaces = false;
@@ -51,12 +55,6 @@
 Renderer::~Renderer() {
 }
 
-bool Renderer::Init() {
-	initOSSpecific();
-
-	return true;
-}
-
 void Renderer::enableShaders(bool flag) {
 	shadersEnabled = flag;
 }
@@ -105,7 +103,7 @@
 	Matrix4 fullMatrix = matrix;
 	
 	if(billboardMode) {
-		Matrix4 camInverse = cameraMatrix.Inverse();
+		Matrix4 camInverse = cameraMatrix.inverse();
 		fullMatrix = fullMatrix * camInverse;
 		
 		fullMatrix.m[0][0] = 1;
@@ -232,7 +230,7 @@
 void Renderer::sortLights(){
 
 	sorter.basePosition = (getModelviewMatrix()).getPosition();
-	sorter.cameraMatrix = getCameraMatrix().Inverse();	
+	sorter.cameraMatrix = getCameraMatrix().inverse();	
 	sort (areaLights.begin(), areaLights.end(), sorter);
 	sort (spotLights.begin(), spotLights.end(), sorter);	
 }
@@ -349,12 +347,19 @@
 }
 
 void Renderer::setRendererShaderParams(Shader *shader, ShaderBinding *binding) {
-	for(int i=0; i < shader->expectedParams.size(); i++) {
-		void *dataPtr = getDataPointerForName(shader->expectedParams[i].name);
-		if(dataPtr) {
-			binding->addLocalParam(shader->expectedParams[i].name, dataPtr);
+	for(int i=0; i < shader->expectedFragmentParams.size(); i++) {
+		if(shader->expectedFragmentParams[i].isAuto) {
+			binding->addLocalParam(shader->expectedFragmentParams[i].name, getDataPointerForName(shader->expectedFragmentParams[i].name));
 		}
 	}
+
+	for(int i=0; i < shader->expectedVertexParams.size(); i++) {
+		if(shader->expectedVertexParams[i].isAuto) {			
+			binding->addLocalParam(shader->expectedVertexParams[i].name, getDataPointerForName(shader->expectedVertexParams[i].name));
+		}
+	}
+
+
 }
 
 void Renderer::pushDataArrayForMesh(Mesh *mesh, int arrayType) {
diff --git a/Core/Contents/Source/PolyResource.cpp b/Core/Contents/Source/PolyResource.cpp
--- a/Core/Contents/Source/PolyResource.cpp
+++ b/Core/Contents/Source/PolyResource.cpp
@@ -21,23 +21,15 @@
 */
 
 #include "PolyResource.h"
-#include "PolyCoreServices.h"
-#include "PolyResourceManager.h"
 
 using namespace Polycode;
 
-Resource::Resource(int type) : EventDispatcher() {
+Resource::Resource(int type) {
 	this->type = type;
-	reloadOnFileModify = false;
-	resourceFileTime = 0;
 }
 
 Resource::~Resource() {
-	CoreServices::getInstance()->getResourceManager()->removeResource(this);
-}
 
-void Resource::reloadResource() {
-	dispatchEvent(new Event(), Event::RESOURCE_RELOAD_EVENT);
 }
 
 const String& Resource::getResourceName() const {
diff --git a/Core/Contents/Source/PolyResourceManager.cpp b/Core/Contents/Source/PolyResourceManager.cpp
--- a/Core/Contents/Source/PolyResourceManager.cpp
+++ b/Core/Contents/Source/PolyResourceManager.cpp
@@ -40,32 +40,14 @@
 
 ResourceManager::ResourceManager() {
 	PHYSFS_init(NULL);
-	ticksSinceCheck = 0;
-	reloadResourcesOnModify = false;
 }
 
 ResourceManager::~ResourceManager() {
 		printf("Shutting down resource manager...\n");
 		PHYSFS_deinit();
-		
 		for(int i=0; i < resources.size(); i++)	{
-			if(resources[i]->getResourceType() == Resource::RESOURCE_MATERIAL) {
-				delete resources[i];
-			}
+			delete resources[i];
 		}
-		
-		for(int i=0; i < resources.size(); i++)	{
-			if(resources[i]->getResourceType() == Resource::RESOURCE_SHADER) {
-				delete resources[i];
-			}
-		}
-
-		for(int i=0; i < resources.size(); i++)	{
-			if(resources[i]->getResourceType() == Resource::RESOURCE_PROGRAM) {
-				delete resources[i];
-			}
-		}
-		
 		resources.clear();
 }
 
@@ -76,12 +58,26 @@
 	for(int i=0; i < resourceDir.size(); i++) {	
 		if(resourceDir[i].type == OSFileEntry::TYPE_FILE) {
 			if(resourceDir[i].extension == "mat") {
-				MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-				std::vector<Shader*> shaders = materialManager->loadShadersFromFile(resourceDir[i].fullPath);
-				
-				for(int s=0; s < shaders.size(); s++) {
-					addResource(shaders[s]);
-					materialManager->addShader(shaders[s]);
+				Logger::log("Adding shaders from %s\n", resourceDir[i].nameWithoutExtension.c_str());
+				TiXmlDocument doc(resourceDir[i].fullPath.c_str());
+				doc.LoadFile();
+				if(doc.Error()) {
+					Logger::log("XML Error: %s\n", doc.ErrorDesc());
+				} else {
+					TiXmlElement *mElem = doc.RootElement()->FirstChildElement("shaders");
+					
+					if(mElem) {
+						TiXmlNode* pChild;					
+						for (pChild = mElem->FirstChild(); pChild != 0; pChild = pChild->NextSibling()) {						
+							Shader *newShader = CoreServices::getInstance()->getMaterialManager()->createShaderFromXMLNode(pChild);
+							if(newShader != NULL) {
+								Logger::log("Adding shader %s\n", newShader->getName().c_str());
+								newShader->setResourceName(newShader->getName());
+								resources.push_back(newShader);
+								 CoreServices::getInstance()->getMaterialManager()->registerShader(newShader);
+							}
+						}
+					}
 				}
 			}
 		} else {
@@ -100,14 +96,17 @@
 	resourceDir = OSBasics::parseFolder(dirPath, false);
 	for(int i=0; i < resourceDir.size(); i++) {	
 		if(resourceDir[i].type == OSFileEntry::TYPE_FILE) {
-			MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-			
-			ShaderProgram *newProgram = materialManager->createProgramFromFile(resourceDir[i].fullPath);
-			if(newProgram) {
-				newProgram->setResourceName(resourceDir[i].name);
-				newProgram->setResourcePath(resourceDir[i].fullPath);
-				addResource(newProgram);					
-			}			
+			for(int m=0; m < shaderModules.size(); m++) {
+				PolycodeShaderModule *shaderModule = shaderModules[m];
+				if(shaderModule->acceptsExtension(resourceDir[i].extension)) {
+					Resource *newProgram = shaderModule->createProgramFromFile(resourceDir[i].extension, resourceDir[i].fullPath);
+					if(newProgram) {
+						newProgram->setResourceName(resourceDir[i].name);
+						newProgram->setResourcePath(resourceDir[i].fullPath);				
+						resources.push_back(newProgram);					
+					}
+				}
+			}
 		} else {
 			if(recursive)
 				parsePrograms(dirPath+"/"+resourceDir[i].name, true);
@@ -127,7 +126,7 @@
 
 				for(int m=0; m < materials.size(); m++) {
 					materials[m]->setResourceName(materials[m]->getName());
-					addResource(materials[m]);
+					resources.push_back(materials[m]);
 					materialManager->addMaterial(materials[m]);
 				}
 			}
@@ -145,12 +144,24 @@
 	for(int i=0; i < resourceDir.size(); i++) {	
 		if(resourceDir[i].type == OSFileEntry::TYPE_FILE) {
 			if(resourceDir[i].extension == "mat") {
-			
-				MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();			
-				std::vector<Cubemap*> cubemaps = materialManager->loadCubemapsFromFile(resourceDir[i].fullPath);			
-				for(int c=0; c < cubemaps.size(); c++) {
-					addResource(cubemaps[c]);
-				}			
+				Logger::log("Adding cubemaps from %s\n", resourceDir[i].nameWithoutExtension.c_str());
+				TiXmlDocument doc(resourceDir[i].fullPath.c_str());
+				doc.LoadFile();
+				if(doc.Error()) {
+					Logger::log("XML Error: %s\n", doc.ErrorDesc());
+				} else {
+					TiXmlElement *mElem = doc.RootElement()->FirstChildElement("cubemaps");
+					
+					if(mElem) {
+						TiXmlNode* pChild;					
+						for (pChild = mElem->FirstChild(); pChild != 0; pChild = pChild->NextSibling()) {
+							Cubemap *newMat = CoreServices::getInstance()->getMaterialManager()->cubemapFromXMLNode(pChild);
+							//						newMat->setResourceName(newMat->getName());
+							if(newMat)
+								resources.push_back(newMat);
+						}
+					}
+				}
 			}
 		} else {
 			if(recursive)
@@ -159,48 +170,25 @@
 	}	
 }
 
-bool ResourceManager::hasResource(Resource *resource) {
-	for(int i=0; i < resources.size(); i++) {
-		if(resources[i] == resource) {
-			return true;
-		}
-	}
-	return false;
-}
-
 void ResourceManager::addResource(Resource *resource) {
 	resources.push_back(resource);
-	resource->resourceFileTime = OSBasics::getFileTime(resource->getResourcePath());
 }
 
-void ResourceManager::removeResource(Resource *resource) {
-	for(int i=0;i<resources.size();i++) {
-		if(resources[i] == resource) {
-			resources.erase(resources.begin()+i);
-			return;
-		}
-	}	
-}
-
-
 void ResourceManager::parseTextures(const String& dirPath, bool recursive, const String& basePath) {
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
 	vector<OSFileEntry> resourceDir;
 	resourceDir = OSBasics::parseFolder(dirPath, false);
 	for(int i=0; i < resourceDir.size(); i++) {	
 		if(resourceDir[i].type == OSFileEntry::TYPE_FILE) {
 			if(resourceDir[i].extension == "png") {
 				Logger::log("Adding texture %s\n", resourceDir[i].nameWithoutExtension.c_str());
-				Texture *t = materialManager->createTextureFromFile(resourceDir[i].fullPath, materialManager->clampDefault, materialManager->mipmapsDefault);
+				Texture *t = CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(resourceDir[i].fullPath);
 				if(t) {
 					if(basePath == "") {
-						t->setResourceName(resourceDir[i].name);
-						t->setResourcePath(resourceDir[i].fullPath);
+						t->setResourceName(resourceDir[i].name);					
 					} else {
 						t->setResourceName(basePath+"/"+resourceDir[i].name);
-						t->setResourcePath(resourceDir[i].fullPath);						
 					}
-					addResource(t);
+					resources.push_back(t);
 				}
 			}
 		} else {
@@ -254,20 +242,10 @@
 	parseOthers(dirPath, recursive);	
 }
 
-Resource *ResourceManager::getResourceByPath(const String& resourcePath) const {
-	Logger::log("requested %s\n", resourcePath.c_str());
-	for(int i =0; i < resources.size(); i++) {
-		if(resources[i]->getResourcePath() == resourcePath) {
-			return resources[i];
-		}
-	}
-	Logger::log("return NULL\n");	
-	return NULL;
-}
-
 Resource *ResourceManager::getResource(int resourceType, const String& resourceName) const {
 	Logger::log("requested %s\n", resourceName.c_str());
 	for(int i =0; i < resources.size(); i++) {
+//		Logger::log("is it %s?\n", resources[i]->getResourceName().c_str());		
 		if(resources[i]->getResourceName() == resourceName && resources[i]->getResourceType() == resourceType) {
 			return resources[i];
 		}
@@ -282,33 +260,12 @@
 	return NULL;
 }
 
-void ResourceManager::checkForChangedFiles() {
-	for(int i=0; i < resources.size(); i++) {
-		if(resources[i]->reloadOnFileModify == true) {
-			time_t newFileTime = OSBasics::getFileTime(resources[i]->getResourcePath());
-//			printf("%s\n%lld %lld\n", resources[i]->getResourcePath().c_str(), newFileTime, resources[i]->resourceFileTime);
-			if((newFileTime != resources[i]->resourceFileTime) && newFileTime != 0) {
-				resources[i]->reloadResource();
-				resources[i]->resourceFileTime = newFileTime;
-			}
-		}
-	}
-}
-
-void ResourceManager::Update(int elapsed) {
-	if(!reloadResourcesOnModify)
-		return;
-		
-	ticksSinceCheck += elapsed;
-	if(ticksSinceCheck > RESOURCE_CHECK_INTERVAL) {
-		ticksSinceCheck = 0;
-		checkForChangedFiles();
-	}
-}
-
-std::vector<Resource*> ResourceManager::getResources(int resourceType) {
-	std::vector<Resource*> result;
+// Would it make more sense to pass back, like, something like an ObjectEntry here? Lua hates vectors.
+vector<Resource *> ResourceManager::getResources(int resourceType) {
+	vector<Resource *> result;
+	Logger::log("requested all of type %d\n", resourceType);
 	for(int i =0; i < resources.size(); i++) {
+		//		Logger::log("is it %s?\n", resources[i]->getResourceName().c_str());		
 		if(resources[i]->getResourceType() == resourceType) {
 			result.push_back(resources[i]);
 		}
diff --git a/Core/Contents/Source/PolySDLCore.cpp b/Core/Contents/Source/PolySDLCore.cpp
--- a/Core/Contents/Source/PolySDLCore.cpp
+++ b/Core/Contents/Source/PolySDLCore.cpp
@@ -32,10 +32,6 @@
 #include "PolyRectangle.h"
 
 #include <SDL/SDL.h>
-#include <SDL/SDL_syswm.h>
-#include <stdio.h>
-#include <limits.h>
-
 #include <iostream>
 
 #include <unistd.h>
@@ -44,17 +40,6 @@
 #include <sys/wait.h>
 #include <pwd.h>
 
-#ifdef USE_X11
-	// SDL scrap
-	#define T(A, B, C, D)	(int)((A<<24)|(B<<16)|(C<<8)|(D<<0))
-
-	int init_scrap(void);
-	int lost_scrap(void);
-	void put_scrap(int type, int srclen, const char *src);
-	void get_scrap(int type, int *dstlen, char **dst);
-	// end SDL scrap
-#endif
-
 using namespace Polycode;
 using std::vector;
 
@@ -90,7 +75,7 @@
 		setenv("SDL_VIDEO_CENTERED", "1", 1);
 	}
 
-	if(SDL_Init(SDL_INIT_VIDEO|SDL_INIT_JOYSTICK) < 0) {
+	if(SDL_Init(SDL_INIT_VIDEO) < 0) {
 	}
 	
 	eventMutex = createMutex();
@@ -103,21 +88,7 @@
 	SDL_EnableUNICODE(1);
 	SDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY, SDL_DEFAULT_REPEAT_INTERVAL);
 	
-	SDL_JoystickEventState(SDL_ENABLE);
-	
-	int numJoysticks = SDL_NumJoysticks();
-	
-	for(int i=0; i < numJoysticks; i++) {
-		SDL_JoystickOpen(i);
-		input->addJoystick(i);
-	}
-	
-	// Start listening to clipboard events.
-	// (Yes on X11 you need to actively listen to
-	//  clipboard events and respond to them)
-	init_scrap();
-
-	((OpenGLRenderer*)renderer)->Init();
+	((OpenGLRenderer*)renderer)->initOSSpecific();
 	CoreServices::getInstance()->installModule(new GLSLShaderModule());	
 }
 
@@ -142,6 +113,8 @@
 		SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, 0);
 	}
 	
+	SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 0);
+	
 	flags = SDL_OPENGL;
 
 	if(fullScreen) {
@@ -151,16 +124,6 @@
 	if(resizableWindow) {
 		flags |= SDL_RESIZABLE;
 	}
-/*
-	if(vSync) {
-		flags |= SDL_DOUBLEBUF;
-		SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1);
-		SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 1);
-	} else {
-		SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 0);
-		SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 0);
-	}
-*/
 	SDL_SetVideoMode(xRes, yRes, 0, flags);
 	
 	renderer->Resize(xRes, yRes);
@@ -247,15 +210,6 @@
 	Core::enableMouse(newval);
 }
 
-void SDLCore::captureMouse(bool newval) {
-	if(newval) {
-		SDL_WM_GrabInput(SDL_GRAB_ON);
-	} else {
-		SDL_WM_GrabInput(SDL_GRAB_OFF);
-	}
-	Core::captureMouse(newval);
-}
-
 bool SDLCore::checkSpecialKeyEvents(PolyKEY key) {
 	
 	if(key == KEY_a && (input->getKeyState(KEY_LCTRL) || input->getKeyState(KEY_RCTRL))) {
@@ -291,19 +245,14 @@
 	return false;
 }
 
-void SDLCore::Render() {
-	renderer->BeginRender();
-	services->Render();
-	renderer->EndRender();
-	SDL_GL_SwapBuffers();
-}
-
 bool SDLCore::Update() {
 	if(!running)
 		return false;
-	doSleep();	
 	
+	renderer->BeginRender();
 	updateCore();
+	renderer->EndRender();
+	SDL_GL_SwapBuffers();
 	
 	SDL_Event event;
 	while ( SDL_PollEvent(&event) ) {
@@ -332,14 +281,8 @@
 						}
 					}
 				break;
-				case SDL_JOYAXISMOTION:
-					input->joystickAxisMoved(event.jaxis.axis, ((Number)event.jaxis.value)/32767.0, event.jaxis.which);
-				break;
 				case SDL_JOYBUTTONDOWN:
-					input->joystickButtonDown(event.jbutton.button, event.jbutton.which);
-				break;
-				case SDL_JOYBUTTONUP:
-					input->joystickButtonUp(event.jbutton.button, event.jbutton.which);
+//					input->setKeyState((PolyKEY)(event.key.keysym.sym), true);
 				break;
 				case SDL_KEYDOWN:
 					if(!checkSpecialKeyEvents((PolyKEY)(event.key.keysym.sym))) {
@@ -392,6 +335,7 @@
 					break;
 			}
 		}
+	doSleep();	
 	return running;
 }
 
@@ -421,21 +365,11 @@
 }
 
 void SDLCore::copyStringToClipboard(const String& str) {
-#ifdef USE_X11
-	put_scrap(T('T', 'E', 'X', 'T'), str.size(), str.c_str());
-#endif
+
 }
 
 String SDLCore::getClipboardString() {
-#ifdef USE_X11
-	int dstlen;
-	char* buffer;
-	get_scrap(T('T', 'E', 'X', 'T'), &dstlen, &buffer);
-	
-	String rval(buffer, dstlen);
-	free(buffer);
-	return rval;
-#endif
+	return "";
 }
 
 void SDLCore::createFolder(const String& folderPath) {
@@ -473,391 +407,14 @@
 }
 
 String SDLCore::openFolderPicker() {
-	String r = "";
-	return r;
+
 }
 
 vector<String> SDLCore::openFilePicker(vector<CoreFileExtension> extensions, bool allowMultiple) {
-	vector<String> r;
-	return r;
+
 }
 
 void SDLCore::resizeTo(int xRes, int yRes) {
 	renderer->Resize(xRes, yRes);
 }
 
-
-#ifdef USE_X11
-// SDL_scrap.c
-// Credits to Sam Lantinga for making this
-// Changes include:
-// - All non-X11 stuff was removed
-// - Uses the X11 CLIPBOARD atom in addition to PRIMARY
-// =======================================
-
-
-/* Handle clipboard text and data in arbitrary formats */
-
-/* Miscellaneous defines */
-#define PUBLIC
-#define PRIVATE	static
-
-#define X11_SCRAP
-
-typedef Atom scrap_type;
-
-static Display *SDL_Display;
-static Window SDL_Window;
-static void (*Lock_Display)(void);
-static void (*Unlock_Display)(void);
-
-#define FORMAT_PREFIX	"SDL_scrap_0x"
-
-PRIVATE scrap_type
-convert_format(int type)
-{
-  switch (type)
-    {
-
-    case T('T', 'E', 'X', 'T'):
-      return XA_STRING;
-
-    default:
-      {
-        char format[sizeof(FORMAT_PREFIX)+8+1];
-
-        sprintf(format, "%s%08lx", FORMAT_PREFIX, (unsigned long)type);
-
-        return XInternAtom(SDL_Display, format, False);
-      }
-    }
-}
-
-/* Convert internal data to scrap format */
-PRIVATE int
-convert_data(int type, char *dst, const char *src, int srclen)
-{
-  int dstlen;
-
-  dstlen = 0;
-  switch (type)
-    {
-    case T('T', 'E', 'X', 'T'):
-      if ( dst )
-        {
-          while ( --srclen >= 0 )
-            {
-              if ( *src == '\r' )
-                {
-                  *dst++ = '\n';
-                  ++dstlen;
-                }
-              else
-                {
-                  *dst++ = *src;
-                  ++dstlen;
-                }
-              ++src;
-            }
-            *dst = '\0';
-            ++dstlen;
-        }
-      else
-        {
-          while ( --srclen >= 0 )
-            {
-              if ( *src == '\r' )
-                {
-                  ++dstlen;
-                }
-              else
-                {
-                  ++dstlen;
-                }
-              ++src;
-            }
-            ++dstlen;
-        }
-      break;
-
-    default:
-      if ( dst )
-        {
-          *(int *)dst = srclen;
-          dst += sizeof(int);
-          memcpy(dst, src, srclen);
-        }
-      dstlen = sizeof(int)+srclen;
-      break;
-    }
-    return(dstlen);
-}
-
-/* Convert scrap data to internal format */
-PRIVATE int
-convert_scrap(int type, char *dst, char *src, int srclen)
-{
-  int dstlen;
-
-  dstlen = 0;
-  switch (type)
-    {
-    case T('T', 'E', 'X', 'T'):
-      {
-        if ( srclen == 0 )
-          srclen = strlen(src);
-        if ( dst )
-          {
-            while ( --srclen >= 0 )
-              {
-                if ( *src == '\n' )
-                  {
-                    *dst++ = '\r';
-                    ++dstlen;
-                  }
-                else
-                  {
-                    *dst++ = *src;
-                    ++dstlen;
-                  }
-                ++src;
-              }
-              *dst = '\0';
-              ++dstlen;
-          }
-        else
-          {
-            while ( --srclen >= 0 )
-              {
-                ++dstlen;
-                ++src;
-              }
-              ++dstlen;
-          }
-        }
-      break;
-
-    default:
-      dstlen = *(int *)src;
-      if ( dst )
-        {
-          if ( srclen == 0 )
-            memcpy(dst, src+sizeof(int), dstlen);
-          else
-            memcpy(dst, src+sizeof(int), srclen-sizeof(int));
-        }
-      break;
-    }
-  return dstlen;
-}
-
-/* The system message filter function -- handle clipboard messages */
-PRIVATE int clipboard_filter(const SDL_Event *event);
-
-PUBLIC int
-init_scrap(void)
-{
-  SDL_SysWMinfo info;
-  int retval;
-
-  /* Grab the window manager specific information */
-  retval = -1;
-  SDL_SetError("SDL is not running on known window manager");
-
-  SDL_VERSION(&info.version);
-  if ( SDL_GetWMInfo(&info) )
-    {
-      /* Save the information for later use */
-/* * */
-      if ( info.subsystem == SDL_SYSWM_X11 )
-        {
-          SDL_Display = info.info.x11.display;
-          SDL_Window = info.info.x11.window;
-          Lock_Display = info.info.x11.lock_func;
-          Unlock_Display = info.info.x11.unlock_func;
-
-          /* Enable the special window hook events */
-          SDL_EventState(SDL_SYSWMEVENT, SDL_ENABLE);
-          SDL_SetEventFilter(clipboard_filter);
-
-          retval = 0;
-        }
-      else
-        {
-          SDL_SetError("SDL is not running on X11");
-        }
-    }
-  return(retval);
-}
-
-PUBLIC int
-lost_scrap(void)
-{
-  int retval;
-
-/* * */
-  Lock_Display();
-  retval = ( XGetSelectionOwner(SDL_Display, XA_PRIMARY) != SDL_Window );
-  Unlock_Display();
-
-  return(retval);
-}
-
-PUBLIC void
-put_scrap(int type, int srclen, const char *src)
-{
-  scrap_type format;
-  int dstlen;
-  char *dst;
-
-  format = convert_format(type);
-  dstlen = convert_data(type, NULL, src, srclen);
-
-/* * */
-  dst = (char *)malloc(dstlen);
-  if ( dst != NULL )
-    {
-      Lock_Display();
-      convert_data(type, dst, src, srclen);
-      XChangeProperty(SDL_Display, DefaultRootWindow(SDL_Display),
-        XA_CUT_BUFFER0, format, 8, PropModeReplace, (unsigned char*) dst, dstlen);
-      free(dst);
-      Atom XA_CLIPBOARD = XInternAtom(SDL_Display, "CLIPBOARD", 0);
-      if ( lost_scrap() ) {
-        XSetSelectionOwner(SDL_Display, XA_PRIMARY, SDL_Window, CurrentTime);
-        XSetSelectionOwner(SDL_Display, XA_CLIPBOARD, SDL_Window, CurrentTime);
-      }
-      Unlock_Display();
-    }
-
-}
-
-PUBLIC void
-get_scrap(int type, int *dstlen, char **dst)
-{
-  scrap_type format;
-
-  *dstlen = 0;
-  format = convert_format(type);
-
-/* * */
-  {
-    Window owner;
-    Atom selection;
-    Atom seln_type;
-    int seln_format;
-    unsigned long nbytes;
-    unsigned long overflow;
-    char *src;
-
-    Lock_Display();
-    Atom XA_CLIPBOARD = XInternAtom(SDL_Display, "CLIPBOARD", 0);
-    owner = XGetSelectionOwner(SDL_Display, XA_PRIMARY);
-    Unlock_Display();
-    if ( (owner == None) || (owner == SDL_Window) )
-      {
-        owner = DefaultRootWindow(SDL_Display);
-        selection = XA_CUT_BUFFER0;
-      }
-    else
-      {
-        int selection_response = 0;
-        SDL_Event event;
-
-        owner = SDL_Window;
-        Lock_Display();
-        selection = XInternAtom(SDL_Display, "SDL_SELECTION", False);
-        XConvertSelection(SDL_Display, XA_PRIMARY, format,
-                                        selection, owner, CurrentTime);
-        XConvertSelection(SDL_Display, XA_CLIPBOARD, format,
-                                        selection, owner, CurrentTime);
-        Unlock_Display();
-        while ( ! selection_response )
-          {
-            SDL_WaitEvent(&event);
-            if ( event.type == SDL_SYSWMEVENT )
-              {
-                XEvent xevent = event.syswm.msg->event.xevent;
-
-                if ( (xevent.type == SelectionNotify) &&
-                     (xevent.xselection.requestor == owner) )
-                    selection_response = 1;
-              }
-          }
-      }
-    Lock_Display();
-    if ( XGetWindowProperty(SDL_Display, owner, selection, 0, INT_MAX/4,
-                            False, format, &seln_type, &seln_format,
-                       &nbytes, &overflow, (unsigned char **)&src) == Success )
-      {
-        if ( seln_type == format )
-          {
-            *dstlen = convert_scrap(type, NULL, src, nbytes);
-            *dst = (char *)malloc(*dstlen);
-            if ( *dst == NULL )
-              *dstlen = 0;
-            else
-              convert_scrap(type, *dst, src, nbytes);
-          }
-        XFree(src);
-      }
-    }
-    Unlock_Display();
-}
-
-PRIVATE int clipboard_filter(const SDL_Event *event)
-{
-  /* Post all non-window manager specific events */
-  if ( event->type != SDL_SYSWMEVENT ) {
-    return(1);
-  }
-
-  /* Handle window-manager specific clipboard events */
-  switch (event->syswm.msg->event.xevent.type) {
-    /* Copy the selection from XA_CUT_BUFFER0 to the requested property */
-    case SelectionRequest: {
-      XSelectionRequestEvent *req;
-      XEvent sevent;
-      int seln_format;
-      unsigned long nbytes;
-      unsigned long overflow;
-      unsigned char *seln_data;
-
-      req = &event->syswm.msg->event.xevent.xselectionrequest;
-      sevent.xselection.type = SelectionNotify;
-      sevent.xselection.display = req->display;
-      sevent.xselection.selection = req->selection;
-      sevent.xselection.target = None;
-      sevent.xselection.property = None;
-      sevent.xselection.requestor = req->requestor;
-      sevent.xselection.time = req->time;
-      if ( XGetWindowProperty(SDL_Display, DefaultRootWindow(SDL_Display),
-                              XA_CUT_BUFFER0, 0, INT_MAX/4, False, req->target,
-                              &sevent.xselection.target, &seln_format,
-                              &nbytes, &overflow, &seln_data) == Success )
-        {
-          if ( sevent.xselection.target == req->target )
-            {
-              if ( sevent.xselection.target == XA_STRING )
-                {
-                  if ( seln_data[nbytes-1] == '\0' )
-                    --nbytes;
-                }
-              XChangeProperty(SDL_Display, req->requestor, req->property,
-                sevent.xselection.target, seln_format, PropModeReplace,
-                                                      seln_data, nbytes);
-              sevent.xselection.property = req->property;
-            }
-          XFree(seln_data);
-        }
-      XSendEvent(SDL_Display,req->requestor,False,0,&sevent);
-      XSync(SDL_Display, False);
-    }
-    break;
-  }
-
-  /* Post the event for X11 clipboard reading above */
-  return(1);
-}
-
-#endif // USE_X11
diff --git a/Core/Contents/Source/PolyScene.cpp b/Core/Contents/Source/PolyScene.cpp
--- a/Core/Contents/Source/PolyScene.cpp
+++ b/Core/Contents/Source/PolyScene.cpp
@@ -47,15 +47,9 @@
 	hasLightmaps = false;
 	clearColor.setColor(0.13f,0.13f,0.13f,1.0f); 
 	ambientColor.setColor(0.0,0.0,0.0,1.0);
-	fogColor.setColor(0.0,0.0,0.0,1.0);
 	useClearColor = false;
 	ownsChildren = false;
 	ownsCamera = true;
-	fogEnabled=false;
-	fogMode=0;
-	fogDensity=0;
-	fogStartDepth=0;
-	fogEndDepth=0;
 	CoreServices::getInstance()->getSceneManager()->addScene(this);	
 }
 
@@ -69,15 +63,9 @@
 	hasLightmaps = false;
 	clearColor.setColor(0.13f,0.13f,0.13f,1.0f); 
 	ambientColor.setColor(0.0,0.0,0.0,1.0);	
-	fogColor.setColor(0.0,0.0,0.0,1.0);
 	useClearColor = false;
 	ownsChildren = false;
 	ownsCamera = true;
-	fogEnabled=false;
-	fogMode=0;
-	fogDensity=0;
-	fogStartDepth=0;
-	fogEndDepth=0;
 	if (!isSceneVirtual) {
 		CoreServices::getInstance()->getSceneManager()->addScene(this);
 	}
@@ -108,10 +96,7 @@
 }
 
 void Scene::Update() {
-	for(int i=0; i<entities.size();i++) {
-		entities[i]->doUpdates();		
-		entities[i]->updateEntityMatrix();
-	}
+
 }
 
 Scene::~Scene() {
@@ -187,6 +172,7 @@
 	
 	// prepare lights...
 	for(int i=0; i<entities.size();i++) {
+		entities[i]->doUpdates();		
 		entities[i]->updateEntityMatrix();
 	}	
 	
@@ -329,6 +315,405 @@
 		return NULL;
 }
 
+
+String Scene::readString(OSFILE *inFile) {
+	char buffer[1024];
+	unsigned int namelen;
+	OSBasics::read(&namelen, sizeof(unsigned int), 1, inFile);
+	memset(buffer, 0, 1024);
+	OSBasics::read(buffer, 1, namelen, inFile);
+	return String(buffer);
+}
+
+void Scene::loadScene(const String& fileName) {
+	OSFILE *inFile = OSBasics::open(fileName.c_str(), "rb");
+	if(!inFile) {
+		Logger::log("Error opening scene file\n");
+		return;
+	}
+	
+	Number r,g,b,a;
+	
+	OSBasics::read(&r, sizeof(Number), 1, inFile);
+	OSBasics::read(&g, sizeof(Number), 1, inFile);
+	OSBasics::read(&b, sizeof(Number), 1, inFile);
+	clearColor.setColor(r,g,b,1.0f);
+	
+	OSBasics::read(&r, sizeof(Number), 1, inFile);
+	OSBasics::read(&g, sizeof(Number), 1, inFile);
+	OSBasics::read(&b, sizeof(Number), 1, inFile);
+	ambientColor.setColor(r,g,b,1.0f);
+	
+	
+	unsigned int numObjects, objectType,namelen;
+	char buffer[1024];
+	char flag;
+	Number t[3],rq[4];
+	SceneEntity *newEntity;
+	
+	unsigned int lightmapIndex = 0;
+	
+	OSBasics::read(&flag, 1, 1, inFile);
+	hasLightmaps = false;
+	if(flag == 1)
+		hasLightmaps = true;
+	
+	OSBasics::read(&numObjects, sizeof(unsigned int), 1, inFile);
+	Logger::log("Loading scene (%d objects)\n", numObjects);
+	for(int i=0; i < numObjects; i++) {
+		
+		OSBasics::read(t, sizeof(Number), 3, inFile);
+		OSBasics::read(rq, sizeof(Number), 4, inFile);
+		newEntity = NULL;
+		
+		OSBasics::read(&objectType, sizeof(unsigned int), 1, inFile);
+		
+		SceneMesh *newSceneMesh;
+		Mesh *newMesh;
+		Material *newMaterial;
+		
+		switch(objectType) {
+			case ENTITY_MESH:			
+				
+				if(hasLightmaps) {
+					OSBasics::read(&lightmapIndex, sizeof(unsigned int), 1, inFile);			
+				} else {
+					lightmapIndex = 0;
+				}
+				
+				
+				OSBasics::read(&namelen, sizeof(unsigned int), 1, inFile);
+				memset(buffer, 0, 1024);
+				OSBasics::read(buffer, 1, namelen, inFile);
+				
+				Logger::log("adding mesh (texture: %s)\n", buffer);
+				
+				OSBasics::read(&r, sizeof(Number), 1, inFile);
+				OSBasics::read(&g, sizeof(Number), 1, inFile);
+				OSBasics::read(&b, sizeof(Number), 1, inFile);
+				OSBasics::read(&a, sizeof(Number), 1, inFile);
+				
+				newMaterial = (Material*) CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_MATERIAL, buffer);
+				newMesh = new Mesh(Mesh::TRI_MESH);
+				newMesh->loadFromFile(inFile);
+				newSceneMesh = new SceneMesh(newMesh);
+				
+				newSceneMesh->setColor(r,g,b,a);
+				newSceneMesh->lightmapIndex = lightmapIndex;
+				addEntity(newSceneMesh);
+				newEntity = (SceneEntity*)newSceneMesh;
+				staticGeometry.push_back(newSceneMesh);
+				if(newMaterial != NULL)
+					newSceneMesh->setMaterial(newMaterial);
+				
+				break;
+			case ENTITY_ENTITY: {
+				Logger::log("loading entity\n");
+				String entityType = readString(inFile);					
+				SceneEntity *newCustomEntity = new SceneEntity();
+				newCustomEntity->custEntityType = entityType;					
+				newEntity = newCustomEntity;
+				customEntities.push_back(newCustomEntity);					
+			} break;
+			case ENTITY_COLLMESH: {
+			/*
+				unsigned int collType,numVertices,numFaces;
+				Number co[3];
+				OSBasics::read(&collType, sizeof(unsigned int), 1, inFile);
+				OSBasics::read(&numVertices, sizeof(unsigned int), 1, inFile);
+				
+				Mesh *mesh = new Mesh(Mesh::TRI_MESH);
+				
+				for(int i=0; i < numVertices; i++) {
+					OSBasics::read(co, sizeof(Number), 3, inFile);
+					Vertex *newVert = new Vertex(co[0], co[1], co[2]);
+					mesh->addVertex(newVert);
+				}
+				
+				OSBasics::read(&numFaces, sizeof(unsigned int), 1, inFile);
+				
+				unsigned int fo[3];
+				for(int i=0; i < numFaces; i++) {
+					OSBasics::read(fo, sizeof(unsigned int), 3, inFile);						
+					Polygon *newPoly = new Polygon();
+					newPoly->addVertex(mesh->getVertex(fo[0]));
+					newPoly->addVertex(mesh->getVertex(fo[1]));
+					newPoly->addVertex(mesh->getVertex(fo[2]));
+					mesh->addPolygon(newPoly);
+				}
+				
+				SceneMesh *newMesh = new SceneMesh(mesh);
+				newEntity = newMesh;
+				loadCollisionChild(newEntity);
+				collisionGeometry.push_back(newMesh);
+				newMesh->visible = false;
+				
+				//					ScenePrimitive *test = new ScenePrimitive(ScenePrimitive::TYPE_BOX, newMesh->bBox.x,newMesh->bBox.y,newMesh->bBox.z);				
+				//					newMesh->addEntity(test);
+				*/
+			}
+			
+				break;
+			case ENTITY_CAMERA:
+				newEntity = (SceneEntity*)this->getDefaultCamera();
+				break;
+			case ENTITY_LIGHT:
+				/*
+				Number col[3],e,d;
+				unsigned int lType;
+				OSBasics::read(&lType, sizeof(unsigned int), 1, inFile);				
+				OSBasics::read(&e, sizeof(Number), 1, inFile);
+				OSBasics::read(&d, sizeof(Number), 1, inFile);
+				OSBasics::read(col, sizeof(Number), 3, inFile);
+				
+				SceneLight *newLight = new SceneLight(lType, e, d, this);
+				newLight->lightColor.setColor(col[0],col[1],col[2],1.0f);
+				addLight(newLight);
+				newEntity = (SceneEntity*)newLight;
+				*/
+				break;
+		}
+		
+		
+		if(newEntity != NULL) {		
+			unsigned int numProps;
+			OSBasics::read(&numProps, sizeof(unsigned int), 1, inFile);
+			for(int i=0; i < numProps; i++) {
+				String propName,propValue;
+				propName = readString(inFile);
+				propValue = readString(inFile);
+				EntityProp prop;
+				prop.propName = propName;
+				prop.propValue = propValue;
+				newEntity->entityProps.push_back(prop);
+			}						
+			
+			if(objectType == ENTITY_MESH) {
+				if(newEntity->getEntityProp("vertexnormals") == "false")
+					((SceneMesh*)newEntity)->getMesh()->useVertexNormals(false);
+				
+				if(newEntity->getEntityProp("collision") != "") {
+					if(newEntity->getEntityProp("collision")  == "mesh") {
+						loadCollisionChild(newEntity, false, 3);
+					}
+				}
+			}
+			
+			newEntity->setPosition(t[0], t[1], t[2]);
+			newEntity->setRotationQuat(rq[0], rq[1], rq[2], rq[3]);
+			newEntity->rebuildTransformMatrix();						
+		}		
+	}
+	
+	if(!hasLightmaps) {
+		OSBasics::close(inFile);
+		return;
+	}
+	/*
+	 unsigned int lmsize,numLightmaps,imageWidth, imageHeight;
+	 OSBasics::read(&numLightmaps, sizeof(unsigned int), 1, inFile);
+	 
+	 packer = new LightmapPacker(this);
+	 char *imageData;
+	 
+	 for(int i=0 ; i < numLightmaps; i++) {
+	 OSBasics::read(&imageWidth, sizeof(unsigned int), 1, inFile);
+	 OSBasics::read(&imageHeight, sizeof(unsigned int), 1, inFile);
+	 OSBasics::read(&lmsize, sizeof(unsigned int), 1, inFile);
+	 imageData = (char*)malloc(lmsize);
+	 OSBasics::read(imageData, 1, lmsize, inFile);
+	 Image *newImage = new Image(imageData, imageWidth, imageHeight);
+	 packer->images.push_back(newImage);	
+	 free(imageData);
+	 }
+	 
+	 packer->bindTextures();
+	 */
+	OSBasics::close(inFile);
+}
+
+vector<SceneEntity*> Scene::getCustomEntitiesByType(const String& type) const {
+	vector<SceneEntity*> retVector;
+	for(int i=0; i < customEntities.size(); i++) {
+		if(customEntities[i]->custEntityType == type) {
+			retVector.push_back(customEntities[i]);
+		}
+	}
+	return retVector;	
+}
+
+SceneEntity *Scene::getCustomEntityByType(const String& type) const {
+	for(int i=0; i < customEntities.size(); i++) {
+		if(customEntities[i]->custEntityType == type) {
+			return customEntities[i];
+		}
+	}
+	return NULL;
+}
+
+void Scene::writeEntityMatrix(SceneEntity *entity, OSFILE *outFile) {
+	Number t[3],rq[4];
+	Vector3 pos = entity->getPosition();
+	t[0] = pos.x;
+	t[1] = pos.y;
+	t[2] = pos.z;
+	
+	rq[0] = entity->getRotationQuat().w;
+	rq[1] = entity->getRotationQuat().x;
+	rq[2] = entity->getRotationQuat().y;
+	rq[3] = entity->getRotationQuat().z;						
+	
+	OSBasics::write(t, sizeof(Number), 3, outFile);
+	OSBasics::write(rq, sizeof(Number), 4, outFile);
+	
+}
+
+void Scene::saveScene(const String& fileName) {
+	OSFILE *outFile = OSBasics::open(fileName.c_str(), "wb");
+	if(!outFile) {
+		Logger::log("Error opening scene file for writing\n");
+		return;
+	}
+	
+	// geometry
+	unsigned int totalObjects = staticGeometry.size() + lights.size() + collisionGeometry.size() + customEntities.size();
+	unsigned int objType;
+	char flag = 0;
+	if(hasLightmaps)
+		flag = 1;
+	OSBasics::write(&flag, 1, 1, outFile);
+	OSBasics::write(&totalObjects, sizeof(unsigned int), 1, outFile);
+	
+	unsigned int stLen;
+	
+	for(int i=0; i <staticGeometry.size(); i++) {
+		SceneMesh *mesh = staticGeometry[i];
+		
+		writeEntityMatrix(mesh, outFile);
+		
+		objType = Scene::ENTITY_MESH;		
+		OSBasics::write(&objType, sizeof(unsigned int), 1, outFile);
+		
+		if(hasLightmaps) {
+			unsigned int lightmapIndex = mesh->lightmapIndex;
+			OSBasics::write(&lightmapIndex, sizeof(unsigned int), 1, outFile);			
+		}
+		
+		stLen = mesh->getMaterial()->getName().length();
+		OSBasics::write(&stLen, sizeof(unsigned int), 1, outFile);
+		OSBasics::write(mesh->getMaterial()->getName().c_str(), 1, stLen, outFile);
+		
+		mesh->getMesh()->saveToFile(outFile);		
+	}
+	
+	/*
+	for(int i=0; i < collisionGeometry.size(); i++) {
+		SceneMesh *mesh = collisionGeometry[i];
+		writeEntityMatrix(mesh, outFile);
+		objType = Scene::ENTITY_COLLMESH;
+		OSBasics::write(&objType, sizeof(unsigned int), 1, outFile);
+		
+		unsigned int collType = 1;
+		OSBasics::write(&collType, sizeof(unsigned int), 1, outFile);
+		
+		unsigned int numVertices = mesh->getMesh()->getNumVertices();
+		OSBasics::write(&numVertices, sizeof(unsigned int), 1, outFile);
+		Number pos[3];
+		for(int j=0; j < numVertices; j++) {
+			Vertex *vert = mesh->getMesh()->getVertex(j);
+			pos[0] = vert->x;
+			pos[1] = vert->y;
+			pos[2] = vert->z;			
+			OSBasics::write(pos, sizeof(Number),3, outFile);
+		}
+		
+		unsigned int numFaces = mesh->getMesh()->getPolygonCount();
+		OSBasics::write(&numFaces, sizeof(unsigned int), 1, outFile);
+		unsigned int ind[3];
+		for(int j=0; j < numFaces; j++) {
+			Polygon *poly = mesh->getMesh()->getPolygon(j);
+			ind[0] = mesh->getMesh()->getVertexIndex(poly->getVertex(0));
+			ind[1] = mesh->getMesh()->getVertexIndex(poly->getVertex(1));
+			ind[2] = mesh->getMesh()->getVertexIndex(poly->getVertex(2));			
+			OSBasics::write(ind, sizeof(unsigned int),3, outFile);
+		}
+	}
+	*/
+	/*
+	Number col[3],e,d;
+	for(int i=0; i < lights.size(); i++) {
+		
+		writeEntityMatrix(lights[i], outFile);
+		objType = Scene::ENTITY_LIGHT;		
+		OSBasics::write(&objType, sizeof(unsigned int), 1, outFile);
+		
+		col[0] = lights[i]->lightColor.r;
+		col[1] = lights[i]->lightColor.g;
+		col[2] = lights[i]->lightColor.b;
+		e = lights[i]->getIntensity();
+		d = lights[i]->getDistance();
+		
+		OSBasics::write(&e, sizeof(Number), 1, outFile);
+		OSBasics::write(&d, sizeof(Number), 1, outFile);
+		OSBasics::write(col, sizeof(Number), 3, outFile);
+	}
+	*/
+	for(int i=0; i < customEntities.size(); i++) {
+		SceneEntity *custEnt = customEntities[i];
+		
+		writeEntityMatrix(custEnt, outFile);	
+		objType = Scene::ENTITY_ENTITY;
+		OSBasics::write(&objType, sizeof(unsigned int), 1, outFile);
+		
+		
+		writeString(custEnt->custEntityType, outFile);
+		unsigned int numProps = custEnt->entityProps.size();
+		OSBasics::write(&numProps, sizeof(unsigned int), 1, outFile);		
+		for(int j=0; j < numProps; j++) {
+			writeString(custEnt->entityProps[j].propName, outFile);
+			writeString(custEnt->entityProps[j].propValue, outFile);
+		}
+	}
+	
+	if(!hasLightmaps) {
+		OSBasics::close(outFile);
+		return;
+	}
+	
+	/*
+	 unsigned int lmsize;
+	 lmsize = packer->images.size();
+	 OSBasics::write(&lmsize, sizeof(unsigned int), 1, outFile);
+	 for(int i=0; i < packer->images.size(); i++) {
+	 lmsize = packer->images[i]->getWidth();
+	 OSBasics::write(&lmsize, sizeof(unsigned int), 1, outFile);
+	 lmsize = packer->images[i]->getHeight();
+	 OSBasics::write(&lmsize, sizeof(unsigned int), 1, outFile);
+	 
+	 lmsize = packer->images[i]->getWidth() * packer->images[i]->getHeight() * 4;
+	 OSBasics::write(&lmsize, sizeof(unsigned int), 1, outFile);
+	 OSBasics::write(packer->images[i]->getPixels(), 1, lmsize, outFile);
+	 }
+	 */
+	
+	OSBasics::close(outFile);
+}
+
+void Scene::writeString(const String& str, OSFILE *outFile) {
+	unsigned int stLen = str.length();
+	OSBasics::write(&stLen, sizeof(unsigned int), 1, outFile);
+	OSBasics::write(str.c_str(), 1, stLen, outFile);
+	
+}
+
+int Scene::getNumStaticGeometry() {
+	return staticGeometry.size();
+}
+
+SceneMesh *Scene::getStaticGeometry(int index) {
+	return staticGeometry[index];
+}
+
 int Scene::getNumLights() {
 	return lights.size();
 }
@@ -337,3 +722,24 @@
 	return lights[index];
 }
 
+void Scene::generateLightmaps(Number lightMapRes, Number lightMapQuality, int numRadPasses) {
+	/*	
+	 packer = new LightmapPacker(this);
+	 packer->generateTextures(lightMapRes, lightMapQuality);
+	 
+	 RadTool *radTool = new RadTool(this, packer);
+	 radTool->fiatLux(numRadPasses);
+	 
+	 packer->bindTextures();
+	 packer->saveLightmaps("/Users/ivansafrin/Desktop/lightmaps");
+	 hasLightmaps = true;
+	 */
+}
+/*
+void Scene::addGrid(String gridTexture) {
+	ScenePrimitive *gridMesh = new ScenePrimitive(ScenePrimitive::TYPE_PLANE, 20,20,0);
+	gridMesh->loadTexture(gridTexture);
+	gridMesh->setPitch(-90.0f);
+	addEntity(gridMesh);
+}
+*/
diff --git a/Core/Contents/Source/PolySceneLabel.cpp b/Core/Contents/Source/PolySceneLabel.cpp
--- a/Core/Contents/Source/PolySceneLabel.cpp
+++ b/Core/Contents/Source/PolySceneLabel.cpp
@@ -46,18 +46,11 @@
 }
 
 void SceneLabel::setText(const String& newText) {
-	
-	if(newText == label->getText() && !label->optionsChanged()) {
-		return;
-	}
-
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-	
 	if(texture)
-		materialManager->deleteTexture(texture);
+		CoreServices::getInstance()->getMaterialManager()->deleteTexture(texture);
 		
 	label->setText(newText);	
-	texture = materialManager->createTextureFromImage(label, materialManager->clampDefault, materialManager->mipmapsDefault);
+	texture = CoreServices::getInstance()->getMaterialManager()->createTextureFromImage(label);
 
 	if(material) {
 		localShaderOptions->clearTexture("diffuse");
diff --git a/Core/Contents/Source/PolySceneManager.cpp b/Core/Contents/Source/PolySceneManager.cpp
--- a/Core/Contents/Source/PolySceneManager.cpp
+++ b/Core/Contents/Source/PolySceneManager.cpp
@@ -70,7 +70,7 @@
 void SceneManager::updateRenderTextures(Scene *scene) {
 }
 
-void SceneManager::renderVirtual() {
+void SceneManager::UpdateVirtual() {
 	for(int i=0;i<renderTextures.size();i++) {
 		CoreServices::getInstance()->getRenderer()->setViewportSize(renderTextures[i]->getTargetTexture()->getWidth(), renderTextures[i]->getTargetTexture()->getHeight());
 		CoreServices::getInstance()->getRenderer()->loadIdentity();
@@ -93,11 +93,12 @@
 
 }
 
-void SceneManager::Render() {
+void SceneManager::Update() {
 	for(int i=0;i<scenes.size();i++) {
 		if(scenes[i]->isEnabled() && !scenes[i]->isVirtual()) {
 			CoreServices::getInstance()->getRenderer()->loadIdentity();
 			Scene *scene = scenes[i];
+			scene->Update();
 			if(scene->getActiveCamera()->hasFilterShader()) {
 				scene->getActiveCamera()->drawFilter();
 			} else {
@@ -106,11 +107,3 @@
 		}
 	}
 }
-
-void SceneManager::Update() {
-	for(int i=0;i<scenes.size();i++) {
-		if(scenes[i]->isEnabled()) {
-			scenes[i]->Update();
-		}
-	}
-}
diff --git a/Core/Contents/Source/PolySceneMesh.cpp b/Core/Contents/Source/PolySceneMesh.cpp
--- a/Core/Contents/Source/PolySceneMesh.cpp
+++ b/Core/Contents/Source/PolySceneMesh.cpp
@@ -154,9 +154,8 @@
 }
 
 
-void SceneMesh::loadTexture(const String& fileName) {
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-	texture = materialManager->createTextureFromFile(fileName, materialManager->clampDefault, materialManager->mipmapsDefault);
+void SceneMesh::loadTexture(const String& fileName, bool clamp) {
+	texture = CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(fileName, clamp);
 	ownsTexture = false; // Texture is owned by material manager, not mesh.
 }
 
diff --git a/Core/Contents/Source/PolySceneRenderTexture.cpp b/Core/Contents/Source/PolySceneRenderTexture.cpp
--- a/Core/Contents/Source/PolySceneRenderTexture.cpp
+++ b/Core/Contents/Source/PolySceneRenderTexture.cpp
@@ -29,26 +29,20 @@
 using namespace Polycode;
 
 SceneRenderTexture::SceneRenderTexture(Scene *targetScene, Camera *targetCamera, int renderWidth,int renderHeight, bool floatingPoint) {
-	this->floatingPoint = floatingPoint;
+//	targetTexture = CoreServices::getInstance()->getMaterialManager()->createTexture(renderWidth, renderHeight, NULL,true);
 	CoreServices::getInstance()->getRenderer()->createRenderTextures(&targetTexture, &depthTexture, renderWidth, renderHeight, floatingPoint);
 	this->targetScene = targetScene;
 	this->targetCamera = targetCamera;
-
+	
+	
 	CoreServices::getInstance()->getRenderer()->createRenderTextures(&filterColorBufferTexture, &filterZBufferTexture, renderWidth, renderHeight, floatingPoint);
+	
+	
 	CoreServices::getInstance()->getSceneManager()->registerRenderTexture(this);
 }
 
-void SceneRenderTexture::resizeRenderTexture(int newWidth, int newHeight) {
-
-	if(newWidth > 0 && newHeight > 0) {
-		CoreServices::getInstance()->getRenderer()->destroyTexture(targetTexture);
-		CoreServices::getInstance()->getRenderer()->destroyTexture(depthTexture);	
-		CoreServices::getInstance()->getRenderer()->destroyTexture(filterColorBufferTexture);
-		CoreServices::getInstance()->getRenderer()->destroyTexture(filterZBufferTexture);	
-
-		CoreServices::getInstance()->getRenderer()->createRenderTextures(&targetTexture, &depthTexture, newWidth, newHeight, floatingPoint);
-		CoreServices::getInstance()->getRenderer()->createRenderTextures(&filterColorBufferTexture, &filterZBufferTexture, newWidth, newHeight, floatingPoint);
-	}
+void SceneRenderTexture::drawScreen() {
+	//CoreServices::getInstance()->getRenderer()->renderToTexture(targetTexture);
 }
 	
 Scene *SceneRenderTexture::getTargetScene() {
diff --git a/Core/Contents/Source/PolyScreen.cpp b/Core/Contents/Source/PolyScreen.cpp
--- a/Core/Contents/Source/PolyScreen.cpp
+++ b/Core/Contents/Source/PolyScreen.cpp
@@ -117,9 +117,13 @@
 	}
 	
 	for(int i=0; i < filterShaderMaterial->getNumShaders(); i++) {
-		ShaderBinding* binding = filterShaderMaterial->getShader(i)->createBinding();	
+		ShaderBinding* binding = filterShaderMaterial->getShader(i)->createBinding();		
+		if( i == 0) 
+			binding->addTexture("screenColorBuffer", originalSceneTexture);
+			
 		localShaderOptions.push_back(binding);
-	}	
+	}
+		
 	_hasFilterShader = true;
 	
 }
@@ -147,13 +151,6 @@
 	ShaderBinding* materialBinding;		
 	for(int i=0; i < filterShaderMaterial->getNumShaders(); i++) {
 		materialBinding = filterShaderMaterial->getShaderBinding(i);
-		
-		for(int j=0; j < materialBinding->getNumColorTargetBindings(); j++) {
-			RenderTargetBinding *colorBinding = materialBinding->getColorTargetBinding(j);
-			materialBinding->clearTexture(colorBinding->name);
-			materialBinding->addTexture(colorBinding->name, originalSceneTexture);
-		}
-		
 		renderer->applyMaterial(filterShaderMaterial, localShaderOptions[i], i);	
 			
 		if(i==filterShaderMaterial->getNumShaders()-1) {
@@ -161,10 +158,9 @@
 			renderer->drawScreenQuad(renderer->getXRes(), renderer->getYRes());		
 		} else {
 			for(int j=0; j < materialBinding->getNumOutTargetBindings(); j++) {
-				Texture *bindingTexture = materialBinding->getOutTargetBinding(j)->texture;
-				renderer->bindFrameBufferTexture(bindingTexture);
+				renderer->bindFrameBufferTexture(materialBinding->getOutTargetBinding(j)->texture);
 				
-				renderer->drawScreenQuad(bindingTexture->getWidth(), bindingTexture->getHeight());
+				renderer->drawScreenQuad(materialBinding->getOutTargetBinding(j)->width, materialBinding->getOutTargetBinding(j)->height);
 				renderer->unbindFramebuffers();
 			}						
 		}
@@ -201,16 +197,15 @@
 }
 
 void Screen::Update() {
-	rootEntity.doUpdates();
-}
 
-ScreenEntity *Screen::getEntityAt(Number x, Number y) {
-    return rootEntity.getChildAt(x,y);
 }
 
 void Screen::Render() {
+	Update();
 	renderer->loadIdentity();
 	renderer->translate2D(offset.x, offset.y);
+
+	rootEntity.doUpdates();
 	rootEntity.updateEntityMatrix();
 	rootEntity.transformAndRender();	
 }
diff --git a/Core/Contents/Source/PolyScreenEntity.cpp b/Core/Contents/Source/PolyScreenEntity.cpp
--- a/Core/Contents/Source/PolyScreenEntity.cpp
+++ b/Core/Contents/Source/PolyScreenEntity.cpp
@@ -37,11 +37,11 @@
 	color = Color(1.0f,1.0f,1.0f,1.0f);
 	width = 0;
 	height = 0;
-	setHitbox(0, 0);
+	setHitbox(1, 1);
 	backfaceCulled = false;
 	positionMode = POSITION_TOPLEFT;
 	mouseOver = false;
-	dragged = false;
+	isDragged = false;
 
 	dragOffsetX = 0;
 	dragOffsetY = 0;
@@ -67,13 +67,13 @@
 	
 }
 
-Entity *ScreenEntity::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenEntity::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenEntity *newEntity = new ScreenEntity();
 	applyClone(newEntity, deepClone, ignoreEditorOnly);
 	return newEntity;
 }
 
-void ScreenEntity::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenEntity::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	Entity::applyClone(clone, deepClone, ignoreEditorOnly);
 
 	ScreenEntity *_clone = (ScreenEntity*) clone;
@@ -137,10 +137,8 @@
 		((ScreenEntity*)CoreServices::getInstance()->focusedChild)->hasFocus = false;
 	}
 	CoreServices::getInstance()->focusedChild = child;
-	if(child) {	
-		((ScreenEntity*)CoreServices::getInstance()->focusedChild)->hasFocus = true;
-		((ScreenEntity*)CoreServices::getInstance()->focusedChild)->onGainFocus();
-	}
+	((ScreenEntity*)CoreServices::getInstance()->focusedChild)->hasFocus = true;
+	((ScreenEntity*)CoreServices::getInstance()->focusedChild)->onGainFocus();
 }
 
 void ScreenEntity::moveChildUp(ScreenEntity *child) {
@@ -190,20 +188,19 @@
 }
 
 void ScreenEntity::startDrag(Number xOffset, Number yOffset) {
-	dragged = true;
+	isDragged = true;
 	dragOffsetX = xOffset;
 	dragOffsetY = yOffset;
 }
 
 void ScreenEntity::stopDrag() {
-	dragged = false;
+	isDragged = false;
 }
 
 ScreenEntity::~ScreenEntity() {
 	if(CoreServices::getInstance()->focusedChild == this) {
 		CoreServices::getInstance()->focusedChild = NULL;
 	}
-	if(dragLimits) delete dragLimits;
 }
 
 void ScreenEntity::setBlendingMode(int newBlendingMode) {
@@ -272,46 +269,31 @@
 }
 
 
-bool ScreenEntity::hitTest(const Number x, const Number y) const {
+bool ScreenEntity::hitTest(const Number x, const Number y) {
 
 	Vector3 v;	
 	Polygon testPoly;
-
-	// matrix will give the center of the entity
-	Matrix4 screenMatrix = getScreenConcatenatedMatrix();
-	if(positionMode == POSITION_TOPLEFT) {
-		// Translate hitbox so it matches the visible object bounds
-		// This is a bit of a hack because ScreenEntities are expected
-		// to rotate about their center and not their center point.
-		Matrix4 retMatrix;
-		retMatrix.setPosition(width/2.0, height/2.0, 0.0);
-		screenMatrix = screenMatrix * retMatrix;
-	}
 	
+	Matrix4 transformMatrix = getConcatenatedMatrix();
 	v = Vector3(hit.x, hit.y, 0);
-	v = screenMatrix * v;
+	v = transformMatrix * v;
 	testPoly.addVertex(v.x, v.y, 0.0);
 	
 	v = Vector3(hit.x+hit.w, hit.y, 0);
-	v = screenMatrix * v;
+	v = transformMatrix * v;
 	testPoly.addVertex(v.x, v.y, 0.0);
 
 	v = Vector3(hit.x+hit.w, hit.y+hit.h, 0);
-	v = screenMatrix * v;
+	v = transformMatrix * v;
 	testPoly.addVertex(v.x, v.y, 0.0);
 
 	v = Vector3(hit.x,hit.y+hit.h, 0);
-	v = screenMatrix * v;
+	v = transformMatrix * v;
 	testPoly.addVertex(v.x, v.y, 0.0);
 		
 	return isPointInsidePolygon2D(&testPoly, Vector2(x,y));
 }
 
-bool ScreenEntity::hitTest(Vector2 v) const
-{
-	return hitTest(v.x, v.y);
-}
-
 void ScreenEntity::setPositionMode(int newPositionMode) {
 	positionMode = newPositionMode;
 }
@@ -330,7 +312,7 @@
 	}
 }
 
-int ScreenEntity::getPositionMode() const {
+int ScreenEntity::getPositionMode() {
 	return positionMode;
 }
 
@@ -348,7 +330,7 @@
 	dragLimits = NULL;
 }
 
-Rectangle ScreenEntity::getHitbox() const {
+Rectangle ScreenEntity::getHitbox() {
 	return hit;
 }
 
@@ -365,30 +347,28 @@
 	hit.y = top;
 }
 
-bool ScreenEntity::isDragged() {
-	return dragged;
-}
-
-Matrix4 ScreenEntity::getScreenConcatenatedMatrix() const {
+Matrix4 ScreenEntity::getScreenConcatenatedMatrix() {
 	Matrix4 retMatrix = transformMatrix;
 	if(positionMode == POSITION_TOPLEFT) {
-		retMatrix.setPosition(position.x, position.y, position.z);
+		Vector3 pos = retMatrix.getPosition();
+		retMatrix.setPosition(pos.x + width/2.0, pos.y + height/2.0, 0);
 	}
 	
 	if(parentEntity) {
-		return retMatrix * ((ScreenEntity*)parentEntity)->getScreenConcatenatedMatrix();
+		return retMatrix * ((ScreenEntity*)parentEntity)->getScreenConcatenatedMatrix();		
 	} else {
-		return retMatrix;
-	}
+		return retMatrix;	
+	}	
 }
 
-MouseEventResult ScreenEntity::_onMouseMove(Number x, Number y, int timestamp) {
+MouseEventResult ScreenEntity::_onMouseMove(Number x, Number y, int timestamp, Vector2 parentAdjust) {
 
-	if(dragged) {
-		Vector3 localCoordinate = Vector3(x,y,0);
+	if(isDragged) {
+	
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);				
 				
 		if(parentEntity) {
-			Matrix4 inverse = ((ScreenEntity*)parentEntity)->getScreenConcatenatedMatrix().Inverse();
+			Matrix4 inverse = ((ScreenEntity*)parentEntity)->getScreenConcatenatedMatrix().inverse();
 			localCoordinate = inverse * localCoordinate;		
 		}
 	
@@ -404,100 +384,133 @@
 				position.y = dragLimits->y + dragLimits->h;
 		}
 	}
+	
 
 	MouseEventResult ret;
 	ret.hit = false;
 	ret.blocked = false;
 
-	if(processInputEvents && enabled) {
-		if(hitTest(x,y)) {
 
-			Vector3 localCoordinate = Vector3(x,y,0);
-			Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-			localCoordinate = inverse * localCoordinate;
+	if(processInputEvents && enabled) {
+	if(hitTest(x+parentAdjust.x,y+parentAdjust.y)) {
+	
+	
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
 
-			onMouseMove(localCoordinate.x,localCoordinate.y);
-			xmouse = localCoordinate.x;
-			ymouse = localCoordinate.y;
-
-			dispatchEvent(new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp), InputEvent::EVENT_MOUSEMOVE);
 
-			if(!mouseOver) {
-					dispatchEvent(new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp), InputEvent::EVENT_MOUSEOVER);
-					mouseOver = true;
-			}
-			ret.hit = true;
-			if(blockMouseInput) {
-				ret.blocked = true;
-			}
-
-		} else {
-			if(mouseOver) {
-
-				Vector3 localCoordinate = Vector3(x,y,0);
-				Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-				localCoordinate = inverse * localCoordinate;
-
-				dispatchEvent(new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp), InputEvent::EVENT_MOUSEOUT);
-				mouseOver = false;
-			}
+		
+		onMouseMove(localCoordinate.x,localCoordinate.y);
+		xmouse = localCoordinate.x;
+		ymouse = localCoordinate.y;
+		
+		dispatchEvent(new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp), InputEvent::EVENT_MOUSEMOVE);
+		
+		if(!mouseOver) {
+				dispatchEvent(new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp), InputEvent::EVENT_MOUSEOVER);
+				mouseOver = true;
+		}
+		ret.hit = true;
+		if(blockMouseInput) {
+			ret.blocked = true;
 		}
 
-		for(int i=children.size()-1;i>=0;i--) {
-			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseMove(x,y, timestamp);
+		
+	} else {
+		if(mouseOver) {
+		
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
+		
+		
+			dispatchEvent(new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp), InputEvent::EVENT_MOUSEOUT);
+			mouseOver = false;
+		}		
+	}	
+
+		for(int i=children.size()-1;i>=0;i--) {			
+			Vector2 adjust = parentAdjust;
+			if(positionMode == POSITION_TOPLEFT)
+				adjust += Vector2(floor(width/2.0), floor(height/2.0));
+			
+			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseMove(x,y, timestamp, adjust);
 			if(childRes.hit)
 				ret.hit = true;
-			if(childRes.blocked) {
+			if(childRes.blocked)
 				ret.blocked = true;
+			if(childRes.blocked)
 				break;
-			}
 		}
 	}
 	
 	return ret;
 }
 
-MouseEventResult ScreenEntity::_onMouseUp(Number x, Number y, int mouseButton, int timestamp) {
+MouseEventResult ScreenEntity::_onMouseUp(Number x, Number y, int mouseButton, int timestamp, Vector2 parentAdjust) {
 	MouseEventResult ret;
 	ret.hit = false;
 	ret.blocked = false;
+
 	
 	if(processInputEvents && enabled) {
-		if(hitTest(x,y)) {
-			Vector3 localCoordinate = Vector3(x,y,0);
-
-			Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-			localCoordinate = inverse * localCoordinate;
-
-			onMouseUp(localCoordinate.x,localCoordinate.y);
-			InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp);
-			inputEvent->mouseButton = mouseButton;
-			dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEUP);
+	if(hitTest(x+parentAdjust.x,y+parentAdjust.y)) {
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);
+		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
 
-			ret.hit = true;
-			if(blockMouseInput) {
-				ret.blocked = true;
-			}
-
-		} else {
-			Vector3 localCoordinate = Vector3(x,y,0);
-
-			Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-			localCoordinate = inverse * localCoordinate;
-
-			InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp);
-			inputEvent->mouseButton = mouseButton;
-			dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEUP_OUTSIDE);
+		
+		onMouseUp(localCoordinate.x,localCoordinate.y);		
+		InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp);		
+		inputEvent->mouseButton = mouseButton;
+		dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEUP);
+		
+		ret.hit = true;
+		if(blockMouseInput) {
+			ret.blocked = true;
 		}
 
-		for(int i=children.size()-1;i>=0;i--) {
-			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseUp(x,y, mouseButton, timestamp);
+	} else {
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);
+		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
+
+		
+		InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp);		
+		inputEvent->mouseButton = mouseButton;
+		dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEUP_OUTSIDE);	
+	}
+
+		for(int i=children.size()-1;i>=0;i--) {			
+			Vector2 adjust = parentAdjust;
+			if(positionMode == POSITION_TOPLEFT)
+				adjust += Vector2(floor(width/2.0), floor(height/2.0));
+			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseUp(x,y, mouseButton, timestamp, adjust);
 			if(childRes.hit)
 				ret.hit = true;
-			if(childRes.blocked) {
+			if(childRes.blocked)
 				ret.blocked = true;
+			if(childRes.blocked)
 				break;
-			}
 			
 		}
 	}
@@ -505,75 +518,92 @@
 	return ret;
 }
 
-MouseEventResult ScreenEntity::_onMouseWheelUp(Number x, Number y, int timestamp) {
+MouseEventResult ScreenEntity::_onMouseWheelUp(Number x, Number y, int timestamp, Vector2 parentAdjust) {
 
 	MouseEventResult ret;
 	ret.hit = false;
 	ret.blocked = false;
 	
 	if(processInputEvents && enabled) {
-		if(hitTest(x,y)) {
-			Vector3 localCoordinate = Vector3(x,y,0);
-
-			Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-			localCoordinate = inverse * localCoordinate;
-
-			onMouseWheelUp(localCoordinate.x,localCoordinate.y);
+	if(hitTest(x+parentAdjust.x,y+parentAdjust.y)) {
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);
+		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
 
-			InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp);
-			dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEWHEEL_UP);
-
-			ret.hit = true;
-			if(blockMouseInput) {
-				ret.blocked = true;
-			}
-
+		
+		onMouseWheelUp(localCoordinate.x,localCoordinate.y);
+		
+		InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp);		
+		dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEWHEEL_UP);
+		
+		ret.hit = true;
+		if(blockMouseInput) {
+			ret.blocked = true;
 		}
 
-		for(int i=children.size()-1;i>=0;i--) {
-			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseWheelUp(x,y, timestamp);
+	}
+
+		for(int i=children.size()-1;i>=0;i--) {			
+			Vector2 adjust = parentAdjust;
+			if(positionMode == POSITION_TOPLEFT)
+				adjust += Vector2(floor(width/2.0), floor(height/2.0));
+			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseWheelUp(x,y, timestamp, adjust);
 			if(childRes.hit)
 				ret.hit = true;
-			if(childRes.blocked) {
+			if(childRes.blocked)
 				ret.blocked = true;
+			if(childRes.blocked)
 				break;
-			}
 		}
 	}
 	return ret;	
 }
 
-MouseEventResult ScreenEntity::_onMouseWheelDown(Number x, Number y, int timestamp) {
+MouseEventResult ScreenEntity::_onMouseWheelDown(Number x, Number y, int timestamp, Vector2 parentAdjust) {
 	MouseEventResult ret;
 	ret.hit = false;
 	ret.blocked = false;
 	
 	if(processInputEvents && enabled) {
-		if(hitTest(x,y)) {
-			Vector3 localCoordinate = Vector3(x,y,0);
-
-			Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-			localCoordinate = inverse * localCoordinate;
-
-			onMouseWheelDown(localCoordinate.x,localCoordinate.y);
+	if(hitTest(x+parentAdjust.x,y+parentAdjust.y)) {
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);
+		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
 
-			InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp);
-			dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEWHEEL_DOWN);
+		
+		onMouseWheelDown(localCoordinate.x,localCoordinate.y);
+		
+		InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp);		
+		dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEWHEEL_DOWN);
+		
+		ret.hit = true;
+		if(blockMouseInput) {
+			ret.blocked = true;
+		}
+	}
 
-			ret.hit = true;
-			if(blockMouseInput) {
-				ret.blocked = true;
-			}
-		}
-
-		for(int i=children.size()-1;i>=0;i--) {
-			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseWheelDown(x,y, timestamp);
+		for(int i=children.size()-1;i>=0;i--) {			
+			Vector2 adjust = parentAdjust;
+			if(positionMode == POSITION_TOPLEFT)
+				adjust += Vector2(floor(width/2.0), floor(height/2.0));
+			
+			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseWheelDown(x,y, timestamp, adjust);
 			if(childRes.hit)
 				ret.hit = true;
-			if(childRes.blocked) {
+			if(childRes.blocked)
 				ret.blocked = true;
+			if(childRes.blocked)
 				break;
-			}
 			
 		}
 	}
@@ -581,55 +611,68 @@
 	return ret;
 }
 
-MouseEventResult ScreenEntity::_onMouseDown(Number x, Number y, int mouseButton, int timestamp) {
+
+MouseEventResult ScreenEntity::_onMouseDown(Number x, Number y, int mouseButton, int timestamp, Vector2 parentAdjust) {
 	MouseEventResult ret;
 	ret.hit = false;
 	ret.blocked = false;
-
+			
 	if(processInputEvents && enabled) {
-		if(hitTest(x,y)) {
-			Vector3 localCoordinate = Vector3(x,y,0);
-
-			Matrix4 inverse = getScreenConcatenatedMatrix().Inverse();
-			localCoordinate = inverse * localCoordinate;
-
-			onMouseDown(localCoordinate.x,localCoordinate.y);
-
-			InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y), timestamp);
-
-			inputEvent->mouseButton = mouseButton;
-			dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEDOWN);
+	if(hitTest(x+parentAdjust.x,y+parentAdjust.y)) {
+		Vector3 localCoordinate = Vector3(x+(parentAdjust.x*2.0),y+(parentAdjust.y*2.0),0);
+		
+		Matrix4 inverse = getConcatenatedMatrix().inverse();
+		localCoordinate = inverse * localCoordinate;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.x += hit.w/2.0;
+		if(positionMode == POSITION_TOPLEFT)
+			localCoordinate.y += hit.h/2.0;
 
-			if(timestamp - lastClickTicks < 400) {
-				InputEvent *inputEvent = new InputEvent(Vector2(x,y), timestamp);
-				inputEvent->mouseButton = mouseButton;
-				dispatchEvent(inputEvent, InputEvent::EVENT_DOUBLECLICK);
-			}
-			lastClickTicks = timestamp;
-			ret.hit = true;
-			if(blockMouseInput) {
-				ret.blocked = true;
-			}
+		
+		onMouseDown(localCoordinate.x,localCoordinate.y);
+		
+		InputEvent *inputEvent = new InputEvent(Vector2(localCoordinate.x,localCoordinate.y)-parentAdjust, timestamp);
+		
+		inputEvent->mouseButton = mouseButton;
+		dispatchEvent(inputEvent, InputEvent::EVENT_MOUSEDOWN);
+		
+		if(timestamp - lastClickTicks < 400) {
+			InputEvent *inputEvent = new InputEvent(Vector2(x,y), timestamp);
+			inputEvent->mouseButton = mouseButton;			
+			dispatchEvent(inputEvent, InputEvent::EVENT_DOUBLECLICK);
 		}
+		lastClickTicks = timestamp;		
+		ret.hit = true;
+		if(blockMouseInput) {
+			ret.blocked = true;
+		}
+	}
 
-		for(int i=children.size()-1;i>=0;i--) {
-			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseDown(x,y, mouseButton, timestamp);
+	for(int i=children.size()-1;i>=0;i--) {			
+			Vector2 adjust = parentAdjust;
+			if(positionMode == POSITION_TOPLEFT)
+				adjust += Vector2(floor(width/2.0), floor(height/2.0));
+			MouseEventResult childRes = ((ScreenEntity*)children[i])->_onMouseDown(x,y, mouseButton, timestamp, adjust);
 			if(childRes.hit)
 				ret.hit = true;
-			if(childRes.blocked) {
+			if(childRes.blocked)
 				ret.blocked = true;
+			if(childRes.blocked)
 				break;
-			}
 		}
-	}
+	}		
 	
 	return ret;
 }
 
 Vector2 ScreenEntity::getScreenPosition() const {
-	Matrix4 screenTransform = getScreenConcatenatedMatrix();
-	Vector3 screenPosition = screenTransform.getPosition();
-	return Vector2(screenPosition.x, screenPosition.y);
+	Vector2 ret = getPosition2D();
+	
+	if(parentEntity) {
+		return ret + ((ScreenEntity*)parentEntity)->getScreenPosition();
+	} else {
+		return ret;
+	}
 }
 
 void ScreenEntity::setRotation(Number rotation) {
@@ -658,7 +701,7 @@
 			posMatrix.m[3][1] = position.y*matrixAdj;
 			posMatrix.m[3][2] = position.z*matrixAdj;
 		break;
-	}
+	}	
 	
 	
 	if(snapToPixels) {
@@ -679,39 +722,3 @@
 		}
 	}
 }
-
-ScreenEntity *ScreenEntity::getScreenEntityById(String id, bool recursive) const {
-	return (ScreenEntity*)getEntityById(id, recursive);
-}
-
-std::vector<ScreenEntity*> ScreenEntity::getScreenEntitiesByTag(String tag, bool recursive) const {
-	std::vector<Entity*> entities = getEntitiesByTag(tag, recursive);
-	std::vector<ScreenEntity*> retEntities;
-	for(int i=0; i < entities.size(); i++) {
-		retEntities.push_back((ScreenEntity*)entities[i]);
-	}
-	return retEntities;
-}
-
-/**
- * Returns the entity at specified point. May not take rotation or scale into account.
- */
-ScreenEntity *ScreenEntity::getEntityAt(Number x, Number y) {
-    if (hitTest(x,y))
-        return this;
-        
-    return getChildAt(x,y);
-}
-
-/**
- * Returns the entity at specified point, searching only children. May not take rotation or scale into account.
- */
-ScreenEntity *ScreenEntity::getChildAt(Number x, Number y) {
-    for(int i=children.size()-1; i >= 0;i--) {
-        ScreenEntity *child = (ScreenEntity *)children[i];
-        ScreenEntity *found = child->getEntityAt(x,y);
-        if (found)
-            return found;
-	}
-}
-
diff --git a/Core/Contents/Source/PolyScreenEntityInstance.cpp b/Core/Contents/Source/PolyScreenEntityInstance.cpp
--- a/Core/Contents/Source/PolyScreenEntityInstance.cpp
+++ b/Core/Contents/Source/PolyScreenEntityInstance.cpp
@@ -22,62 +22,29 @@
 
 #include "PolyScreenEntityInstance.h"
 #include "PolyLogger.h"
-#include "PolyCoreServices.h"
-#include "PolyResourceManager.h"
 
 using namespace Polycode;
 
-ScreenEntityInstanceResourceEntry::ScreenEntityInstanceResourceEntry(ScreenEntityInstance *instance)  : Resource(Resource::RESOURCE_SCREEN_ENTITY_INSTANCE) {
-	this->instance = instance;
-}
-
-ScreenEntityInstanceResourceEntry::~ScreenEntityInstanceResourceEntry() {
-
-}
-
-ScreenEntityInstance *ScreenEntityInstanceResourceEntry::getInstance() {
-	return instance;
-}
-
-void ScreenEntityInstanceResourceEntry::reloadResource() {
-	instance->reloadEntityInstance();
-	Resource::reloadResource();
-}
-
 ScreenEntityInstance *ScreenEntityInstance::BlankScreenEntityInstance() {
 	return new ScreenEntityInstance();
 }
 
 ScreenEntityInstance::ScreenEntityInstance(const String& fileName) : ScreenEntity() {
+	rootEntity = NULL;
 	setPositionMode(ScreenEntity::POSITION_CENTER);
-	resourceEntry = new ScreenEntityInstanceResourceEntry(this);		
 	loadFromFile(fileName);
-	resourceEntry->setResourceName(fileName);
-	resourceEntry->setResourcePath(fileName);
 	cloneUsingReload = false;
-	ownsChildren = true;	
-}
-
-ScreenEntityInstance::ScreenEntityInstance() : ScreenEntity() {
-	cloneUsingReload = true;
-	ownsChildren = true;
-	resourceEntry = new ScreenEntityInstanceResourceEntry(this);
 }
 
-ScreenEntityInstance::~ScreenEntityInstance() {	
-	CoreServices::getInstance()->getResourceManager()->removeResource(resourceEntry);
-	delete resourceEntry;
+ScreenEntityInstance::ScreenEntityInstance() {
+	rootEntity = NULL;
+	cloneUsingReload = true;
 }
 
-void ScreenEntityInstance::reloadEntityInstance() {
-	loadFromFile(fileName);
+ScreenEntityInstance::~ScreenEntityInstance() {
 }
 
-ScreenEntityInstanceResourceEntry *ScreenEntityInstance::getResourceEntry() {
-	return resourceEntry;
-}
-
-Entity *ScreenEntityInstance::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenEntityInstance::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenEntityInstance *newEntity;
 	if(cloneUsingReload) {
 		newEntity = new ScreenEntityInstance(fileName);
@@ -88,13 +55,16 @@
 	return newEntity;
 }
 
-void ScreenEntityInstance::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenEntityInstance::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	if(cloneUsingReload) {
 		ScreenEntity::applyClone(clone, false, ignoreEditorOnly);
 	} else {
 		ScreenEntity::applyClone(clone, deepClone, ignoreEditorOnly);
 		ScreenEntityInstance *_clone = (ScreenEntityInstance*) clone;
 		_clone->fileName = fileName;
+		if(_clone->getNumChildren() > 0) {
+			_clone->rootEntity = (ScreenEntity*)_clone->getChildAtIndex(0);
+		}
 	}
 }
 
@@ -160,7 +130,7 @@
 	
 }
 
-ScreenEntity *ScreenEntityInstance::loadObjectEntryIntoEntity(ObjectEntry *entry, ScreenEntity *targetEntity) {
+ScreenEntity *ScreenEntityInstance::loadObjectEntryIntoEntity(ObjectEntry *entry) {
 
 	ScreenEntity *entity = NULL;
 	
@@ -192,11 +162,6 @@
 				placingEmitter->rotationFollowsPath = (*emitterEntry)["rotationFollowsPath"]->boolVal;
 				placingEmitter->useScaleCurves = (*emitterEntry)["useScaleCurves"]->boolVal;
 				placingEmitter->useColorCurves = (*emitterEntry)["useColorCurves"]->boolVal;
-				
-				bool boolVal;
-				if(emitterEntry->readBool("ignoreParentMatrix", &boolVal)) {
-					placingEmitter->setIgnoreParentMatrix(boolVal);
-				}
 									
 				placingEmitter->setParticleBlendingMode((*emitterEntry)["particleBlendMode"]->intVal);			
 				
@@ -283,11 +248,7 @@
 	} 
 
 	if(!entity) {
-		if(targetEntity) {
-			entity = targetEntity;
-		} else {
-			entity = new ScreenEntity();
-		}
+		entity = new ScreenEntity();
 	}
 	
 	entity->ownsChildren = true;
@@ -297,40 +258,23 @@
 	} else {
 		entity->setPositionMode(ScreenEntity::POSITION_CENTER);
 	}
-
-	Number _width, _height;
 	
-	if(entry->readNumber("width", &_width)) {
-		entity->setWidth(_width);	
-	}
-	
-	if(entry->readNumber("height", &_height)) {
-		entity->setHeight(_height);	
-	}
-
 	entity->color.r = (*entry)["colorR"]->NumberVal;
 	entity->color.g = (*entry)["colorG"]->NumberVal;
 	entity->color.b = (*entry)["colorB"]->NumberVal;
 	entity->color.a = (*entry)["colorA"]->NumberVal;
 
+	entity->blendingMode = (*entry)["blendMode"]->intVal;
 
-	if(!targetEntity) {	
-		entity->blendingMode = (*entry)["blendMode"]->intVal;
-
-		entity->scale.x = (*entry)["scaleX"]->NumberVal;
-		entity->scale.y = (*entry)["scaleY"]->NumberVal;
+	entity->scale.x = (*entry)["scaleX"]->NumberVal;
+	entity->scale.y = (*entry)["scaleY"]->NumberVal;
 
-		entity->position.x = (*entry)["posX"]->NumberVal;
-		entity->position.y = (*entry)["posY"]->NumberVal;
+	entity->position.x = (*entry)["posX"]->NumberVal;
+	entity->position.y = (*entry)["posY"]->NumberVal;
 
-		entity->setRotation((*entry)["rotation"]->NumberVal);
-	} else {
+	entity->setRotation((*entry)["rotation"]->NumberVal);
 	
-	}
-	
-	if((*entry)["id"]->stringVal != "") {
-		entity->id = (*entry)["id"]->stringVal;
-	}
+	entity->id = (*entry)["id"]->stringVal;
 	
 	String tagString = (*entry)["tags"]->stringVal; 
 	
@@ -364,25 +308,21 @@
 	return entity;
 }
 
+ScreenEntity *ScreenEntityInstance::getRootEntity() {
+	return rootEntity;
+}
+
 String ScreenEntityInstance::getFileName() const {
 	return fileName;
 }
 
-void ScreenEntityInstance::clearInstance() {
-	for(int i=0; i < children.size(); i++) {
-		removeChild(children[i]);
-		children[i]->setOwnsChildrenRecursive(true);
-		delete children[i];
-	}
-}
-
 bool ScreenEntityInstance::loadFromFile(const String& fileName) {
 
-	clearInstance();
-	
-	resourceEntry->resourceFileTime = OSBasics::getFileTime(fileName);
+	if(rootEntity) {
+		removeChild(rootEntity);
+		delete rootEntity;		
+	}
 
-	this->ownsChildren = true;
 	this->fileName = fileName;
 	Object loadObject;
 	if(!loadObject.loadFromBinary(fileName)) {
@@ -391,8 +331,8 @@
 	ObjectEntry *root = loadObject.root["root"];
 	
 	if(root) {
-		loadObjectEntryIntoEntity(root, this);
+		rootEntity = loadObjectEntryIntoEntity(root);				
+		addChild(rootEntity);		
 	}
-	
 	return true;
 }
diff --git a/Core/Contents/Source/PolyScreenImage.cpp b/Core/Contents/Source/PolyScreenImage.cpp
--- a/Core/Contents/Source/PolyScreenImage.cpp
+++ b/Core/Contents/Source/PolyScreenImage.cpp
@@ -46,7 +46,7 @@
 	height = texture->getHeight();	
 	setShapeSize(width, height);	
 	
-	setPositionMode(POSITION_TOPLEFT);
+	positionMode = POSITION_TOPLEFT;
 }
 
 ScreenImage::ScreenImage(Image *image) : ScreenShape(ScreenShape::SHAPE_RECT,1,1) {
@@ -59,7 +59,7 @@
 	height = texture->getHeight();	
 	setShapeSize(width, height);	
 	
-	setPositionMode(POSITION_TOPLEFT);	
+	positionMode = POSITION_TOPLEFT;	
 }
 
 ScreenImage::ScreenImage(Texture *texture) : ScreenShape(ScreenShape::SHAPE_RECT,1,1) {
@@ -72,20 +72,20 @@
 	height = texture->getHeight();	
 	setShapeSize(width, height);	
 	
-	setPositionMode(POSITION_TOPLEFT);
+	positionMode = POSITION_TOPLEFT;	
 }
 
 ScreenImage::~ScreenImage() {
 
 }
 
-Entity *ScreenImage::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenImage::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenImage *newImage = new ScreenImage(getTexture()->getResourcePath());
 	applyClone(newImage, deepClone, ignoreEditorOnly);
 	return newImage;
 }
 
-void ScreenImage::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenImage::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	ScreenShape::applyClone(clone, deepClone, ignoreEditorOnly);
 }
 
diff --git a/Core/Contents/Source/PolyScreenLabel.cpp b/Core/Contents/Source/PolyScreenLabel.cpp
--- a/Core/Contents/Source/PolyScreenLabel.cpp
+++ b/Core/Contents/Source/PolyScreenLabel.cpp
@@ -37,7 +37,7 @@
 	label = new Label(CoreServices::getInstance()->getFontManager()->getFontByName(fontName), text, size, amode, premultiplyAlpha);
 	texture = NULL;
 	updateTexture();
-	setPositionMode(POSITION_TOPLEFT);
+	positionMode = POSITION_TOPLEFT;
 	colorAffectsChildren = false;
 	positionAtBaseline = true;
 }
@@ -50,13 +50,13 @@
 	return label;
 }
 
-Entity *ScreenLabel::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenLabel::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenLabel *newLabel = new ScreenLabel(getText(), label->getSize(), label->getFont()->getFontName(), label->getAntialiasMode());
 	applyClone(newLabel, deepClone, ignoreEditorOnly);
 	return newLabel;
 }
 
-void ScreenLabel::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenLabel::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	ScreenShape::applyClone(clone, deepClone, ignoreEditorOnly);
 	ScreenLabel *_clone = (ScreenLabel*) clone;
 	_clone->positionAtBaseline = positionAtBaseline;
@@ -93,8 +93,6 @@
 }
 
 void ScreenLabel::setText(const String& newText) {
-	if(newText != label->getText() || label->optionsChanged()) {
-		label->setText(newText);	
-		updateTexture();
-	}
+	label->setText(newText);	
+	updateTexture();
 }
diff --git a/Core/Contents/Source/PolyScreenManager.cpp b/Core/Contents/Source/PolyScreenManager.cpp
--- a/Core/Contents/Source/PolyScreenManager.cpp
+++ b/Core/Contents/Source/PolyScreenManager.cpp
@@ -57,7 +57,27 @@
 //	}
 }
 
-void ScreenManager::Render() {
+/*
+Screen *ScreenManager::createScreen(int screenType) {
+
+	Screen *screen;
+	switch(screenType) {
+		case REGULAR_SCREEN:
+			screen = new Screen();
+		break;
+		case PHYSICS_SCREEN:
+			screen = new PhysicsScreen();
+		break;
+	}
+	
+	screen->setRenderer(CoreServices::getInstance()->getRenderer());
+	screens.push_back(screen);
+	return screen;
+}
+*/
+
+void ScreenManager::Update() {
+
 	Renderer *renderer = CoreServices::getInstance()->getRenderer();
 	for(int i=0;i<screens.size();i++) {
 		if(screens[i]->enabled) {
@@ -77,11 +97,3 @@
 		}
 	}
 }
-
-void ScreenManager::Update() {
-	for(int i=0;i<screens.size();i++) {
-		if(screens[i]->enabled) {
-			screens[i]->Update();
-		}
-	}
-}
diff --git a/Core/Contents/Source/PolyScreenMesh.cpp b/Core/Contents/Source/PolyScreenMesh.cpp
--- a/Core/Contents/Source/PolyScreenMesh.cpp
+++ b/Core/Contents/Source/PolyScreenMesh.cpp
@@ -23,13 +23,12 @@
 #include "PolyScreenMesh.h"
 #include "PolyCoreServices.h"
 #include "PolyMaterialManager.h"
-#include "PolyResourceManager.h"
 #include "PolyMesh.h"
 #include "PolyRenderer.h"
 
 using namespace Polycode;
 
-ScreenMesh::ScreenMesh(Mesh *mesh) : ScreenEntity(), material(NULL), texture(NULL) {
+ScreenMesh::ScreenMesh(Mesh *mesh) : ScreenEntity(), texture(NULL) {
 	this->mesh = mesh;
 	lineSmooth = false;
 	lineWidth = 1.0;
@@ -37,18 +36,18 @@
 	updateHitBox();
 }
 
-ScreenMesh::ScreenMesh(const String& fileName) : ScreenEntity(), material(NULL), texture(NULL) {
+ScreenMesh::ScreenMesh(const String& fileName) : ScreenEntity(), texture(NULL) {
 	mesh = new Mesh(fileName);
 	lineSmooth = false;
 	lineWidth = 1.0;
-	ownsMesh = true;
+	
 }
 
-ScreenMesh::ScreenMesh(int meshType) : ScreenEntity(), material(NULL), texture(NULL) {
+ScreenMesh::ScreenMesh(int meshType) : ScreenEntity(), texture(NULL) {
 	mesh = new Mesh(meshType);
 	lineSmooth = false;
 	lineWidth = 1.0;
-	ownsMesh = true;
+	
 }
 
 ScreenMesh *ScreenMesh::ScreenMeshWithMesh(Mesh *mesh) {
@@ -78,71 +77,20 @@
 }
 
 void ScreenMesh::loadTexture(const String& fileName) {
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-	texture = materialManager->createTextureFromFile(fileName, materialManager->clampDefault, materialManager->mipmapsDefault);
+	texture = CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(fileName, true, false);
 }
 
 void ScreenMesh::loadTexture(Image *image) {
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-	texture = materialManager->createTextureFromImage(image, materialManager->clampDefault, materialManager->mipmapsDefault);
-}
-
-void ScreenMesh::clearMaterial() {
-	if(localShaderOptions)
-		delete localShaderOptions;
-	localShaderOptions = NULL;
-	this->material = NULL;
-}
-
-void ScreenMesh::setMaterial(Material *material) {
-
-	if(this->material)
-		clearMaterial();
-	
-	if(!material)
-		return;
-		
-	if(material->getNumShaders() == 0)
-			return;
-		
-	this->material = material;
-	localShaderOptions = material->getShader(0)->createBinding();
-	if(texture) {
-		localShaderOptions->clearTexture("diffuse");
-		localShaderOptions->addTexture("diffuse", texture);
-	}
-	
-}
-
-Material *ScreenMesh::getMaterial() {
-	return material;
-}
-
-ShaderBinding *ScreenMesh::getLocalShaderOptions() {
-	return localShaderOptions;
-}
-
-void ScreenMesh::setMaterialByName(const String& materialName) {
-	Material *material =  (Material*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_MATERIAL, materialName);
-	if(!material)
-		return;
-	setMaterial(material);
+	texture = CoreServices::getInstance()->getMaterialManager()->createTextureFromImage(image, true, false);
 }
 
 void ScreenMesh::Render() {	
 	Renderer *renderer = CoreServices::getInstance()->getRenderer();
 	
-	renderer->clearShader();
-	
 	renderer->setLineSize(lineWidth);
 	renderer->setLineSmooth(lineSmooth);
 	
-	if(material) {
-		renderer->applyMaterial(material, localShaderOptions,0);
-	} else {
-		renderer->setTexture(texture);
-	}
-	
+	renderer->setTexture(texture);
 	if(mesh->useVertexColors) {
 		renderer->pushDataArrayForMesh(mesh, RenderDataArray::COLOR_DATA_ARRAY);
 	}
diff --git a/Core/Contents/Source/PolyScreenShape.cpp b/Core/Contents/Source/PolyScreenShape.cpp
--- a/Core/Contents/Source/PolyScreenShape.cpp
+++ b/Core/Contents/Source/PolyScreenShape.cpp
@@ -45,7 +45,7 @@
 		
 	buildShapeMesh();
 	
-	setPositionMode(POSITION_CENTER);
+	positionMode = POSITION_CENTER;
 	strokeEnabled = false;
 }
 
@@ -66,19 +66,19 @@
 	
 	strokeColor = copy.strokeColor;
 	
-	setPositionMode(POSITION_CENTER);
+	positionMode = POSITION_CENTER;
 	strokeEnabled = copy.strokeEnabled;	
 
 }
 
-Entity *ScreenShape::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenShape::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenShape *newEntity = new ScreenShape(ScreenShape::SHAPE_RECT, 1,1);
 	applyClone(newEntity, deepClone, ignoreEditorOnly);
 	return newEntity;
 
 }
 
-void ScreenShape::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenShape::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	ScreenEntity::applyClone(clone, deepClone, ignoreEditorOnly);
 	ScreenShape *_clone = (ScreenShape*) clone;
 	*_clone = *this;
diff --git a/Core/Contents/Source/PolyScreenSound.cpp b/Core/Contents/Source/PolyScreenSound.cpp
--- a/Core/Contents/Source/PolyScreenSound.cpp
+++ b/Core/Contents/Source/PolyScreenSound.cpp
@@ -50,13 +50,13 @@
 
 }
 
-Entity *ScreenSound::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenSound::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenSound *newSound = new ScreenSound(sound->getFileName(), sound->getReferenceDistance(), sound->getMaxDistance());
 	applyClone(newSound, deepClone, ignoreEditorOnly);
 	return newSound;
 }
 
-void ScreenSound::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenSound::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	ScreenEntity::applyClone(clone, deepClone, ignoreEditorOnly);
 }
 
diff --git a/Core/Contents/Source/PolyScreenSprite.cpp b/Core/Contents/Source/PolyScreenSprite.cpp
--- a/Core/Contents/Source/PolyScreenSprite.cpp
+++ b/Core/Contents/Source/PolyScreenSprite.cpp
@@ -43,7 +43,7 @@
 	loadFromFile(fileName);
 }
 
-Entity *ScreenSprite::Clone(bool deepClone, bool ignoreEditorOnly) const {
+Entity *ScreenSprite::Clone(bool deepClone, bool ignoreEditorOnly) {
 	ScreenSprite *newSprite = new ScreenSprite(getTexture()->getResourcePath(), spriteWidth, spriteHeight);
 	for(int i=0; i < animations.size(); i++) {
 		newSprite->addAnimation(animations[i]->name, animations[i]->frames, animations[i]->speed);
@@ -55,7 +55,7 @@
 	return newSprite;
 }
 
-void ScreenSprite::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) const {
+void ScreenSprite::applyClone(Entity *clone, bool deepClone, bool ignoreEditorOnly) {
 	ScreenShape::applyClone(clone, deepClone, ignoreEditorOnly);
 	
 }
@@ -148,13 +148,7 @@
 	
 	for(int i =0 ; i < animations.size(); i++) {
 		animations[i]->numFramesX = texture->getWidth() / spriteWidth;	
-		if(animations[i]->numFramesX < 1) {
-			animations[i]->numFramesX = 1;
-		}
 		animations[i]->numFramesY = texture->getHeight() / spriteHeight;
-		if(animations[i]->numFramesY < 1) {
-			animations[i]->numFramesY = 1;
-		}		
 		animations[i]->spriteUVWidth = spriteUVWidth;
 		animations[i]->spriteUVHeight = spriteUVHeight;	
 		animations[i]->setOffsetsFromFrameString(animations[i]->frames);
@@ -217,13 +211,7 @@
 	
 	
 	newAnimation->numFramesX = texture->getWidth() / spriteWidth;	
-	if(newAnimation->numFramesX < 1) {
-		newAnimation->numFramesX = 1;
-	}
 	newAnimation->numFramesY = texture->getHeight() / spriteHeight;
-	if(newAnimation->numFramesY < 1) {
-		newAnimation->numFramesY = 1;
-	}	
 	newAnimation->spriteUVWidth = spriteUVWidth;
 	newAnimation->spriteUVHeight = spriteUVHeight;
 	
@@ -239,7 +227,7 @@
 	paused = false;
 	for(int i=0; i < animations.size(); i++) {
 		if(animations[i]->name == name) {
-			if(currentAnimation == animations[i] && !playingOnce && !once)
+			if(currentAnimation == animations[i] && !playingOnce)
 				return;
 			currentFrame = 0;			
 			currentAnimation = animations[i];
diff --git a/Core/Contents/Source/PolyShader.cpp b/Core/Contents/Source/PolyShader.cpp
--- a/Core/Contents/Source/PolyShader.cpp
+++ b/Core/Contents/Source/PolyShader.cpp
@@ -21,66 +21,9 @@
 */
 
 #include "PolyShader.h"
-#include "PolyMatrix4.h"
 
 using namespace Polycode;
 
-ShaderRenderTarget::ShaderRenderTarget() : PolyBase() {
-	texture = NULL;
-}
-
-void *ProgramParam::createParamData(int type) {
-	switch (type) {
-		case PARAM_NUMBER:
-		{
-			Number *val = new Number();
-			return (void*)val;
-		}
-		break;
-		case PARAM_VECTOR2:
-		{
-			Vector2 *val = new Vector2();
-			return (void*)val;
-		}
-		break;
-		case PARAM_VECTOR3:
-		{
-			Vector3 *val = new Vector3();
-			return (void*)val;
-		}
-		break;		
-		case PARAM_COLOR:
-		{
-			Color *val = new Color();
-			return (void*)val;
-		}
-		break;		
-		case PARAM_MATRIX:
-		{
-			Matrix4 *val = new Matrix4();
-			return (void*)val;
-		}
-		break;		
-		default:		
-			return NULL;
-		break;
-	}
-}
-
-ShaderProgram::ShaderProgram(int type) : Resource(Resource::RESOURCE_PROGRAM) {
-	this->type = type;
-}
-
-ShaderProgram::~ShaderProgram() {
-
-}
-
-void ShaderProgram::reloadResource() {
-	reloadProgram();
-	Resource::reloadResource();	
-}
-
-
 ShaderBinding::ShaderBinding(Shader *shader) {
 	this->shader = shader;
 }
@@ -91,7 +34,13 @@
 	}	
 	for(int i=0; i < renderTargetBindings.size(); i++) {
 		delete renderTargetBindings[i];
-	}
+	}	
+	for(int i=0; i < inTargetBindings.size(); i++) {
+		delete inTargetBindings[i];
+	}	
+	for(int i=0; i < outTargetBindings.size(); i++) {
+		delete outTargetBindings[i];
+	}	
 }
 
 unsigned int ShaderBinding::getNumLocalParams() {
@@ -119,67 +68,15 @@
 	return newParam;
 }
 
-LocalShaderParam * ShaderBinding::addParam(int type, const String& name) {
-	void *defaultData = ProgramParam::createParamData(type);
-	LocalShaderParam *newParam = new LocalShaderParam();
-	newParam->data = defaultData;
-	newParam->name = name;
-	localParams.push_back(newParam);
-	return newParam;
-}
-
 void ShaderBinding::addRenderTargetBinding(RenderTargetBinding *binding) {
 	renderTargetBindings.push_back(binding);
-	switch (binding->mode) {
-		case RenderTargetBinding::MODE_IN:
-			inTargetBindings.push_back(binding);		
-		break;
-		case RenderTargetBinding::MODE_OUT:
-			outTargetBindings.push_back(binding);		
-		break;
-		case RenderTargetBinding::MODE_COLOR:
-			colorTargetBindings.push_back(binding);		
-		break;
-		case RenderTargetBinding::MODE_DEPTH:
-			depthTargetBindings.push_back(binding);		
-		break;				
-	}
-}
-
-void ShaderBinding::removeRenderTargetBinding(RenderTargetBinding *binding) {
-	for(int i=0; i < renderTargetBindings.size(); i++) {
-		if(renderTargetBindings[i] == binding) {
-			renderTargetBindings.erase(renderTargetBindings.begin() + i);
-		}
+	if(binding->mode == RenderTargetBinding::MODE_IN) {
+		inTargetBindings.push_back(binding);
+		printf("Adding in target binding [%s] [%s]\n", binding->id.c_str(), binding->name.c_str());
+	} else {
+		outTargetBindings.push_back(binding);	
+		printf("Adding out target binding [%s]\n", binding->id.c_str());		
 	}
-	
-	for(int i=0; i < inTargetBindings.size(); i++) {
-		if(inTargetBindings[i] == binding) {
-			inTargetBindings.erase(inTargetBindings.begin() + i);
-			return;
-		}
-	}
-	for(int i=0; i < outTargetBindings.size(); i++) {
-		if(outTargetBindings[i] == binding) {
-			outTargetBindings.erase(outTargetBindings.begin() + i);
-			return;
-		}
-	}
-	
-	for(int i=0; i < colorTargetBindings.size(); i++) {
-		if(colorTargetBindings[i] == binding) {
-			colorTargetBindings.erase(colorTargetBindings.begin() + i);
-			return;
-		}
-	}
-
-	for(int i=0; i < depthTargetBindings.size(); i++) {
-		if(depthTargetBindings[i] == binding) {
-			depthTargetBindings.erase(depthTargetBindings.begin() + i);
-			return;
-		}
-	}
-	
 }
 
 unsigned int ShaderBinding::getNumRenderTargetBindings() {
@@ -206,38 +103,11 @@
 	return outTargetBindings[index];
 }
 
-unsigned int ShaderBinding::getNumColorTargetBindings() {
-	return colorTargetBindings.size();
-}
-
-RenderTargetBinding *ShaderBinding::getColorTargetBinding(unsigned int index) {
-	return colorTargetBindings[index];
-}
-
-unsigned int ShaderBinding::getNumDepthTargetBindings() {
-	return depthTargetBindings.size();
-}
-
-RenderTargetBinding *ShaderBinding::getDepthTargetBinding(unsigned int index) {
-	return depthTargetBindings[index];
-}
-
 
 Shader::Shader(int type) : Resource(Resource::RESOURCE_SHADER) {
 	numSpotLights = 0;
 	numAreaLights = 0;
 	this->type = type;
-	vp = NULL;
-	fp = NULL;
-}
-
-int Shader::getExpectedParamType(String name) {
-	for(int i=0; i < expectedParams.size(); i++) {
-		if(expectedParams[i].name == name) {
-			return expectedParams[i].type;
-		}
-	}
-	return ProgramParam::PARAM_UNKNOWN;
 }
 
 Shader::~Shader() {
diff --git a/Core/Contents/Source/PolySocket.cpp b/Core/Contents/Source/PolySocket.cpp
--- a/Core/Contents/Source/PolySocket.cpp
+++ b/Core/Contents/Source/PolySocket.cpp
@@ -53,10 +53,7 @@
 }
 
 void Address::setAddress(String ipAsString, unsigned int port) {
-	unsigned int a = 127;
-	unsigned int b = 0;
-	unsigned int c = 0;
-	unsigned int d = 1;
+	unsigned int a,b,c,d;
 	
 	vector<String> values = ipAsString.split(".");
 	if(values.size() == 4) {
diff --git a/Core/Contents/Source/PolySound.cpp b/Core/Contents/Source/PolySound.cpp
--- a/Core/Contents/Source/PolySound.cpp
+++ b/Core/Contents/Source/PolySound.cpp
@@ -21,9 +21,7 @@
 */
 
 #include "PolySound.h"
-#define OV_EXCLUDE_STATIC_CALLBACKS
 #include <vorbis/vorbisfile.h>
-#undef OV_EXCLUDE_STATIC_CALLBACKS
 #include "PolyString.h"
 #include "PolyLogger.h"
 
@@ -57,7 +55,7 @@
 	return OSBasics::tell(file);
 }
 
-Sound::Sound(const String& fileName) :  referenceDistance(1), maxDistance(MAX_FLOAT), pitch(1), volume(1), sampleLength(-1) {
+Sound::Sound(const String& fileName) : sampleLength(-1), volume(1),pitch(1),referenceDistance(1),maxDistance(MAX_FLOAT) {
 	checkALError("Construct: Loose error before construction");
 	soundLoaded = false;	
 
@@ -68,7 +66,7 @@
 	checkALError("Construct from file: Finished");
 }
 
-Sound::Sound(const char *data, int size, int channels, int freq, int bps) : referenceDistance(1), maxDistance(MAX_FLOAT), pitch(1), volume(1), buffer(AL_NONE), soundSource(AL_NONE), sampleLength(-1) {
+Sound::Sound(const char *data, int size, int channels, int freq, int bps) : buffer(AL_NONE), soundSource(AL_NONE), sampleLength(-1), volume(1),pitch(1),referenceDistance(1),maxDistance(MAX_FLOAT) {
 	checkALError("Construct: Loose error before construction");
 	buffer = loadBytes(data, size, freq, channels, bps);
 	
diff --git a/Core/Contents/Source/PolyString.cpp b/Core/Contents/Source/PolyString.cpp
--- a/Core/Contents/Source/PolyString.cpp
+++ b/Core/Contents/Source/PolyString.cpp
@@ -180,10 +180,9 @@
 }
 
 
-String String::NumberToString(Number value, int precision) {
+String String::NumberToString(Number value) {
 	char temp[128];
-	String precisionStr = String("%.")+IntToString(precision)+String("f");
-	sprintf(temp, precisionStr.c_str(), value);
+	sprintf(temp, "%.2f", value);
 	return String(temp);
 }
 
diff --git a/Core/Contents/Source/PolyStubSound.cpp b/Core/Contents/Source/PolyStubSound.cpp
--- a/Core/Contents/Source/PolyStubSound.cpp
+++ b/Core/Contents/Source/PolyStubSound.cpp
@@ -25,9 +25,7 @@
 // for the appropriate symbols, or builds will fail, lua bindings will fail, etc.
 
 #include "PolySound.h"
-#define OV_EXCLUDE_STATIC_CALLBACKS
 #include <vorbis/vorbisfile.h>
-#undef OV_EXCLUDE_STATIC_CALLBACKS
 #include "PolyString.h"
 #include "PolyLogger.h"
 
diff --git a/Core/Contents/Source/PolyTexture.cpp b/Core/Contents/Source/PolyTexture.cpp
--- a/Core/Contents/Source/PolyTexture.cpp
+++ b/Core/Contents/Source/PolyTexture.cpp
@@ -55,14 +55,7 @@
 	scrollSpeedY = 0;
 	scrollOffsetX = 0;
 	scrollOffsetY = 0;
-}
-
-void Texture::reloadResource() {
-	Image *image = new Image(getResourcePath());
-	setImageData(image);
-	recreateFromImageData();
-	delete image;
-	Resource::reloadResource();	
+	resourcePath = "";
 }
 
 int Texture::getWidth() const {
@@ -112,6 +105,14 @@
 
 }
 
+void Texture::setResourcePath(const String& newPath) {
+	resourcePath = newPath;
+}
+
+const String& Texture::getResourcePath() const {
+	return resourcePath;
+}
+
 void Texture::updateScroll(int elapsed) {
 	Number ef = ((Number)(elapsed))/1000.0f;
 	scrollOffsetX += scrollSpeedX*ef;
diff --git a/Core/Contents/Source/PolyWinCore.cpp b/Core/Contents/Source/PolyWinCore.cpp
--- a/Core/Contents/Source/PolyWinCore.cpp
+++ b/Core/Contents/Source/PolyWinCore.cpp
@@ -34,15 +34,11 @@
 #include <stdlib.h>
 #include <stdio.h>
 
-#include <shlobj.h>
-#include <shellapi.h>
-#include <commdlg.h>
+#include <Shlobj.h>
+#include <Shellapi.h>
+#include <Commdlg.h>
 
-#if defined(_MINGW)
-#ifndef MAPVK_VSC_TO_VK_EX
-#define MAPVK_VSC_TO_VK_EX 3
-#endif
-#else
+#if !defined(_MINGW)
 PFNWGLSWAPINTERVALEXTPROC       wglSwapIntervalEXT = NULL;
 PFNWGLGETSWAPINTERVALEXTPROC    wglGetSwapIntervalEXT = NULL;
 #endif
@@ -121,7 +117,7 @@
 		Logger::log("Error initializing sockets!\n");
 	}
 
-	((OpenGLRenderer*)renderer)->Init();
+	((OpenGLRenderer*)renderer)->initOSSpecific();
 
 	wglSwapIntervalEXT = (PFNWGLSWAPINTERVALEXTPROC) wglGetProcAddress("wglSwapIntervalEXT");
 	wglGetSwapIntervalEXT = (PFNWGLGETSWAPINTERVALEXTPROC) wglGetProcAddress("wglGetSwapIntervalEXT");
@@ -137,17 +133,7 @@
 }
 
 void Win32Core::enableMouse(bool newval) {
-	ShowCursor(newval);
-
-	Core::enableMouse(newval);
-}
-
-void Win32Core::captureMouse(bool newval) {
-	// Capture the mouse in the window holding
-	// our polycode screen.
-	SetCapture(hWnd);
-
-	Core::captureMouse(newval);
+	ShowCursor(newval);	
 }
 
 void Win32Core::warpCursor(int x, int y) {
@@ -164,20 +150,19 @@
 	return GetTickCount();
 }
 
-void Win32Core::Render() {
-	renderer->BeginRender();
-	services->Render();
-	renderer->EndRender();
-	SwapBuffers(hDC);
-}
-
 bool Win32Core::Update() {
 	if(!running)
 		return false;
-	doSleep();
+
 	checkEvents();
 	Gamepad_processEvents();
+
+	renderer->BeginRender();
 	updateCore();
+	renderer->EndRender();
+	
+	SwapBuffers(hDC);
+	doSleep();
 	return running;
 }
 
@@ -492,16 +477,20 @@
 					else
 						wParam = VK_LCONTROL;
 					break;
-				case VK_MENU:
+				case 33:
 					if ( lParam&EXTENDED_KEYMASK )
 						wParam = VK_RMENU;
 					else
 						wParam = VK_LMENU;
 					break;
 				case VK_SHIFT:
-					// Use MapVirtualKey to determine whether it's LSHIFT or RSHIFT by scancode.
-					UINT scancode = (lParam & 0x00ff0000) >> 16;
-					wParam = MapVirtualKey(scancode, MAPVK_VSC_TO_VK_EX);
+					// We can't tell if it's LSHIFT or RSHIFT,
+					// so use GetKeyState to tell which it is.
+					if( GetKeyState(VK_LSHIFT) ) {
+						wParam = VK_LSHIFT;
+					} else {
+						wParam = VK_RSHIFT;
+					}
 					break;
 			}
 
@@ -707,12 +696,6 @@
 					case InputEvent::EVENT_MOUSEUP:
 							input->setMouseButtonState(event.mouseButton, false, getTicks());
 					break;
-					case InputEvent::EVENT_MOUSEWHEEL_UP:
-						input->mouseWheelUp(getTicks());
-					break;
-					case InputEvent::EVENT_MOUSEWHEEL_DOWN:
-						input->mouseWheelDown(getTicks());						
-					break;	
 					case InputEvent::EVENT_KEYDOWN:
 						if(!checkSpecialKeyEvents((event.keyCode))) {
 							input->setKeyState(event.keyCode, (char)event.unicodeChar, true, getTicks());
@@ -1285,4 +1268,4 @@
 	String retString = String(c);
 	GlobalUnlock(clip0);
 	return retString;
-}
+}
\ No newline at end of file
diff --git a/Core/Contents/Source/tinyxmlparser.cpp b/Core/Contents/Source/tinyxmlparser.cpp
--- a/Core/Contents/Source/tinyxmlparser.cpp
+++ b/Core/Contents/Source/tinyxmlparser.cpp
@@ -354,7 +354,7 @@
 	}
 	else
 	{
-		while ( *p && (IsWhiteSpace( *p ) || *p == '\n' || *p =='\r') )
+		while ( *p && IsWhiteSpace( *p ) || *p == '\n' || *p =='\r' )
 			++p;
 	}
 
diff --git a/Documentation/CMakeLists.txt b/Documentation/CMakeLists.txt
--- a/Documentation/CMakeLists.txt
+++ b/Documentation/CMakeLists.txt
@@ -4,19 +4,12 @@
 
 IF(DOXYGEN_FOUND)
 
-FILE(GLOB HEADER_DEPENDENCIES_CORE ${Polycode_SOURCE_DIR}/Core/Contents/Include/*.h)
-FILE(GLOB HEADER_DEPENDENCIES_2DPHYSICS ${Polycode_SOURCE_DIR}/Modules/Contents/2DPhysics/Include/*.h)
-FILE(GLOB HEADER_DEPENDENCIES_3DPHYSICS ${Polycode_SOURCE_DIR}/Modules/Contents/3DPhysics/Include/*.h)
-FILE(GLOB HEADER_DEPENDENCIES_UI ${Polycode_SOURCE_DIR}/Modules/Contents/UI/Include/*.h)
-
 ADD_CUSTOM_COMMAND(
 OUTPUT doc_cmd
 COMMAND ${DOXYGEN_EXECUTABLE} ${Polycode_SOURCE_DIR}/Documentation/Doxygen/Polycode.doxygen
 COMMAND ${DOXYGEN_EXECUTABLE} ${Polycode_SOURCE_DIR}/Documentation/Doxygen/Physics2D.doxygen
 COMMAND ${DOXYGEN_EXECUTABLE} ${Polycode_SOURCE_DIR}/Documentation/Doxygen/Physics3D.doxygen
-COMMAND ${CMAKE_COMMAND} -E touch ${CMAKE_CURRENT_BINARY_DIR}/doc_cmd # Generate the given output file(empty file), to keep track of whether we need to rebuild.
 WORKING_DIRECTORY ${Polycode_SOURCE_DIR}/Documentation/Doxygen/
-DEPENDS ${HEADER_DEPENDENCIES_CORE} ${HEADER_DEPENDENCIES_2DPHYSICS} ${HEADER_DEPENDENCIES_3DPHYSICS} ${HEADER_DEPENDENCIES_UI}
 COMMENT "Generating Polycode API documentation with Doxygen" VERBATIM
 )
 
diff --git a/Documentation/Doxygen/Physics2D.doxygen b/Documentation/Doxygen/Physics2D.doxygen
--- a/Documentation/Doxygen/Physics2D.doxygen
+++ b/Documentation/Doxygen/Physics2D.doxygen
@@ -619,7 +619,7 @@
 # directories like "/usr/src/myproject". Separate the files or directories 
 # with spaces.
 
-INPUT                  = ../../Modules/Contents/2DPhysics  index.dox
+INPUT                  = ../../Modules/Contents/2DPhysics
 
 # This tag can be used to specify the character encoding of the source files 
 # that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is 
diff --git a/Documentation/Doxygen/Physics3D.doxygen b/Documentation/Doxygen/Physics3D.doxygen
--- a/Documentation/Doxygen/Physics3D.doxygen
+++ b/Documentation/Doxygen/Physics3D.doxygen
@@ -619,7 +619,7 @@
 # directories like "/usr/src/myproject". Separate the files or directories 
 # with spaces.
 
-INPUT                  = ../../Modules/Contents/3DPhysics index.dox
+INPUT                  = ../../Modules/Contents/3DPhysics
 
 # This tag can be used to specify the character encoding of the source files 
 # that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is 
diff --git a/Documentation/Doxygen/Polycode.doxygen b/Documentation/Doxygen/Polycode.doxygen
--- a/Documentation/Doxygen/Polycode.doxygen
+++ b/Documentation/Doxygen/Polycode.doxygen
@@ -619,7 +619,7 @@
 # directories like "/usr/src/myproject". Separate the files or directories 
 # with spaces.
 
-INPUT                  = ../../Core/Contents index.dox
+INPUT                  = ../../Core/Contents
 
 # This tag can be used to specify the character encoding of the source files 
 # that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is 
@@ -1524,7 +1524,7 @@
 # When a file name is specified after GENERATE_TAGFILE, doxygen will create 
 # a tag file that is based on the input files it reads.
 
-GENERATE_TAGFILE       = tags/Polycode_core.tag
+GENERATE_TAGFILE       = 
 
 # If the ALLEXTERNALS tag is set to YES all external classes will be listed 
 # in the class index. If set to NO only the inherited external classes 
diff --git a/Documentation/Doxygen/Polycode_ui.doxygen b/Documentation/Doxygen/Polycode_ui.doxygen
deleted file mode 100644
--- a/Documentation/Doxygen/Polycode_ui.doxygen
+++ /dev/null
@@ -1,1751 +0,0 @@
-# Doxyfile 1.7.4
-
-# This file describes the settings to be used by the documentation system
-# doxygen (www.doxygen.org) for a project
-#
-# All text after a hash (#) is considered a comment and will be ignored
-# The format is:
-#       TAG = value [value, ...]
-# For lists items can also be appended using:
-#       TAG += value [value, ...]
-# Values that contain spaces should be placed between quotes (" ")
-
-#---------------------------------------------------------------------------
-# Project related configuration options
-#---------------------------------------------------------------------------
-
-# This tag specifies the encoding used for all characters in the config file 
-# that follow. The default is UTF-8 which is also the encoding used for all 
-# text before the first occurrence of this tag. Doxygen uses libiconv (or the 
-# iconv built into libc) for the transcoding. See 
-# http://www.gnu.org/software/libiconv for the list of possible encodings.
-
-DOXYFILE_ENCODING      = UTF-8
-
-# The PROJECT_NAME tag is a single word (or a sequence of words surrounded 
-# by quotes) that should identify the project.
-
-PROJECT_NAME           = Polycode UI
-
-# The PROJECT_NUMBER tag can be used to enter a project or revision number. 
-# This could be handy for archiving the generated documentation or 
-# if some version control system is used.
-
-PROJECT_NUMBER         = 
-
-# Using the PROJECT_BRIEF tag one can provide an optional one line description 
-# for a project that appears at the top of each page and should give viewer 
-# a quick idea about the purpose of the project. Keep the description short.
-
-PROJECT_BRIEF          = 
-
-# With the PROJECT_LOGO tag one can specify an logo or icon that is 
-# included in the documentation. The maximum height of the logo should not 
-# exceed 55 pixels and the maximum width should not exceed 200 pixels. 
-# Doxygen will copy the logo to the output directory.
-
-PROJECT_LOGO           = 
-
-# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) 
-# base path where the generated documentation will be put. 
-# If a relative path is entered, it will be relative to the location 
-# where doxygen was started. If left blank the current directory will be used.
-
-OUTPUT_DIRECTORY       = ./output/standalone/PolycodeUI
-
-# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create 
-# 4096 sub-directories (in 2 levels) under the output directory of each output 
-# format and will distribute the generated files over these directories. 
-# Enabling this option can be useful when feeding doxygen a huge amount of 
-# source files, where putting all generated files in the same directory would 
-# otherwise cause performance problems for the file system.
-
-CREATE_SUBDIRS         = NO
-
-# The OUTPUT_LANGUAGE tag is used to specify the language in which all 
-# documentation generated by doxygen is written. Doxygen will use this 
-# information to generate all constant output in the proper language. 
-# The default language is English, other supported languages are: 
-# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional, 
-# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German, 
-# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English 
-# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian, 
-# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak, 
-# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.
-
-OUTPUT_LANGUAGE        = English
-
-# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will 
-# include brief member descriptions after the members that are listed in 
-# the file and class documentation (similar to JavaDoc). 
-# Set to NO to disable this.
-
-BRIEF_MEMBER_DESC      = YES
-
-# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend 
-# the brief description of a member or function before the detailed description. 
-# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the 
-# brief descriptions will be completely suppressed.
-
-REPEAT_BRIEF           = YES
-
-# This tag implements a quasi-intelligent brief description abbreviator 
-# that is used to form the text in various listings. Each string 
-# in this list, if found as the leading text of the brief description, will be 
-# stripped from the text and the result after processing the whole list, is 
-# used as the annotated text. Otherwise, the brief description is used as-is. 
-# If left blank, the following values are used ("$name" is automatically 
-# replaced with the name of the entity): "The $name class" "The $name widget" 
-# "The $name file" "is" "provides" "specifies" "contains" 
-# "represents" "a" "an" "the"
-
-ABBREVIATE_BRIEF       = "The $name class" \
-                         "The $name widget" \
-                         "The $name file" \
-                         is \
-                         provides \
-                         specifies \
-                         contains \
-                         represents \
-                         a \
-                         an \
-                         the
-
-# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then 
-# Doxygen will generate a detailed section even if there is only a brief 
-# description.
-
-ALWAYS_DETAILED_SEC    = NO
-
-# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all 
-# inherited members of a class in the documentation of that class as if those 
-# members were ordinary class members. Constructors, destructors and assignment 
-# operators of the base classes will not be shown.
-
-INLINE_INHERITED_MEMB  = NO
-
-# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full 
-# path before files name in the file list and in the header files. If set 
-# to NO the shortest path that makes the file name unique will be used.
-
-FULL_PATH_NAMES        = YES
-
-# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag 
-# can be used to strip a user-defined part of the path. Stripping is 
-# only done if one of the specified strings matches the left-hand part of 
-# the path. The tag can be used to show relative paths in the file list. 
-# If left blank the directory from which doxygen is run is used as the 
-# path to strip.
-
-STRIP_FROM_PATH        = 
-
-# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of 
-# the path mentioned in the documentation of a class, which tells 
-# the reader which header file to include in order to use a class. 
-# If left blank only the name of the header file containing the class 
-# definition is used. Otherwise one should specify the include paths that 
-# are normally passed to the compiler using the -I flag.
-
-STRIP_FROM_INC_PATH    = 
-
-# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter 
-# (but less readable) file names. This can be useful if your file system 
-# doesn't support long names like on DOS, Mac, or CD-ROM.
-
-SHORT_NAMES            = NO
-
-# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen 
-# will interpret the first line (until the first dot) of a JavaDoc-style 
-# comment as the brief description. If set to NO, the JavaDoc 
-# comments will behave just like regular Qt-style comments 
-# (thus requiring an explicit @brief command for a brief description.)
-
-JAVADOC_AUTOBRIEF      = YES
-
-# If the QT_AUTOBRIEF tag is set to YES then Doxygen will 
-# interpret the first line (until the first dot) of a Qt-style 
-# comment as the brief description. If set to NO, the comments 
-# will behave just like regular Qt-style comments (thus requiring 
-# an explicit \brief command for a brief description.)
-
-QT_AUTOBRIEF           = NO
-
-# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen 
-# treat a multi-line C++ special comment block (i.e. a block of //! or /// 
-# comments) as a brief description. This used to be the default behaviour. 
-# The new default is to treat a multi-line C++ comment block as a detailed 
-# description. Set this tag to YES if you prefer the old behaviour instead.
-
-MULTILINE_CPP_IS_BRIEF = NO
-
-# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented 
-# member inherits the documentation from any documented member that it 
-# re-implements.
-
-INHERIT_DOCS           = YES
-
-# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce 
-# a new page for each member. If set to NO, the documentation of a member will 
-# be part of the file/class/namespace that contains it.
-
-SEPARATE_MEMBER_PAGES  = NO
-
-# The TAB_SIZE tag can be used to set the number of spaces in a tab. 
-# Doxygen uses this value to replace tabs by spaces in code fragments.
-
-TAB_SIZE               = 8
-
-# This tag can be used to specify a number of aliases that acts 
-# as commands in the documentation. An alias has the form "name=value". 
-# For example adding "sideeffect=\par Side Effects:\n" will allow you to 
-# put the command \sideeffect (or @sideeffect) in the documentation, which 
-# will result in a user-defined paragraph with heading "Side Effects:". 
-# You can put \n's in the value part of an alias to insert newlines.
-
-ALIASES                = 
-
-# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C 
-# sources only. Doxygen will then generate output that is more tailored for C. 
-# For instance, some of the names that are used will be different. The list 
-# of all members will be omitted, etc.
-
-OPTIMIZE_OUTPUT_FOR_C  = NO
-
-# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java 
-# sources only. Doxygen will then generate output that is more tailored for 
-# Java. For instance, namespaces will be presented as packages, qualified 
-# scopes will look different, etc.
-
-OPTIMIZE_OUTPUT_JAVA   = NO
-
-# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran 
-# sources only. Doxygen will then generate output that is more tailored for 
-# Fortran.
-
-OPTIMIZE_FOR_FORTRAN   = NO
-
-# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL 
-# sources. Doxygen will then generate output that is tailored for 
-# VHDL.
-
-OPTIMIZE_OUTPUT_VHDL   = NO
-
-# Doxygen selects the parser to use depending on the extension of the files it 
-# parses. With this tag you can assign which parser to use for a given extension. 
-# Doxygen has a built-in mapping, but you can override or extend it using this 
-# tag. The format is ext=language, where ext is a file extension, and language 
-# is one of the parsers supported by doxygen: IDL, Java, Javascript, CSharp, C, 
-# C++, D, PHP, Objective-C, Python, Fortran, VHDL, C, C++. For instance to make 
-# doxygen treat .inc files as Fortran files (default is PHP), and .f files as C 
-# (default is Fortran), use: inc=Fortran f=C. Note that for custom extensions 
-# you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.
-
-EXTENSION_MAPPING      = 
-
-# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want 
-# to include (a tag file for) the STL sources as input, then you should 
-# set this tag to YES in order to let doxygen match functions declarations and 
-# definitions whose arguments contain STL classes (e.g. func(std::string); v.s. 
-# func(std::string) {}). This also makes the inheritance and collaboration 
-# diagrams that involve STL classes more complete and accurate.
-
-BUILTIN_STL_SUPPORT    = NO
-
-# If you use Microsoft's C++/CLI language, you should set this option to YES to 
-# enable parsing support.
-
-CPP_CLI_SUPPORT        = NO
-
-# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only. 
-# Doxygen will parse them like normal C++ but will assume all classes use public 
-# instead of private inheritance when no explicit protection keyword is present.
-
-SIP_SUPPORT            = NO
-
-# For Microsoft's IDL there are propget and propput attributes to indicate getter 
-# and setter methods for a property. Setting this option to YES (the default) 
-# will make doxygen replace the get and set methods by a property in the 
-# documentation. This will only work if the methods are indeed getting or 
-# setting a simple type. If this is not the case, or you want to show the 
-# methods anyway, you should set this option to NO.
-
-IDL_PROPERTY_SUPPORT   = YES
-
-# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC 
-# tag is set to YES, then doxygen will reuse the documentation of the first 
-# member in the group (if any) for the other members of the group. By default 
-# all members of a group must be documented explicitly.
-
-DISTRIBUTE_GROUP_DOC   = NO
-
-# Set the SUBGROUPING tag to YES (the default) to allow class member groups of 
-# the same type (for instance a group of public functions) to be put as a 
-# subgroup of that type (e.g. under the Public Functions section). Set it to 
-# NO to prevent subgrouping. Alternatively, this can be done per class using 
-# the \nosubgrouping command.
-
-SUBGROUPING            = YES
-
-# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and 
-# unions are shown inside the group in which they are included (e.g. using 
-# @ingroup) instead of on a separate page (for HTML and Man pages) or 
-# section (for LaTeX and RTF).
-
-INLINE_GROUPED_CLASSES = NO
-
-# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum 
-# is documented as struct, union, or enum with the name of the typedef. So 
-# typedef struct TypeS {} TypeT, will appear in the documentation as a struct 
-# with name TypeT. When disabled the typedef will appear as a member of a file, 
-# namespace, or class. And the struct will be named TypeS. This can typically 
-# be useful for C code in case the coding convention dictates that all compound 
-# types are typedef'ed and only the typedef is referenced, never the tag name.
-
-TYPEDEF_HIDES_STRUCT   = NO
-
-# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to 
-# determine which symbols to keep in memory and which to flush to disk. 
-# When the cache is full, less often used symbols will be written to disk. 
-# For small to medium size projects (<1000 input files) the default value is 
-# probably good enough. For larger projects a too small cache size can cause 
-# doxygen to be busy swapping symbols to and from disk most of the time 
-# causing a significant performance penalty. 
-# If the system has enough physical memory increasing the cache will improve the 
-# performance by keeping more symbols in memory. Note that the value works on 
-# a logarithmic scale so increasing the size by one will roughly double the 
-# memory usage. The cache size is given by this formula: 
-# 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0, 
-# corresponding to a cache size of 2^16 = 65536 symbols
-
-SYMBOL_CACHE_SIZE      = 0
-
-#---------------------------------------------------------------------------
-# Build related configuration options
-#---------------------------------------------------------------------------
-
-# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in 
-# documentation are documented, even if no documentation was available. 
-# Private class members and static file members will be hidden unless 
-# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES
-
-EXTRACT_ALL            = NO
-
-# If the EXTRACT_PRIVATE tag is set to YES all private members of a class 
-# will be included in the documentation.
-
-EXTRACT_PRIVATE        = NO
-
-# If the EXTRACT_STATIC tag is set to YES all static members of a file 
-# will be included in the documentation.
-
-EXTRACT_STATIC         = YES
-
-# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) 
-# defined locally in source files will be included in the documentation. 
-# If set to NO only classes defined in header files are included.
-
-EXTRACT_LOCAL_CLASSES  = YES
-
-# This flag is only useful for Objective-C code. When set to YES local 
-# methods, which are defined in the implementation section but not in 
-# the interface are included in the documentation. 
-# If set to NO (the default) only methods in the interface are included.
-
-EXTRACT_LOCAL_METHODS  = NO
-
-# If this flag is set to YES, the members of anonymous namespaces will be 
-# extracted and appear in the documentation as a namespace called 
-# 'anonymous_namespace{file}', where file will be replaced with the base 
-# name of the file that contains the anonymous namespace. By default 
-# anonymous namespaces are hidden.
-
-EXTRACT_ANON_NSPACES   = NO
-
-# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all 
-# undocumented members of documented classes, files or namespaces. 
-# If set to NO (the default) these members will be included in the 
-# various overviews, but no documentation section is generated. 
-# This option has no effect if EXTRACT_ALL is enabled.
-
-HIDE_UNDOC_MEMBERS     = YES
-
-# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all 
-# undocumented classes that are normally visible in the class hierarchy. 
-# If set to NO (the default) these classes will be included in the various 
-# overviews. This option has no effect if EXTRACT_ALL is enabled.
-
-HIDE_UNDOC_CLASSES     = YES
-
-# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all 
-# friend (class|struct|union) declarations. 
-# If set to NO (the default) these declarations will be included in the 
-# documentation.
-
-HIDE_FRIEND_COMPOUNDS  = NO
-
-# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any 
-# documentation blocks found inside the body of a function. 
-# If set to NO (the default) these blocks will be appended to the 
-# function's detailed documentation block.
-
-HIDE_IN_BODY_DOCS      = NO
-
-# The INTERNAL_DOCS tag determines if documentation 
-# that is typed after a \internal command is included. If the tag is set 
-# to NO (the default) then the documentation will be excluded. 
-# Set it to YES to include the internal documentation.
-
-INTERNAL_DOCS          = NO
-
-# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate 
-# file names in lower-case letters. If set to YES upper-case letters are also 
-# allowed. This is useful if you have classes or files whose names only differ 
-# in case and if your file system supports case sensitive file names. Windows 
-# and Mac users are advised to set this option to NO.
-
-CASE_SENSE_NAMES       = NO
-
-# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen 
-# will show members with their full class and namespace scopes in the 
-# documentation. If set to YES the scope will be hidden.
-
-HIDE_SCOPE_NAMES       = NO
-
-# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen 
-# will put a list of the files that are included by a file in the documentation 
-# of that file.
-
-SHOW_INCLUDE_FILES     = NO
-
-# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen 
-# will list include files with double quotes in the documentation 
-# rather than with sharp brackets.
-
-FORCE_LOCAL_INCLUDES   = NO
-
-# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] 
-# is inserted in the documentation for inline members.
-
-INLINE_INFO            = YES
-
-# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen 
-# will sort the (detailed) documentation of file and class members 
-# alphabetically by member name. If set to NO the members will appear in 
-# declaration order.
-
-SORT_MEMBER_DOCS       = YES
-
-# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the 
-# brief documentation of file, namespace and class members alphabetically 
-# by member name. If set to NO (the default) the members will appear in 
-# declaration order.
-
-SORT_BRIEF_DOCS        = NO
-
-# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen 
-# will sort the (brief and detailed) documentation of class members so that 
-# constructors and destructors are listed first. If set to NO (the default) 
-# the constructors will appear in the respective orders defined by 
-# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS. 
-# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO 
-# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.
-
-SORT_MEMBERS_CTORS_1ST = NO
-
-# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the 
-# hierarchy of group names into alphabetical order. If set to NO (the default) 
-# the group names will appear in their defined order.
-
-SORT_GROUP_NAMES       = NO
-
-# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be 
-# sorted by fully-qualified names, including namespaces. If set to 
-# NO (the default), the class list will be sorted only by class name, 
-# not including the namespace part. 
-# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES. 
-# Note: This option applies only to the class list, not to the 
-# alphabetical list.
-
-SORT_BY_SCOPE_NAME     = NO
-
-# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to 
-# do proper type resolution of all parameters of a function it will reject a 
-# match between the prototype and the implementation of a member function even 
-# if there is only one candidate or it is obvious which candidate to choose 
-# by doing a simple string match. By disabling STRICT_PROTO_MATCHING doxygen 
-# will still accept a match between prototype and implementation in such cases.
-
-STRICT_PROTO_MATCHING  = NO
-
-# The GENERATE_TODOLIST tag can be used to enable (YES) or 
-# disable (NO) the todo list. This list is created by putting \todo 
-# commands in the documentation.
-
-GENERATE_TODOLIST      = YES
-
-# The GENERATE_TESTLIST tag can be used to enable (YES) or 
-# disable (NO) the test list. This list is created by putting \test 
-# commands in the documentation.
-
-GENERATE_TESTLIST      = YES
-
-# The GENERATE_BUGLIST tag can be used to enable (YES) or 
-# disable (NO) the bug list. This list is created by putting \bug 
-# commands in the documentation.
-
-GENERATE_BUGLIST       = YES
-
-# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or 
-# disable (NO) the deprecated list. This list is created by putting 
-# \deprecated commands in the documentation.
-
-GENERATE_DEPRECATEDLIST= YES
-
-# The ENABLED_SECTIONS tag can be used to enable conditional 
-# documentation sections, marked by \if sectionname ... \endif.
-
-ENABLED_SECTIONS       = 
-
-# The MAX_INITIALIZER_LINES tag determines the maximum number of lines 
-# the initial value of a variable or macro consists of for it to appear in 
-# the documentation. If the initializer consists of more lines than specified 
-# here it will be hidden. Use a value of 0 to hide initializers completely. 
-# The appearance of the initializer of individual variables and macros in the 
-# documentation can be controlled using \showinitializer or \hideinitializer 
-# command in the documentation regardless of this setting.
-
-MAX_INITIALIZER_LINES  = 30
-
-# Set the SHOW_USED_FILES tag to NO to disable the list of files generated 
-# at the bottom of the documentation of classes and structs. If set to YES the 
-# list will mention the files that were used to generate the documentation.
-
-SHOW_USED_FILES        = NO
-
-# If the sources in your project are distributed over multiple directories 
-# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy 
-# in the documentation. The default is NO.
-
-SHOW_DIRECTORIES       = NO
-
-# Set the SHOW_FILES tag to NO to disable the generation of the Files page. 
-# This will remove the Files entry from the Quick Index and from the 
-# Folder Tree View (if specified). The default is YES.
-
-SHOW_FILES             = NO
-
-# Set the SHOW_NAMESPACES tag to NO to disable the generation of the 
-# Namespaces page.  This will remove the Namespaces entry from the Quick Index 
-# and from the Folder Tree View (if specified). The default is YES.
-
-SHOW_NAMESPACES        = NO
-
-# The FILE_VERSION_FILTER tag can be used to specify a program or script that 
-# doxygen should invoke to get the current version for each file (typically from 
-# the version control system). Doxygen will invoke the program by executing (via 
-# popen()) the command <command> <input-file>, where <command> is the value of 
-# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file 
-# provided by doxygen. Whatever the program writes to standard output 
-# is used as the file version. See the manual for examples.
-
-FILE_VERSION_FILTER    = 
-
-# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed 
-# by doxygen. The layout file controls the global structure of the generated 
-# output files in an output format independent way. The create the layout file 
-# that represents doxygen's defaults, run doxygen with the -l option. 
-# You can optionally specify a file name after the option, if omitted 
-# DoxygenLayout.xml will be used as the name of the layout file.
-
-LAYOUT_FILE            = 
-
-#---------------------------------------------------------------------------
-# configuration options related to warning and progress messages
-#---------------------------------------------------------------------------
-
-# The QUIET tag can be used to turn on/off the messages that are generated 
-# by doxygen. Possible values are YES and NO. If left blank NO is used.
-
-QUIET                  = NO
-
-# The WARNINGS tag can be used to turn on/off the warning messages that are 
-# generated by doxygen. Possible values are YES and NO. If left blank 
-# NO is used.
-
-WARNINGS               = YES
-
-# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings 
-# for undocumented members. If EXTRACT_ALL is set to YES then this flag will 
-# automatically be disabled.
-
-WARN_IF_UNDOCUMENTED   = YES
-
-# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for 
-# potential errors in the documentation, such as not documenting some 
-# parameters in a documented function, or documenting parameters that 
-# don't exist or using markup commands wrongly.
-
-WARN_IF_DOC_ERROR      = YES
-
-# The WARN_NO_PARAMDOC option can be enabled to get warnings for 
-# functions that are documented, but have no documentation for their parameters 
-# or return value. If set to NO (the default) doxygen will only warn about 
-# wrong or incomplete parameter documentation, but not about the absence of 
-# documentation.
-
-WARN_NO_PARAMDOC       = NO
-
-# The WARN_FORMAT tag determines the format of the warning messages that 
-# doxygen can produce. The string should contain the $file, $line, and $text 
-# tags, which will be replaced by the file and line number from which the 
-# warning originated and the warning text. Optionally the format may contain 
-# $version, which will be replaced by the version of the file (if it could 
-# be obtained via FILE_VERSION_FILTER)
-
-WARN_FORMAT            = "$file:$line: $text"
-
-# The WARN_LOGFILE tag can be used to specify a file to which warning 
-# and error messages should be written. If left blank the output is written 
-# to stderr.
-
-WARN_LOGFILE           = 
-
-#---------------------------------------------------------------------------
-# configuration options related to the input files
-#---------------------------------------------------------------------------
-
-# The INPUT tag can be used to specify the files and/or directories that contain 
-# documented source files. You may enter file names like "myfile.cpp" or 
-# directories like "/usr/src/myproject". Separate the files or directories 
-# with spaces.
-
-INPUT                  = ../../Modules/Contents/UI index.dox
-
-# This tag can be used to specify the character encoding of the source files 
-# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is 
-# also the default input encoding. Doxygen uses libiconv (or the iconv built 
-# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for 
-# the list of possible encodings.
-
-INPUT_ENCODING         = UTF-8
-
-# If the value of the INPUT tag contains directories, you can use the 
-# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
-# and *.h) to filter out the source-files in the directories. If left 
-# blank the following patterns are tested: 
-# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh 
-# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py 
-# *.f90 *.f *.for *.vhd *.vhdl
-
-FILE_PATTERNS          = *.c \
-                         *.cc \
-                         *.cxx \
-                         *.cpp \
-                         *.c++ \
-                         *.d \
-                         *.java \
-                         *.ii \
-                         *.ixx \
-                         *.ipp \
-                         *.i++ \
-                         *.inl \
-                         *.h \
-                         *.hh \
-                         *.hxx \
-                         *.hpp \
-                         *.h++ \
-                         *.idl \
-                         *.odl \
-                         *.cs \
-                         *.php \
-                         *.php3 \
-                         *.inc \
-                         *.m \
-                         *.mm \
-                         *.dox \
-                         *.py \
-                         *.f90 \
-                         *.f \
-                         *.for \
-                         *.vhd \
-                         *.vhdl
-
-# The RECURSIVE tag can be used to turn specify whether or not subdirectories 
-# should be searched for input files as well. Possible values are YES and NO. 
-# If left blank NO is used.
-
-RECURSIVE              = YES
-
-# The EXCLUDE tag can be used to specify files and/or directories that should 
-# excluded from the INPUT source files. This way you can easily exclude a 
-# subdirectory from a directory tree whose root is specified with the INPUT tag.
-
-EXCLUDE                = 
-
-# The EXCLUDE_SYMLINKS tag can be used select whether or not files or 
-# directories that are symbolic links (a Unix file system feature) are excluded 
-# from the input.
-
-EXCLUDE_SYMLINKS       = NO
-
-# If the value of the INPUT tag contains directories, you can use the 
-# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude 
-# certain files from those directories. Note that the wildcards are matched 
-# against the file with absolute path, so to exclude all test directories 
-# for example use the pattern */test/*
-
-EXCLUDE_PATTERNS       = 
-
-# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names 
-# (namespaces, classes, functions, etc.) that should be excluded from the 
-# output. The symbol name can be a fully qualified name, a word, or if the 
-# wildcard * is used, a substring. Examples: ANamespace, AClass, 
-# AClass::ANamespace, ANamespace::*Test
-
-EXCLUDE_SYMBOLS        = 
-
-# The EXAMPLE_PATH tag can be used to specify one or more files or 
-# directories that contain example code fragments that are included (see 
-# the \include command).
-
-EXAMPLE_PATH           = 
-
-# If the value of the EXAMPLE_PATH tag contains directories, you can use the 
-# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
-# and *.h) to filter out the source-files in the directories. If left 
-# blank all files are included.
-
-EXAMPLE_PATTERNS       = *
-
-# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be 
-# searched for input files to be used with the \include or \dontinclude 
-# commands irrespective of the value of the RECURSIVE tag. 
-# Possible values are YES and NO. If left blank NO is used.
-
-EXAMPLE_RECURSIVE      = NO
-
-# The IMAGE_PATH tag can be used to specify one or more files or 
-# directories that contain image that are included in the documentation (see 
-# the \image command).
-
-IMAGE_PATH             = 
-
-# The INPUT_FILTER tag can be used to specify a program that doxygen should 
-# invoke to filter for each input file. Doxygen will invoke the filter program 
-# by executing (via popen()) the command <filter> <input-file>, where <filter> 
-# is the value of the INPUT_FILTER tag, and <input-file> is the name of an 
-# input file. Doxygen will then use the output that the filter program writes 
-# to standard output.  If FILTER_PATTERNS is specified, this tag will be 
-# ignored.
-
-INPUT_FILTER           = 
-
-# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern 
-# basis.  Doxygen will compare the file name with each pattern and apply the 
-# filter if there is a match.  The filters are a list of the form: 
-# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further 
-# info on how filters are used. If FILTER_PATTERNS is empty or if 
-# non of the patterns match the file name, INPUT_FILTER is applied.
-
-FILTER_PATTERNS        = 
-
-# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using 
-# INPUT_FILTER) will be used to filter the input files when producing source 
-# files to browse (i.e. when SOURCE_BROWSER is set to YES).
-
-FILTER_SOURCE_FILES    = NO
-
-# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file 
-# pattern. A pattern will override the setting for FILTER_PATTERN (if any) 
-# and it is also possible to disable source filtering for a specific pattern 
-# using *.ext= (so without naming a filter). This option only has effect when 
-# FILTER_SOURCE_FILES is enabled.
-
-FILTER_SOURCE_PATTERNS = 
-
-#---------------------------------------------------------------------------
-# configuration options related to source browsing
-#---------------------------------------------------------------------------
-
-# If the SOURCE_BROWSER tag is set to YES then a list of source files will 
-# be generated. Documented entities will be cross-referenced with these sources. 
-# Note: To get rid of all source code in the generated output, make sure also 
-# VERBATIM_HEADERS is set to NO.
-
-SOURCE_BROWSER         = NO
-
-# Setting the INLINE_SOURCES tag to YES will include the body 
-# of functions and classes directly in the documentation.
-
-INLINE_SOURCES         = NO
-
-# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct 
-# doxygen to hide any special comment blocks from generated source code 
-# fragments. Normal C and C++ comments will always remain visible.
-
-STRIP_CODE_COMMENTS    = YES
-
-# If the REFERENCED_BY_RELATION tag is set to YES 
-# then for each documented function all documented 
-# functions referencing it will be listed.
-
-REFERENCED_BY_RELATION = NO
-
-# If the REFERENCES_RELATION tag is set to YES 
-# then for each documented function all documented entities 
-# called/used by that function will be listed.
-
-REFERENCES_RELATION    = NO
-
-# If the REFERENCES_LINK_SOURCE tag is set to YES (the default) 
-# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from 
-# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will 
-# link to the source code.  Otherwise they will link to the documentation.
-
-REFERENCES_LINK_SOURCE = NO
-
-# If the USE_HTAGS tag is set to YES then the references to source code 
-# will point to the HTML generated by the htags(1) tool instead of doxygen 
-# built-in source browser. The htags tool is part of GNU's global source 
-# tagging system (see http://www.gnu.org/software/global/global.html). You 
-# will need version 4.8.6 or higher.
-
-USE_HTAGS              = NO
-
-# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen 
-# will generate a verbatim copy of the header file for each class for 
-# which an include is specified. Set to NO to disable this.
-
-VERBATIM_HEADERS       = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the alphabetical class index
-#---------------------------------------------------------------------------
-
-# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index 
-# of all compounds will be generated. Enable this if the project 
-# contains a lot of classes, structs, unions or interfaces.
-
-ALPHABETICAL_INDEX     = YES
-
-# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then 
-# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns 
-# in which this list will be split (can be a number in the range [1..20])
-
-COLS_IN_ALPHA_INDEX    = 5
-
-# In case all classes in a project start with a common prefix, all 
-# classes will be put under the same header in the alphabetical index. 
-# The IGNORE_PREFIX tag can be used to specify one or more prefixes that 
-# should be ignored while generating the index headers.
-
-IGNORE_PREFIX          = 
-
-#---------------------------------------------------------------------------
-# configuration options related to the HTML output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_HTML tag is set to YES (the default) Doxygen will 
-# generate HTML output.
-
-GENERATE_HTML          = YES
-
-# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. 
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
-# put in front of it. If left blank `html' will be used as the default path.
-
-HTML_OUTPUT            = html
-
-# The HTML_FILE_EXTENSION tag can be used to specify the file extension for 
-# each generated HTML page (for example: .htm,.php,.asp). If it is left blank 
-# doxygen will generate files with .html extension.
-
-HTML_FILE_EXTENSION    = .html
-
-# The HTML_HEADER tag can be used to specify a personal HTML header for 
-# each generated HTML page. If it is left blank doxygen will generate a 
-# standard header. Note that when using a custom header you are responsible 
-# for the proper inclusion of any scripts and style sheets that doxygen 
-# needs, which is dependent on the configuration options used. 
-# It is adviced to generate a default header using "doxygen -w html 
-# header.html footer.html stylesheet.css YourConfigFile" and then modify 
-# that header. Note that the header is subject to change so you typically 
-# have to redo this when upgrading to a newer version of doxygen or when
-# changing the value of configuration settings such as GENERATE_TREEVIEW!
-
-HTML_HEADER            = 
-
-# The HTML_FOOTER tag can be used to specify a personal HTML footer for 
-# each generated HTML page. If it is left blank doxygen will generate a 
-# standard footer.
-
-HTML_FOOTER            = 
-
-# The HTML_STYLESHEET tag can be used to specify a user-defined cascading 
-# style sheet that is used by each HTML page. It can be used to 
-# fine-tune the look of the HTML output. If the tag is left blank doxygen 
-# will generate a default style sheet. Note that doxygen will try to copy 
-# the style sheet file to the HTML output directory, so don't put your own 
-# stylesheet in the HTML output directory as well, or it will be erased!
-
-HTML_STYLESHEET        = 
-
-# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or 
-# other source files which should be copied to the HTML output directory. Note 
-# that these files will be copied to the base HTML output directory. Use the 
-# $relpath$ marker in the HTML_HEADER and/or HTML_FOOTER files to load these 
-# files. In the HTML_STYLESHEET file, use the file name only. Also note that 
-# the files will be copied as-is; there are no commands or markers available.
-
-HTML_EXTRA_FILES       = 
-
-# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. 
-# Doxygen will adjust the colors in the stylesheet and background images 
-# according to this color. Hue is specified as an angle on a colorwheel, 
-# see http://en.wikipedia.org/wiki/Hue for more information. 
-# For instance the value 0 represents red, 60 is yellow, 120 is green, 
-# 180 is cyan, 240 is blue, 300 purple, and 360 is red again. 
-# The allowed range is 0 to 359.
-
-HTML_COLORSTYLE_HUE    = 220
-
-# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of 
-# the colors in the HTML output. For a value of 0 the output will use 
-# grayscales only. A value of 255 will produce the most vivid colors.
-
-HTML_COLORSTYLE_SAT    = 100
-
-# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to 
-# the luminance component of the colors in the HTML output. Values below 
-# 100 gradually make the output lighter, whereas values above 100 make 
-# the output darker. The value divided by 100 is the actual gamma applied, 
-# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2, 
-# and 100 does not change the gamma.
-
-HTML_COLORSTYLE_GAMMA  = 80
-
-# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML 
-# page will contain the date and time when the page was generated. Setting 
-# this to NO can help when comparing the output of multiple runs.
-
-HTML_TIMESTAMP         = YES
-
-# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, 
-# files or namespaces will be aligned in HTML using tables. If set to 
-# NO a bullet list will be used.
-
-HTML_ALIGN_MEMBERS     = YES
-
-# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML 
-# documentation will contain sections that can be hidden and shown after the 
-# page has loaded. For this to work a browser that supports 
-# JavaScript and DHTML is required (for instance Mozilla 1.0+, Firefox 
-# Netscape 6.0+, Internet explorer 5.0+, Konqueror, or Safari).
-
-HTML_DYNAMIC_SECTIONS  = NO
-
-# If the GENERATE_DOCSET tag is set to YES, additional index files 
-# will be generated that can be used as input for Apple's Xcode 3 
-# integrated development environment, introduced with OSX 10.5 (Leopard). 
-# To create a documentation set, doxygen will generate a Makefile in the 
-# HTML output directory. Running make will produce the docset in that 
-# directory and running "make install" will install the docset in 
-# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find 
-# it at startup. 
-# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html 
-# for more information.
-
-GENERATE_DOCSET        = NO
-
-# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the 
-# feed. A documentation feed provides an umbrella under which multiple 
-# documentation sets from a single provider (such as a company or product suite) 
-# can be grouped.
-
-DOCSET_FEEDNAME        = "Doxygen generated docs"
-
-# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that 
-# should uniquely identify the documentation set bundle. This should be a 
-# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen 
-# will append .docset to the name.
-
-DOCSET_BUNDLE_ID       = org.doxygen.Project
-
-# When GENERATE_PUBLISHER_ID tag specifies a string that should uniquely identify 
-# the documentation publisher. This should be a reverse domain-name style 
-# string, e.g. com.mycompany.MyDocSet.documentation.
-
-DOCSET_PUBLISHER_ID    = org.doxygen.Publisher
-
-# The GENERATE_PUBLISHER_NAME tag identifies the documentation publisher.
-
-DOCSET_PUBLISHER_NAME  = Publisher
-
-# If the GENERATE_HTMLHELP tag is set to YES, additional index files 
-# will be generated that can be used as input for tools like the 
-# Microsoft HTML help workshop to generate a compiled HTML help file (.chm) 
-# of the generated HTML documentation.
-
-GENERATE_HTMLHELP      = NO
-
-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can 
-# be used to specify the file name of the resulting .chm file. You 
-# can add a path in front of the file if the result should not be 
-# written to the html output directory.
-
-CHM_FILE               = 
-
-# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can 
-# be used to specify the location (absolute path including file name) of 
-# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run 
-# the HTML help compiler on the generated index.hhp.
-
-HHC_LOCATION           = 
-
-# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag 
-# controls if a separate .chi index file is generated (YES) or that 
-# it should be included in the master .chm file (NO).
-
-GENERATE_CHI           = NO
-
-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING 
-# is used to encode HtmlHelp index (hhk), content (hhc) and project file 
-# content.
-
-CHM_INDEX_ENCODING     = 
-
-# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag 
-# controls whether a binary table of contents is generated (YES) or a 
-# normal table of contents (NO) in the .chm file.
-
-BINARY_TOC             = NO
-
-# The TOC_EXPAND flag can be set to YES to add extra items for group members 
-# to the contents of the HTML help documentation and to the tree view.
-
-TOC_EXPAND             = NO
-
-# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and 
-# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated 
-# that can be used as input for Qt's qhelpgenerator to generate a 
-# Qt Compressed Help (.qch) of the generated HTML documentation.
-
-GENERATE_QHP           = NO
-
-# If the QHG_LOCATION tag is specified, the QCH_FILE tag can 
-# be used to specify the file name of the resulting .qch file. 
-# The path specified is relative to the HTML output folder.
-
-QCH_FILE               = 
-
-# The QHP_NAMESPACE tag specifies the namespace to use when generating 
-# Qt Help Project output. For more information please see 
-# http://doc.trolltech.com/qthelpproject.html#namespace
-
-QHP_NAMESPACE          = org.doxygen.Project
-
-# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating 
-# Qt Help Project output. For more information please see 
-# http://doc.trolltech.com/qthelpproject.html#virtual-folders
-
-QHP_VIRTUAL_FOLDER     = doc
-
-# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to 
-# add. For more information please see 
-# http://doc.trolltech.com/qthelpproject.html#custom-filters
-
-QHP_CUST_FILTER_NAME   = 
-
-# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the 
-# custom filter to add. For more information please see 
-# <a href="http://doc.trolltech.com/qthelpproject.html#custom-filters"> 
-# Qt Help Project / Custom Filters</a>.
-
-QHP_CUST_FILTER_ATTRS  = 
-
-# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this 
-# project's 
-# filter section matches. 
-# <a href="http://doc.trolltech.com/qthelpproject.html#filter-attributes"> 
-# Qt Help Project / Filter Attributes</a>.
-
-QHP_SECT_FILTER_ATTRS  = 
-
-# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can 
-# be used to specify the location of Qt's qhelpgenerator. 
-# If non-empty doxygen will try to run qhelpgenerator on the generated 
-# .qhp file.
-
-QHG_LOCATION           = 
-
-# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files  
-# will be generated, which together with the HTML files, form an Eclipse help 
-# plugin. To install this plugin and make it available under the help contents 
-# menu in Eclipse, the contents of the directory containing the HTML and XML 
-# files needs to be copied into the plugins directory of eclipse. The name of 
-# the directory within the plugins directory should be the same as 
-# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before 
-# the help appears.
-
-GENERATE_ECLIPSEHELP   = NO
-
-# A unique identifier for the eclipse help plugin. When installing the plugin 
-# the directory name containing the HTML and XML files should also have 
-# this name.
-
-ECLIPSE_DOC_ID         = org.doxygen.Project
-
-# The DISABLE_INDEX tag can be used to turn on/off the condensed index at 
-# top of each HTML page. The value NO (the default) enables the index and 
-# the value YES disables it.
-
-DISABLE_INDEX          = NO
-
-# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values 
-# (range [0,1..20]) that doxygen will group on one line in the generated HTML 
-# documentation. Note that a value of 0 will completely suppress the enum 
-# values from appearing in the overview section.
-
-ENUM_VALUES_PER_LINE   = 20
-
-# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index 
-# structure should be generated to display hierarchical information. 
-# If the tag value is set to YES, a side panel will be generated 
-# containing a tree-like index structure (just like the one that 
-# is generated for HTML Help). For this to work a browser that supports 
-# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser). 
-# Windows users are probably better off using the HTML help feature.
-
-GENERATE_TREEVIEW      = YES
-
-# By enabling USE_INLINE_TREES, doxygen will generate the Groups, Directories, 
-# and Class Hierarchy pages using a tree view instead of an ordered list.
-
-USE_INLINE_TREES       = YES
-
-# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be 
-# used to set the initial width (in pixels) of the frame in which the tree 
-# is shown.
-
-TREEVIEW_WIDTH         = 231
-
-# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open 
-# links to external symbols imported via tag files in a separate window.
-
-EXT_LINKS_IN_WINDOW    = NO
-
-# Use this tag to change the font size of Latex formulas included 
-# as images in the HTML documentation. The default is 10. Note that 
-# when you change the font size after a successful doxygen run you need 
-# to manually remove any form_*.png images from the HTML output directory 
-# to force them to be regenerated.
-
-FORMULA_FONTSIZE       = 10
-
-# Use the FORMULA_TRANPARENT tag to determine whether or not the images 
-# generated for formulas are transparent PNGs. Transparent PNGs are 
-# not supported properly for IE 6.0, but are supported on all modern browsers. 
-# Note that when changing this option you need to delete any form_*.png files 
-# in the HTML output before the changes have effect.
-
-FORMULA_TRANSPARENT    = YES
-
-# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax 
-# (see http://www.mathjax.org) which uses client side Javascript for the 
-# rendering instead of using prerendered bitmaps. Use this if you do not 
-# have LaTeX installed or if you want to formulas look prettier in the HTML 
-# output. When enabled you also need to install MathJax separately and 
-# configure the path to it using the MATHJAX_RELPATH option.
-
-USE_MATHJAX            = NO
-
-# When MathJax is enabled you need to specify the location relative to the 
-# HTML output directory using the MATHJAX_RELPATH option. The destination 
-# directory should contain the MathJax.js script. For instance, if the mathjax 
-# directory is located at the same level as the HTML output directory, then 
-# MATHJAX_RELPATH should be ../mathjax. The default value points to the 
-# mathjax.org site, so you can quickly see the result without installing 
-# MathJax, but it is strongly recommended to install a local copy of MathJax 
-# before deployment.
-
-MATHJAX_RELPATH        = http://www.mathjax.org/mathjax
-
-# When the SEARCHENGINE tag is enabled doxygen will generate a search box 
-# for the HTML output. The underlying search engine uses javascript 
-# and DHTML and should work on any modern browser. Note that when using 
-# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets 
-# (GENERATE_DOCSET) there is already a search function so this one should 
-# typically be disabled. For large projects the javascript based search engine 
-# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.
-
-SEARCHENGINE           = YES
-
-# When the SERVER_BASED_SEARCH tag is enabled the search engine will be 
-# implemented using a PHP enabled web server instead of at the web client 
-# using Javascript. Doxygen will generate the search PHP script and index 
-# file to put on the web server. The advantage of the server 
-# based approach is that it scales better to large projects and allows 
-# full text search. The disadvantages are that it is more difficult to setup 
-# and does not have live searching capabilities.
-
-SERVER_BASED_SEARCH    = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the LaTeX output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will 
-# generate Latex output.
-
-GENERATE_LATEX         = NO
-
-# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. 
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
-# put in front of it. If left blank `latex' will be used as the default path.
-
-LATEX_OUTPUT           = latex
-
-# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be 
-# invoked. If left blank `latex' will be used as the default command name. 
-# Note that when enabling USE_PDFLATEX this option is only used for 
-# generating bitmaps for formulas in the HTML output, but not in the 
-# Makefile that is written to the output directory.
-
-LATEX_CMD_NAME         = latex
-
-# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to 
-# generate index for LaTeX. If left blank `makeindex' will be used as the 
-# default command name.
-
-MAKEINDEX_CMD_NAME     = makeindex
-
-# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact 
-# LaTeX documents. This may be useful for small projects and may help to 
-# save some trees in general.
-
-COMPACT_LATEX          = NO
-
-# The PAPER_TYPE tag can be used to set the paper type that is used 
-# by the printer. Possible values are: a4, letter, legal and 
-# executive. If left blank a4wide will be used.
-
-PAPER_TYPE             = a4
-
-# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX 
-# packages that should be included in the LaTeX output.
-
-EXTRA_PACKAGES         = 
-
-# The LATEX_HEADER tag can be used to specify a personal LaTeX header for 
-# the generated latex document. The header should contain everything until 
-# the first chapter. If it is left blank doxygen will generate a 
-# standard header. Notice: only use this tag if you know what you are doing!
-
-LATEX_HEADER           = 
-
-# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for 
-# the generated latex document. The footer should contain everything after 
-# the last chapter. If it is left blank doxygen will generate a 
-# standard footer. Notice: only use this tag if you know what you are doing!
-
-LATEX_FOOTER           = 
-
-# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated 
-# is prepared for conversion to pdf (using ps2pdf). The pdf file will 
-# contain links (just like the HTML output) instead of page references 
-# This makes the output suitable for online browsing using a pdf viewer.
-
-PDF_HYPERLINKS         = YES
-
-# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of 
-# plain latex in the generated Makefile. Set this option to YES to get a 
-# higher quality PDF documentation.
-
-USE_PDFLATEX           = YES
-
-# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode. 
-# command to the generated LaTeX files. This will instruct LaTeX to keep 
-# running if errors occur, instead of asking the user for help. 
-# This option is also used when generating formulas in HTML.
-
-LATEX_BATCHMODE        = NO
-
-# If LATEX_HIDE_INDICES is set to YES then doxygen will not 
-# include the index chapters (such as File Index, Compound Index, etc.) 
-# in the output.
-
-LATEX_HIDE_INDICES     = NO
-
-# If LATEX_SOURCE_CODE is set to YES then doxygen will include 
-# source code with syntax highlighting in the LaTeX output. 
-# Note that which sources are shown also depends on other settings 
-# such as SOURCE_BROWSER.
-
-LATEX_SOURCE_CODE      = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the RTF output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output 
-# The RTF output is optimized for Word 97 and may not look very pretty with 
-# other RTF readers or editors.
-
-GENERATE_RTF           = NO
-
-# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. 
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
-# put in front of it. If left blank `rtf' will be used as the default path.
-
-RTF_OUTPUT             = rtf
-
-# If the COMPACT_RTF tag is set to YES Doxygen generates more compact 
-# RTF documents. This may be useful for small projects and may help to 
-# save some trees in general.
-
-COMPACT_RTF            = NO
-
-# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated 
-# will contain hyperlink fields. The RTF file will 
-# contain links (just like the HTML output) instead of page references. 
-# This makes the output suitable for online browsing using WORD or other 
-# programs which support those fields. 
-# Note: wordpad (write) and others do not support links.
-
-RTF_HYPERLINKS         = NO
-
-# Load stylesheet definitions from file. Syntax is similar to doxygen's 
-# config file, i.e. a series of assignments. You only have to provide 
-# replacements, missing definitions are set to their default value.
-
-RTF_STYLESHEET_FILE    = 
-
-# Set optional variables used in the generation of an rtf document. 
-# Syntax is similar to doxygen's config file.
-
-RTF_EXTENSIONS_FILE    = 
-
-#---------------------------------------------------------------------------
-# configuration options related to the man page output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_MAN tag is set to YES (the default) Doxygen will 
-# generate man pages
-
-GENERATE_MAN           = NO
-
-# The MAN_OUTPUT tag is used to specify where the man pages will be put. 
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
-# put in front of it. If left blank `man' will be used as the default path.
-
-MAN_OUTPUT             = man
-
-# The MAN_EXTENSION tag determines the extension that is added to 
-# the generated man pages (default is the subroutine's section .3)
-
-MAN_EXTENSION          = .3
-
-# If the MAN_LINKS tag is set to YES and Doxygen generates man output, 
-# then it will generate one additional man file for each entity 
-# documented in the real man page(s). These additional files 
-# only source the real man page, but without them the man command 
-# would be unable to find the correct page. The default is NO.
-
-MAN_LINKS              = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the XML output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_XML tag is set to YES Doxygen will 
-# generate an XML file that captures the structure of 
-# the code including all documentation.
-
-GENERATE_XML           = NO
-
-# The XML_OUTPUT tag is used to specify where the XML pages will be put. 
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
-# put in front of it. If left blank `xml' will be used as the default path.
-
-XML_OUTPUT             = xml
-
-# The XML_SCHEMA tag can be used to specify an XML schema, 
-# which can be used by a validating XML parser to check the 
-# syntax of the XML files.
-
-XML_SCHEMA             = 
-
-# The XML_DTD tag can be used to specify an XML DTD, 
-# which can be used by a validating XML parser to check the 
-# syntax of the XML files.
-
-XML_DTD                = 
-
-# If the XML_PROGRAMLISTING tag is set to YES Doxygen will 
-# dump the program listings (including syntax highlighting 
-# and cross-referencing information) to the XML output. Note that 
-# enabling this will significantly increase the size of the XML output.
-
-XML_PROGRAMLISTING     = YES
-
-#---------------------------------------------------------------------------
-# configuration options for the AutoGen Definitions output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will 
-# generate an AutoGen Definitions (see autogen.sf.net) file 
-# that captures the structure of the code including all 
-# documentation. Note that this feature is still experimental 
-# and incomplete at the moment.
-
-GENERATE_AUTOGEN_DEF   = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the Perl module output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_PERLMOD tag is set to YES Doxygen will 
-# generate a Perl module file that captures the structure of 
-# the code including all documentation. Note that this 
-# feature is still experimental and incomplete at the 
-# moment.
-
-GENERATE_PERLMOD       = NO
-
-# If the PERLMOD_LATEX tag is set to YES Doxygen will generate 
-# the necessary Makefile rules, Perl scripts and LaTeX code to be able 
-# to generate PDF and DVI output from the Perl module output.
-
-PERLMOD_LATEX          = NO
-
-# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be 
-# nicely formatted so it can be parsed by a human reader.  This is useful 
-# if you want to understand what is going on.  On the other hand, if this 
-# tag is set to NO the size of the Perl module output will be much smaller 
-# and Perl will parse it just the same.
-
-PERLMOD_PRETTY         = YES
-
-# The names of the make variables in the generated doxyrules.make file 
-# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. 
-# This is useful so different doxyrules.make files included by the same 
-# Makefile don't overwrite each other's variables.
-
-PERLMOD_MAKEVAR_PREFIX = 
-
-#---------------------------------------------------------------------------
-# Configuration options related to the preprocessor
-#---------------------------------------------------------------------------
-
-# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will 
-# evaluate all C-preprocessor directives found in the sources and include 
-# files.
-
-ENABLE_PREPROCESSING   = YES
-
-# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro 
-# names in the source code. If set to NO (the default) only conditional 
-# compilation will be performed. Macro expansion can be done in a controlled 
-# way by setting EXPAND_ONLY_PREDEF to YES.
-
-MACRO_EXPANSION        = NO
-
-# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES 
-# then the macro expansion is limited to the macros specified with the 
-# PREDEFINED and EXPAND_AS_DEFINED tags.
-
-EXPAND_ONLY_PREDEF     = NO
-
-# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files 
-# pointed to by INCLUDE_PATH will be searched when a #include is found.
-
-SEARCH_INCLUDES        = YES
-
-# The INCLUDE_PATH tag can be used to specify one or more directories that 
-# contain include files that are not input files but should be processed by 
-# the preprocessor.
-
-INCLUDE_PATH           = 
-
-# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard 
-# patterns (like *.h and *.hpp) to filter out the header-files in the 
-# directories. If left blank, the patterns specified with FILE_PATTERNS will 
-# be used.
-
-INCLUDE_FILE_PATTERNS  = 
-
-# The PREDEFINED tag can be used to specify one or more macro names that 
-# are defined before the preprocessor is started (similar to the -D option of 
-# gcc). The argument of the tag is a list of macros of the form: name 
-# or name=definition (no spaces). If the definition and the = are 
-# omitted =1 is assumed. To prevent a macro definition from being 
-# undefined via #undef or recursively expanded use the := operator 
-# instead of the = operator.
-
-PREDEFINED             = 
-
-# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then 
-# this tag can be used to specify a list of macro names that should be expanded. 
-# The macro definition that is found in the sources will be used. 
-# Use the PREDEFINED tag if you want to use a different macro definition that 
-# overrules the definition found in the source code.
-
-EXPAND_AS_DEFINED      = 
-
-# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then 
-# doxygen's preprocessor will remove all references to function-like macros 
-# that are alone on a line, have an all uppercase name, and do not end with a 
-# semicolon, because these will confuse the parser if not removed.
-
-SKIP_FUNCTION_MACROS   = YES
-
-#---------------------------------------------------------------------------
-# Configuration::additions related to external references
-#---------------------------------------------------------------------------
-
-# The TAGFILES option can be used to specify one or more tagfiles. 
-# Optionally an initial location of the external documentation 
-# can be added for each tagfile. The format of a tag file without 
-# this location is as follows: 
-#   TAGFILES = file1 file2 ... 
-# Adding location for the tag files is done as follows: 
-#   TAGFILES = file1=loc1 "file2 = loc2" ... 
-# where "loc1" and "loc2" can be relative or absolute paths or 
-# URLs. If a location is present for each tag, the installdox tool 
-# does not have to be run to correct the links. 
-# Note that each tag file must have a unique name 
-# (where the name does NOT include the path) 
-# If a tag file is not located in the directory in which doxygen 
-# is run, you must also specify the path to the tagfile here.
-
-# Specify the relative location of the core docs from the html/ folder,
-# which is ../../Polycode/html
-TAGFILES               = tags/Polycode_core.tag=../../Polycode/html/
-
-# When a file name is specified after GENERATE_TAGFILE, doxygen will create 
-# a tag file that is based on the input files it reads.
-
-GENERATE_TAGFILE       = 
-
-# If the ALLEXTERNALS tag is set to YES all external classes will be listed 
-# in the class index. If set to NO only the inherited external classes 
-# will be listed.
-
-ALLEXTERNALS           = NO
-
-# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed 
-# in the modules index. If set to NO, only the current project's groups will 
-# be listed.
-
-EXTERNAL_GROUPS        = YES
-
-# The PERL_PATH should be the absolute path and name of the perl script 
-# interpreter (i.e. the result of `which perl').
-
-PERL_PATH              = /usr/bin/perl
-
-#---------------------------------------------------------------------------
-# Configuration options related to the dot tool
-#---------------------------------------------------------------------------
-
-# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will 
-# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base 
-# or super classes. Setting the tag to NO turns the diagrams off. Note that 
-# this option also works with HAVE_DOT disabled, but it is recommended to 
-# install and use dot, since it yields more powerful graphs.
-
-CLASS_DIAGRAMS         = NO
-
-# You can define message sequence charts within doxygen comments using the \msc 
-# command. Doxygen will then run the mscgen tool (see 
-# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the 
-# documentation. The MSCGEN_PATH tag allows you to specify the directory where 
-# the mscgen tool resides. If left empty the tool is assumed to be found in the 
-# default search path.
-
-MSCGEN_PATH            = 
-
-# If set to YES, the inheritance and collaboration graphs will hide 
-# inheritance and usage relations if the target is undocumented 
-# or is not a class.
-
-HIDE_UNDOC_RELATIONS   = YES
-
-# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is 
-# available from the path. This tool is part of Graphviz, a graph visualization 
-# toolkit from AT&T and Lucent Bell Labs. The other options in this section 
-# have no effect if this option is set to NO (the default)
-
-HAVE_DOT               = NO
-
-# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is 
-# allowed to run in parallel. When set to 0 (the default) doxygen will 
-# base this on the number of processors available in the system. You can set it 
-# explicitly to a value larger than 0 to get control over the balance 
-# between CPU load and processing speed.
-
-DOT_NUM_THREADS        = 0
-
-# By default doxygen will write a font called Helvetica to the output 
-# directory and reference it in all dot files that doxygen generates. 
-# When you want a differently looking font you can specify the font name 
-# using DOT_FONTNAME. You need to make sure dot is able to find the font, 
-# which can be done by putting it in a standard location or by setting the 
-# DOTFONTPATH environment variable or by setting DOT_FONTPATH to the directory 
-# containing the font.
-
-DOT_FONTNAME           = Helvetica
-
-# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs. 
-# The default size is 10pt.
-
-DOT_FONTSIZE           = 10
-
-# By default doxygen will tell dot to use the output directory to look for the 
-# FreeSans.ttf font (which doxygen will put there itself). If you specify a 
-# different font using DOT_FONTNAME you can set the path where dot 
-# can find it using this tag.
-
-DOT_FONTPATH           = 
-
-# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen 
-# will generate a graph for each documented class showing the direct and 
-# indirect inheritance relations. Setting this tag to YES will force the 
-# the CLASS_DIAGRAMS tag to NO.
-
-CLASS_GRAPH            = YES
-
-# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen 
-# will generate a graph for each documented class showing the direct and 
-# indirect implementation dependencies (inheritance, containment, and 
-# class references variables) of the class with other documented classes.
-
-COLLABORATION_GRAPH    = YES
-
-# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen 
-# will generate a graph for groups, showing the direct groups dependencies
-
-GROUP_GRAPHS           = YES
-
-# If the UML_LOOK tag is set to YES doxygen will generate inheritance and 
-# collaboration diagrams in a style similar to the OMG's Unified Modeling 
-# Language.
-
-UML_LOOK               = NO
-
-# If set to YES, the inheritance and collaboration graphs will show the 
-# relations between templates and their instances.
-
-TEMPLATE_RELATIONS     = NO
-
-# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT 
-# tags are set to YES then doxygen will generate a graph for each documented 
-# file showing the direct and indirect include dependencies of the file with 
-# other documented files.
-
-INCLUDE_GRAPH          = YES
-
-# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and 
-# HAVE_DOT tags are set to YES then doxygen will generate a graph for each 
-# documented header file showing the documented files that directly or 
-# indirectly include this file.
-
-INCLUDED_BY_GRAPH      = YES
-
-# If the CALL_GRAPH and HAVE_DOT options are set to YES then 
-# doxygen will generate a call dependency graph for every global function 
-# or class method. Note that enabling this option will significantly increase 
-# the time of a run. So in most cases it will be better to enable call graphs 
-# for selected functions only using the \callgraph command.
-
-CALL_GRAPH             = NO
-
-# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then 
-# doxygen will generate a caller dependency graph for every global function 
-# or class method. Note that enabling this option will significantly increase 
-# the time of a run. So in most cases it will be better to enable caller 
-# graphs for selected functions only using the \callergraph command.
-
-CALLER_GRAPH           = NO
-
-# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen 
-# will generate a graphical hierarchy of all classes instead of a textual one.
-
-GRAPHICAL_HIERARCHY    = YES
-
-# If the DIRECTORY_GRAPH, SHOW_DIRECTORIES and HAVE_DOT tags are set to YES 
-# then doxygen will show the dependencies a directory has on other directories 
-# in a graphical way. The dependency relations are determined by the #include 
-# relations between the files in the directories.
-
-DIRECTORY_GRAPH        = YES
-
-# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images 
-# generated by dot. Possible values are svg, png, jpg, or gif. 
-# If left blank png will be used.
-
-DOT_IMAGE_FORMAT       = png
-
-# The tag DOT_PATH can be used to specify the path where the dot tool can be 
-# found. If left blank, it is assumed the dot tool can be found in the path.
-
-DOT_PATH               = 
-
-# The DOTFILE_DIRS tag can be used to specify one or more directories that 
-# contain dot files that are included in the documentation (see the 
-# \dotfile command).
-
-DOTFILE_DIRS           = 
-
-# The MSCFILE_DIRS tag can be used to specify one or more directories that 
-# contain msc files that are included in the documentation (see the 
-# \mscfile command).
-
-MSCFILE_DIRS           = 
-
-# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of 
-# nodes that will be shown in the graph. If the number of nodes in a graph 
-# becomes larger than this value, doxygen will truncate the graph, which is 
-# visualized by representing a node as a red box. Note that doxygen if the 
-# number of direct children of the root node in a graph is already larger than 
-# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note 
-# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
-
-DOT_GRAPH_MAX_NODES    = 50
-
-# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the 
-# graphs generated by dot. A depth value of 3 means that only nodes reachable 
-# from the root by following a path via at most 3 edges will be shown. Nodes 
-# that lay further from the root node will be omitted. Note that setting this 
-# option to 1 or 2 may greatly reduce the computation time needed for large 
-# code bases. Also note that the size of a graph can be further restricted by 
-# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
-
-MAX_DOT_GRAPH_DEPTH    = 0
-
-# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent 
-# background. This is disabled by default, because dot on Windows does not 
-# seem to support this out of the box. Warning: Depending on the platform used, 
-# enabling this option may lead to badly anti-aliased labels on the edges of 
-# a graph (i.e. they become hard to read).
-
-DOT_TRANSPARENT        = NO
-
-# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output 
-# files in one run (i.e. multiple -o and -T options on the command line). This 
-# makes dot run faster, but since only newer versions of dot (>1.8.10) 
-# support this, this feature is disabled by default.
-
-DOT_MULTI_TARGETS      = NO
-
-# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will 
-# generate a legend page explaining the meaning of the various boxes and 
-# arrows in the dot generated graphs.
-
-GENERATE_LEGEND        = YES
-
-# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will 
-# remove the intermediate dot files that are used to generate 
-# the various graphs.
-
-DOT_CLEANUP            = YES
diff --git a/Documentation/Doxygen/index.dox b/Documentation/Doxygen/index.dox
deleted file mode 100644
--- a/Documentation/Doxygen/index.dox
+++ /dev/null
@@ -1,12 +0,0 @@
-// This file defines the index page for the doxygen documentation generated.
-
-/**
-\mainpage Polycode
-
-\section Modules
-<a href="../../Polycode/html/index.html">Core</a> <br>
-<a href="../../PolycodeUI/html/index.html">UI Module</a> <br> 
-<a href="../../Physics2D/html/index.html">Physics2D</a> <br>
-<a href="../../Physics3D/html/index.html">Physics3D</a> <br>
-
-*/
diff --git a/Documentation/Doxygen/tags/README.txt b/Documentation/Doxygen/tags/README.txt
deleted file mode 100644
--- a/Documentation/Doxygen/tags/README.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-Hello. How is your day going?
-
-This is just a dummy file so this folder gets auto-generated.
\ No newline at end of file
diff --git a/Documentation/Lua/html/css/docs.css b/Documentation/Lua/html/css/docs.css
--- a/Documentation/Lua/html/css/docs.css
+++ b/Documentation/Lua/html/css/docs.css
@@ -1,43 +1,34 @@
+
 body, html {
-	background-color: #e4e3e0;
+	background-color: #222222;
+	color: white;
+	font-family: Helvetica, Arial, sans;
 	margin: 0px;
 	padding: 0px;
-	font-family: 'Roboto', sans-serif;
-	font-weight: normal;
-	font-size: 13px;
-	font-weight: 300;
-	color: #3b3531;
-}
-
-#content {
-	margin: 0px auto 0px auto;
-	width: 900px;
-	background-color: #e4e3e0;
-	font-size: 16px;
+	font-size: 14px;
 }
 
 a {
-	color: #d0592a;
-	text-decoration: none;
+	color: white;
 }
 
 #global_header {
+	width: 100%;
 	height: 64px;
-	margin: 20px auto 0px auto;
-	width: 900px;
+	background-color: black;
+	margin: 0px 0px 0px 0px;
 }
 
 #module_links, #class_list {
 	float: left;
-	width: 200px;
-	overflow: hidden;
+	width: 160px;
 	padding: 30px;
+	background: #141414;
 	margin: 0px 0px 0px 0px;
-	text-align: right;
 }
 
 #class_list a {
-	color: #d0592a;
+	color: #757575;
 	text-decoration: none;
 }
 
@@ -47,32 +38,31 @@
 }
 
 .class_entry {
-	font-size: 16px;
+	font-size: 14px;
 	margin: 3px 0px 0px 0px;
 }
 
 .class_main {
-	margin: 0px 0px 0px 260px;
+	margin: 0px 0px 0px 220px;
 	padding: 20px;
 }
 
 .class_name {
 	font-size: 32px;
 	margin: 0px 0px 30px 0px;
-	color: #d0592a;
+	color: #b8b8b8;
 }
 
 .class_extends {
 	font-size: 24px;
 	margin: 0px 0px 30px 0px;
-	color: #3b3531;
+	color: #4a4a4a;
 }
 
 .class_extends_class a {
 	font-size: 24px;
 	margin: 0px 0px 30px 0px;
-	color: #d0592a;
-	text-decoration: underline;
+	color: #925381;
 }
 
 .class_desc {
@@ -83,6 +73,7 @@
 
 .class_properties_list, .class_methods_list {
 	padding: 10px;
+	background-color: #1a1a1a;
 }
 
 .class_property, .class_method {
@@ -97,11 +88,11 @@
 }
 
 .class_property_name {
-	color: #d0592a;
+	color: #70bd38;
 }
 
 .class_property_type {
-	color: #8c8c8c;
+	color: #925381;
 }
 
 .class_property_desc {
@@ -109,13 +100,13 @@
 }
 
 .class_method_name {
-	color: #d0592a;
-	font-size: 20px;
+	color: #4e87c8;
+	font-size: 16px;
 }
 
 .class_method_type {
-	color: #8c8c8c;
-	font-size: 16px;
+	color: #925381;
+	font-size: 12px;
 }
 
 .class_method_desc {
@@ -131,12 +122,12 @@
 }
 
 .class_method_param_name {
-	color: #d0592a;
+	color: #70bd38;
 }
 
 .class_method_param_type {
-	color: #8c8c8c;
-	font-size: 16px;
+	color: #925381;
+	font-size: 12px;
 }
 
 .class_method_param_desc {
@@ -150,11 +141,12 @@
 }
 
 .inline_param {
-	color: #3b3531;
+	color: #70bd38;
 }
 
 .inline_type {
-	color: #8c8c8c;
+	color: #925381;
+	font-size: 12px;
 }
 
 .static_value {
diff --git a/Documentation/Lua/html/images/docs_header.png b/Documentation/Lua/html/images/docs_header.png
index 332c0d4b89169f674b8c12008274148626a6c010..7c115128c36a9c89411a8ef49884fc17d0bc3b96
GIT binary patch
literal 7438
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
Wc(TW%UUv2852ZR(Te%tn5C0!-Dum(y

diff --git a/Documentation/Lua/scripts/CMakeLists.txt b/Documentation/Lua/scripts/CMakeLists.txt
--- a/Documentation/Lua/scripts/CMakeLists.txt
+++ b/Documentation/Lua/scripts/CMakeLists.txt
@@ -2,13 +2,9 @@
 
 FIND_PACKAGE(PythonInterp REQUIRED)
 
-FILE(GLOB XML_DEPENDENCIES ${CMAKE_CURRENT_SOURCE_DIR}/../xml/*.xml)
-
 ADD_CUSTOM_COMMAND(
 OUTPUT luaGenerateDocsCmd
 COMMAND ${PYTHON_EXECUTABLE} make_html.py
-COMMAND ${CMAKE_COMMAND} -E touch ${CMAKE_CURRENT_BINARY_DIR}/luaGenerateDocsCmd # Generate the given output file(empty file), to keep track of whether we need to rebuild.
-DEPENDS ${XML_DEPENDENCIES}
 WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
 )
 
diff --git a/Documentation/Lua/scripts/make_html.py b/Documentation/Lua/scripts/make_html.py
--- a/Documentation/Lua/scripts/make_html.py
+++ b/Documentation/Lua/scripts/make_html.py
@@ -1,67 +1,37 @@
 import os
-import sys
 from xml.dom.minidom import parse
 
-siteDocs = False
-
-if len(sys.argv) > 1:
-	if sys.argv[1] == "site":
-		siteDocs = True
-
 globalHeaderMain = ""
 
-if siteDocs == True:
-	header_f = open("site_header.html", 'r')
-	globalHeaderMain = header_f.read()
-	globalHeader = globalHeaderMain
-	footer_f = open("site_footer.html", 'r')
-	globalFooter = footer_f.read()
-	
-else:
-	globalHeaderMain += "<html>\n"
-	globalHeaderMain += "\t<head>\n"
-	globalHeaderMain += "\t\t<title>Polycode Documentation</title>\n"
-	globalHeaderMain += "\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/docs.css\" />\n"
-	globalHeaderMain += "\t\t<link href='http://fonts.googleapis.com/css?family=Roboto:400,300' rel='stylesheet' type='text/css'>\n"
-	globalHeaderMain += "\t\t<script type=\"text/javascript\" src=\"js/docs.js\"></script>"
-	globalHeaderMain += "\t</head>\n"
-	globalHeaderMain += "\t<body>\n"
-	globalHeaderMain += "\t\t<div id=\"global_header\"><a href=\"index.html\"><img border=\"0\" src=\"images/docs_header.png\"/></a></div>\n"
-	globalHeaderMain += "\t\t<div id=\"content\">\n"
+globalHeaderMain += "<html>\n"
+globalHeaderMain += "\t<head>\n"
+globalHeaderMain += "\t\t<title>Polycode Documentation</title>\n"
+globalHeaderMain += "\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/docs.css\" />\n"
+globalHeaderMain += "\t\t<script type=\"text/javascript\" src=\"js/docs.js\"></script>"
+globalHeaderMain += "\t</head>\n"
+globalHeaderMain += "\t<body>\n"
+globalHeaderMain += "\t\t<div id=\"global_header\"><a href=\"index.html\"><img border=\"0\" src=\"images/docs_header.png\"/></a></div>\n"
+globalHeaderMain += "\t\t<div id=\"content\">\n"
 
-	globalHeader = ""
-	globalFooter = ""
+globalHeader = ""
+globalFooter = ""
 
-	globalHeader += "<html>\n"
-	globalHeader += "\t<head>\n"
-	globalHeader += "\t\t<title>Polycode Documentation</title>\n"
-	globalHeader += "\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/docs.css\" />\n"
-	globalHeader += "\t\t<script type=\"text/javascript\" src=\"js/docs.js\"></script>"
-	globalHeader += "\t</head>\n"
-	globalHeader += "\t<body>\n"
-	globalHeader += "\t\t<div id=\"global_header\"><a href=\"../index.html\"><img border=\"0\" src=\"../images/docs_header.png\"/></a></div>\n"
-	globalHeader += "\t\t<div id=\"content\">\n"
+globalHeader += "<html>\n"
+globalHeader += "\t<head>\n"
+globalHeader += "\t\t<title>Polycode Documentation</title>\n"
+globalHeader += "\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/docs.css\" />\n"
+globalHeader += "\t\t<script type=\"text/javascript\" src=\"js/docs.js\"></script>"
+globalHeader += "\t</head>\n"
+globalHeader += "\t<body>\n"
+globalHeader += "\t\t<div id=\"global_header\"><a href=\"../index.html\"><img border=\"0\" src=\"../images/docs_header.png\"/></a></div>\n"
+globalHeader += "\t\t<div id=\"content\">\n"
 
 
-	globalFooter += "\t\t</div>\n"
-	globalFooter += "\t</body>\n"
-	globalFooter += "\t</html>\n"
+globalFooter += "\t\t</div>\n"
+globalFooter += "\t</body>\n"
+globalFooter += "\t</html>\n"
 
 def createMethods(className, item, static):
-
-	numStatic = 0
-	numRegular = 0
-	for subitem in item.getElementsByTagName('method'):
-		if subitem.hasAttribute("static") == True:
-			numStatic = numStatic + 1
-		else:
-			numRegular = numRegular + 1
-
-	if static == True and numStatic == 0:
-		return ""
-	if static == False and numRegular == 0:
-		return ""
-
 	html = ""
 	html += "\t\t\t\t\t<div class=\"class_methods\">\n"
 	if static == True:
@@ -138,39 +108,37 @@
 		descText = desc[0].childNodes[0].data
 	html += "\t\t\t\t\t<div class=\"class_desc\">%s</div>\n" % descText
 
-	if len(item.getElementsByTagName('static_member')) > 0:
-		html += "\t\t\t\t\t<div class=\"class_properties\">\n"
-		html += "\t\t\t\t\t\t<div class=\"class_properties_title\">Static Properties</div>\n"
-		html += "\t\t\t\t\t\t<div class=\"class_properties_list\">\n"
-		for subitem in item.getElementsByTagName('static_member'):
-			html += "\t\t\t\t\t\t\t<div class=\"class_property\">\n"
-			html += "\t\t\t\t\t\t\t\t<div class=\"class_property_name\">%s.%s <span class=\"static_value\">= %s</span></div>\n" % (item.attributes["name"].value, subitem.attributes["name"].value, subitem.attributes["value"].value)
-			html += "\t\t\t\t\t\t\t\t<div class=\"class_property_type\">%s</div>\n" % (subitem.attributes["type"].value)
-			desc = subitem.getElementsByTagName('desc')
-			descText = "No description."
-			if len(desc) > 0:
-				descText = desc[0].childNodes[0].data
-			html += "\t\t\t\t\t\t\t\t<div class=\"class_property_desc\">%s</div>\n" % (descText)
-			html += "\t\t\t\t\t\t\t</div>\n"
-		html += "\t\t\t\t\t\t</div>\n"
-		html += "\t\t\t\t\t</div>\n"
+	html += "\t\t\t\t\t<div class=\"class_properties\">\n"
+	html += "\t\t\t\t\t\t<div class=\"class_properties_title\">Static Properties</div>\n"
+	html += "\t\t\t\t\t\t<div class=\"class_properties_list\">\n"
+	for subitem in item.getElementsByTagName('static_member'):
+		html += "\t\t\t\t\t\t\t<div class=\"class_property\">\n"
+		html += "\t\t\t\t\t\t\t\t<div class=\"class_property_name\">%s.%s <span class=\"static_value\">= %s</span></div>\n" % (item.attributes["name"].value, subitem.attributes["name"].value, subitem.attributes["value"].value)
+		html += "\t\t\t\t\t\t\t\t<div class=\"class_property_type\">%s</div>\n" % (subitem.attributes["type"].value)
+		desc = subitem.getElementsByTagName('desc')
+		descText = "No description."
+		if len(desc) > 0:
+			descText = desc[0].childNodes[0].data
+		html += "\t\t\t\t\t\t\t\t<div class=\"class_property_desc\">%s</div>\n" % (descText)
+		html += "\t\t\t\t\t\t\t</div>\n"
+	html += "\t\t\t\t\t\t</div>\n"
+	html += "\t\t\t\t\t</div>\n"
 
-	if len(item.getElementsByTagName('member')) > 0:
-		html += "\t\t\t\t\t<div class=\"class_properties\">\n"
-		html += "\t\t\t\t\t\t<div class=\"class_properties_title\">Properties</div>\n"
-		html += "\t\t\t\t\t\t<div class=\"class_properties_list\">\n"
-		for subitem in item.getElementsByTagName('member'):
-			html += "\t\t\t\t\t\t\t<div class=\"class_property\">\n"
-			html += "\t\t\t\t\t\t\t\t<div class=\"class_property_name\">%s</div>\n" % (subitem.attributes["name"].value)
-			html += "\t\t\t\t\t\t\t\t<div class=\"class_property_type\">%s</div>\n" % (subitem.attributes["type"].value)
-			desc = subitem.getElementsByTagName('desc')
-			descText = "No description."
-			if len(desc) > 0:
-				descText = desc[0].childNodes[0].data
-			html += "\t\t\t\t\t\t\t\t<div class=\"class_property_desc\">%s</div>\n" % (descText)
-			html += "\t\t\t\t\t\t\t</div>\n"
-		html += "\t\t\t\t\t\t</div>\n"
-		html += "\t\t\t\t\t</div>\n"
+	html += "\t\t\t\t\t<div class=\"class_properties\">\n"
+	html += "\t\t\t\t\t\t<div class=\"class_properties_title\">Properties</div>\n"
+	html += "\t\t\t\t\t\t<div class=\"class_properties_list\">\n"
+	for subitem in item.getElementsByTagName('member'):
+		html += "\t\t\t\t\t\t\t<div class=\"class_property\">\n"
+		html += "\t\t\t\t\t\t\t\t<div class=\"class_property_name\">%s</div>\n" % (subitem.attributes["name"].value)
+		html += "\t\t\t\t\t\t\t\t<div class=\"class_property_type\">%s</div>\n" % (subitem.attributes["type"].value)
+		desc = subitem.getElementsByTagName('desc')
+		descText = "No description."
+		if len(desc) > 0:
+			descText = desc[0].childNodes[0].data
+		html += "\t\t\t\t\t\t\t\t<div class=\"class_property_desc\">%s</div>\n" % (descText)
+		html += "\t\t\t\t\t\t\t</div>\n"
+	html += "\t\t\t\t\t\t</div>\n"
+	html += "\t\t\t\t\t</div>\n"
 
 	html += createMethods(item.attributes["name"].value, item, True)
 	html += createMethods(item.attributes["name"].value, item, False)
@@ -195,28 +163,19 @@
 	classList += "\t\t\t</div>\n"
 	classList += "\n"
 
-	if siteDocs == True:
-		directory = "../site_html/%s" % (moduleName)
-	else:
-		directory = "../html/%s" % (moduleName)
+	directory = "../html/%s" % (moduleName)
 	if not os.path.exists(directory):
 		os.makedirs(directory)	
 
 	html = globalHeader
 	html += classList
 	html += globalFooter
-	if siteDocs == True:
-		f = open("../site_html/%s/index.html" % (moduleName), 'w')
-	else:
-		f = open("../html/%s/index.html" % (moduleName), 'w')
+	f = open("../html/%s/index.html" % (moduleName), 'w')
 	f.write(html)
 	f.close()
 
 	for item in dom.documentElement.getElementsByTagName('class'):
-		if siteDocs == True:
-			f = open("../site_html/%s/%s.html" % (moduleName, item.attributes["name"].value), 'w')
-		else:
-			f = open("../html/%s/%s.html" % (moduleName, item.attributes["name"].value), 'w')
+		f = open("../html/%s/%s.html" % (moduleName, item.attributes["name"].value), 'w')
 		html = makePage(item, classList, classListPlain, moduleName)
 		f.write(html)
 		f.close()
@@ -235,11 +194,7 @@
 
 indexhtml += "\t</div>\n"
 
-if siteDocs == True:
-	f = open("../site_html/index.html", 'w')
-else:
-	f = open("../html/index.html", 'w')
-
+f = open("../html/index.html", 'w')
 f.write(indexhtml)
 f.close()
 indexhtml += globalFooter
diff --git a/Documentation/Lua/scripts/site_footer.html b/Documentation/Lua/scripts/site_footer.html
deleted file mode 100644
--- a/Documentation/Lua/scripts/site_footer.html
+++ /dev/null
@@ -1,8 +0,0 @@
-		</div>
-		</div>
-			<div id="footer">
-				Copyright Polycode Framework, Ivan Safrin, Polycode team, 2013
-			</div>
-		</div>
-	</body>
-</html>
diff --git a/Documentation/Lua/scripts/site_header.html b/Documentation/Lua/scripts/site_header.html
deleted file mode 100644
--- a/Documentation/Lua/scripts/site_header.html
+++ /dev/null
@@ -1,39 +0,0 @@
-<html>
-	<head>	
-		<title>Polycode</title>
-		 <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
-		<meta name="description" content="Polycode is a free, open-source, cross-platform framework for creative code. "/>
-		<meta name="keywords" content="2d,3d,opengl,framework,game,engine,creative,code,sound" />
-		<link href='http://fonts.googleapis.com/css?family=Roboto:400,300' rel='stylesheet' type='text/css'>
-		<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
-		<link href="/css/lua_docs.css" type="text/css" rel="stylesheet" />
-		<script type="text/javascript" src="/js/prettify.js"></script>
-		<link rel="image_src" type="image/jpeg" href="http://www.polycode.org/img/icon-facebook.gif" />
-		<link rel="stylesheet" type="text/css" media="screen" href="/css/main.css"/>
-<script type="text/javascript">
-  var _gaq = _gaq || [];
-  _gaq.push(['_setAccount', 'UA-309912-5']);
-  _gaq.push(['_trackPageview']);
-
-  (function() {
-    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
-    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
-    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
-  })();
-
-</script>
-	</head>
-	<body onLoad="prettyPrint()">
-		<div id="content_pane">
-		<div id="nav">
-			<div id="nav_logo"><a href="/"><img src="/img/toplogo.png"/></a></div>
-			<div id="nav_menu">
-				<span class="menu_item"><a href="/features">FEATURES</a></span>
-				<span class="menu_item"><a href="/gallery">GALLERY</a></span>
-				<span class="menu_item"><a href="/download">DOWNLOAD</a></span>
-				<span class="menu_item"><a href="/learn">LEARN</a></span>
-				<span class="menu_item"><a href="/community">COMMUNITY</a></span>
-			</div>
-		</div>
-		<div id="page_content_main">
-		<div id="lua_docs_content">
diff --git a/Examples/C++/Contents/2DAudio/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DAudio/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DAudio/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DAudio/HelloPolycodeApp.cpp
@@ -40,5 +40,5 @@
 	sourceEntity->setPosition(300 + (sin(positionValue) * 300), 250 + cos(positionValue) * 100); 
 	listenerEntity->setPosition(300 + (sin(listenerPositionValue) * 300), 250); 
 		
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DParticles/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DParticles/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DParticles/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DParticles/HelloPolycodeApp.cpp
@@ -54,6 +54,6 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
 
diff --git a/Examples/C++/Contents/2DPhysics_Basic/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DPhysics_Basic/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DPhysics_Basic/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DPhysics_Basic/HelloPolycodeApp.cpp
@@ -24,5 +24,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DPhysics_CollisionOnly/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DPhysics_CollisionOnly/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DPhysics_CollisionOnly/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DPhysics_CollisionOnly/HelloPolycodeApp.cpp
@@ -51,5 +51,5 @@
 	Vector2 mouse = core->getInput()->getMousePosition();
 	checkShape->setPosition(mouse.x, mouse.y);
 	checkShape->setRotation(checkShape->getRotation() + (core->getElapsed() * 100));
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DPhysics_Contacts/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DPhysics_Contacts/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DPhysics_Contacts/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DPhysics_Contacts/HelloPolycodeApp.cpp
@@ -40,5 +40,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DPhysics_Joints/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DPhysics_Joints/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DPhysics_Joints/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DPhysics_Joints/HelloPolycodeApp.cpp
@@ -46,5 +46,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DPhysics_PointCollision/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DPhysics_PointCollision/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DPhysics_PointCollision/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DPhysics_PointCollision/HelloPolycodeApp.cpp
@@ -33,5 +33,5 @@
 		entity->setColor(1.0, 0.0, 0.0, 1.0);
 		lastEntity = entity;
 	}
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DShapes/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DShapes/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DShapes/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DShapes/HelloPolycodeApp.cpp
@@ -31,5 +31,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/2DTransforms/HelloPolycodeApp.cpp b/Examples/C++/Contents/2DTransforms/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/2DTransforms/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/2DTransforms/HelloPolycodeApp.cpp
@@ -22,5 +22,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DAudio/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DAudio/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DAudio/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DAudio/HelloPolycodeApp.cpp
@@ -39,5 +39,5 @@
 	sourceEntity->Roll(core->getElapsed() * 120);
 	sourceEntity->Pitch(core->getElapsed()* 120);	
 		
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DBasics/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DBasics/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DBasics/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DBasics/HelloPolycodeApp.cpp
@@ -26,5 +26,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DMeshParticles/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DMeshParticles/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DMeshParticles/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DMeshParticles/HelloPolycodeApp.cpp
@@ -75,5 +75,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DParticles/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DParticles/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DParticles/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DParticles/HelloPolycodeApp.cpp
@@ -68,5 +68,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DPhysics_Basic/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DPhysics_Basic/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DPhysics_Basic/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DPhysics_Basic/HelloPolycodeApp.cpp
@@ -31,5 +31,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DPhysics_Character/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DPhysics_Character/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DPhysics_Character/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DPhysics_Character/HelloPolycodeApp.cpp
@@ -121,5 +121,5 @@
 	}
 	
 	
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DPhysics_CollisionOnly/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DPhysics_CollisionOnly/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DPhysics_CollisionOnly/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DPhysics_CollisionOnly/HelloPolycodeApp.cpp
@@ -46,5 +46,5 @@
 		bigBox->setColor(0.0,1.0,1.0,0.5);	
 	}
 	
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DPhysics_Contacts/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DPhysics_Contacts/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DPhysics_Contacts/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DPhysics_Contacts/HelloPolycodeApp.cpp
@@ -35,5 +35,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DPhysics_RayTest/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DPhysics_RayTest/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DPhysics_RayTest/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DPhysics_RayTest/HelloPolycodeApp.cpp
@@ -67,5 +67,5 @@
 
 bool HelloPolycodeApp::Update() {
 	Number elapsed = core->getElapsed();
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/3DPhysics_Vehicle/HelloPolycodeApp.cpp b/Examples/C++/Contents/3DPhysics_Vehicle/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/3DPhysics_Vehicle/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/3DPhysics_Vehicle/HelloPolycodeApp.cpp
@@ -171,5 +171,5 @@
 	} else {
 		testBox->setColor(0.0,1.0,1.0,0.5);	
 	}
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/AdvancedLighting/HelloPolycodeApp.cpp b/Examples/C++/Contents/AdvancedLighting/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/AdvancedLighting/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/AdvancedLighting/HelloPolycodeApp.cpp
@@ -63,5 +63,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/BasicImage/HelloPolycodeApp.cpp b/Examples/C++/Contents/BasicImage/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/BasicImage/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/BasicImage/HelloPolycodeApp.cpp
@@ -16,5 +16,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/BasicLighting/HelloPolycodeApp.cpp b/Examples/C++/Contents/BasicLighting/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/BasicLighting/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/BasicLighting/HelloPolycodeApp.cpp
@@ -30,5 +30,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/BasicText/HelloPolycodeApp.cpp b/Examples/C++/Contents/BasicText/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/BasicText/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/BasicText/HelloPolycodeApp.cpp
@@ -16,5 +16,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/EventHandling/HelloPolycodeApp.cpp b/Examples/C++/Contents/EventHandling/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/EventHandling/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/EventHandling/HelloPolycodeApp.cpp
@@ -25,5 +25,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/KeyboardInput/HelloPolycodeApp.cpp b/Examples/C++/Contents/KeyboardInput/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/KeyboardInput/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/KeyboardInput/HelloPolycodeApp.cpp
@@ -55,5 +55,5 @@
 	Number elapsed = core->getElapsed();
 	image->setRotation(image->getRotation() + elapsed * rotationSpeed);
 	
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/MouseInput/HelloPolycodeApp.cpp b/Examples/C++/Contents/MouseInput/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/MouseInput/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/MouseInput/HelloPolycodeApp.cpp
@@ -41,5 +41,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/Networking_Client/HelloPolycodeApp.cpp b/Examples/C++/Contents/Networking_Client/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/Networking_Client/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/Networking_Client/HelloPolycodeApp.cpp
@@ -146,5 +146,5 @@
 
 bool HelloPolycodeApp::Update() {
 
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/Networking_Server/HelloPolycodeApp.cpp b/Examples/C++/Contents/Networking_Server/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/Networking_Server/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/Networking_Server/HelloPolycodeApp.cpp
@@ -156,5 +156,5 @@
 bool HelloPolycodeApp::Update() {
 	updateWorld(core->getElapsed());
 	infoLabel->setText("Example server. ["+String::IntToString(players.size())+" Players]");
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/PlayingSounds/HelloPolycodeApp.cpp b/Examples/C++/Contents/PlayingSounds/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/PlayingSounds/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/PlayingSounds/HelloPolycodeApp.cpp
@@ -31,5 +31,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/ScreenEntities/HelloPolycodeApp.cpp b/Examples/C++/Contents/ScreenEntities/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/ScreenEntities/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/ScreenEntities/HelloPolycodeApp.cpp
@@ -40,6 +40,6 @@
 	planet->setPosition(cosf(planetRotation)*150, sinf(planetRotation)*150);
 	moon->setPosition(cosf(moonRotation)*50, sinf(moonRotation)*50);
 		
-    return core->updateAndRender();
+    return core->Update();
 }
 
diff --git a/Examples/C++/Contents/ScreenSprites/HelloPolycodeApp.cpp b/Examples/C++/Contents/ScreenSprites/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/ScreenSprites/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/ScreenSprites/HelloPolycodeApp.cpp
@@ -21,5 +21,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/SkeletalAnimation/HelloPolycodeApp.cpp b/Examples/C++/Contents/SkeletalAnimation/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/SkeletalAnimation/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/SkeletalAnimation/HelloPolycodeApp.cpp
@@ -26,5 +26,5 @@
 }
 
 bool HelloPolycodeApp::Update() {
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/C++/Contents/UpdateLoop/HelloPolycodeApp.cpp b/Examples/C++/Contents/UpdateLoop/HelloPolycodeApp.cpp
--- a/Examples/C++/Contents/UpdateLoop/HelloPolycodeApp.cpp
+++ b/Examples/C++/Contents/UpdateLoop/HelloPolycodeApp.cpp
@@ -18,5 +18,5 @@
 bool HelloPolycodeApp::Update() {
 	Number elapsed = core->getElapsed();
 	image->setRotation(image->getRotation()+(elapsed*100));
-    return core->updateAndRender();
+    return core->Update();
 }
diff --git a/Examples/Lua/2D_Physics/2DPhysics_CollisionOnly/Scripts/2DPhysics_CollisionOnly.lua b/Examples/Lua/2D_Physics/2DPhysics_CollisionOnly/Scripts/2DPhysics_CollisionOnly.lua
--- a/Examples/Lua/2D_Physics/2DPhysics_CollisionOnly/Scripts/2DPhysics_CollisionOnly.lua
+++ b/Examples/Lua/2D_Physics/2DPhysics_CollisionOnly/Scripts/2DPhysics_CollisionOnly.lua
@@ -13,7 +13,7 @@
 
 function onNewCollision(t, event)
 	physicsEvent = safe_cast(event, PhysicsScreenEvent)
-	if physicsEvent.entity1 == checkShape then
+	if same_c_class(physicsEvent:getFirstEntity(),checkShape) or same_c_class(physicsEvent:getSecondEntity(),checkShape) then
 		physicsEvent:getFirstEntity():setColor(1.0, 0.0, 0.0, 1.0)
 		physicsEvent:getSecondEntity():setColor(1.0, 0.0, 0.0, 1.0)
 	end
diff --git a/Examples/Lua/Game_Demos/Platformer/Platformer.polyproject b/Examples/Lua/Game_Demos/Platformer/Platformer.polyproject
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Platformer.polyproject
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" ?>
-<PolycodeProject defaultWidth="1280" defaultHeight="720" antiAliasingLevel="0" entryPoint="Scripts/Main.lua" textureFiltering="linear" vSync="true" anisotropyLevel="0" frameRate="60">
-    <backgroundColor red="0.224599" green="0.224599" blue="0.224599" />
-    <polyarray:packedItems>
-        <item type="folder" path="Resources" />
-        <item type="folder" path="Scripts" />
-    </polyarray:packedItems>
-    <polyarray:fonts>
-        <font name="Sniglet" path="Resources/fonts/Sniglet Regular.otf" />
-    </polyarray:fonts>
-</PolycodeProject>
diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/entities/button.entity2d b/Examples/Lua/Game_Demos/Platformer/Resources/entities/button.entity2d
deleted file mode 100644
index 70091b4f05af52c39dd4adf1685f285902191ae8..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/entities/coin.entity2d b/Examples/Lua/Game_Demos/Platformer/Resources/entities/coin.entity2d
deleted file mode 100644
index 38beaff8a0f53880e990b4c4becab5fe636936a6..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/entities/fly.entity2d b/Examples/Lua/Game_Demos/Platformer/Resources/entities/fly.entity2d
deleted file mode 100644
index cd122843f05ad9dbb6ccd38793207a7fcdf6e2ed..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/entities/spaceman.entity2d b/Examples/Lua/Game_Demos/Platformer/Resources/entities/spaceman.entity2d
deleted file mode 100644
index 5cc7d7dcfdf2f675144e44ce66deb7a038c80c18..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/fonts/LondrinaSolid-Regular.otf b/Examples/Lua/Game_Demos/Platformer/Resources/fonts/LondrinaSolid-Regular.otf
deleted file mode 100644
index 02336ee859cf0d5a5325c251150b716eed389be8..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/fonts/Sniglet Regular.otf b/Examples/Lua/Game_Demos/Platformer/Resources/fonts/Sniglet Regular.otf
deleted file mode 100644
index 9f3c8d2d7106672dbc126760fd4a9e85f2fd913f..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/alien_plant.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/alien_plant.png
deleted file mode 100644
index fd561574df8e88376ffe156accd5f68688feaa3e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/background.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/background.png
deleted file mode 100644
index 571d9e05a0d29d91a408b10cbb5faa1d36dc5867..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/block.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/block.png
deleted file mode 100644
index 280c6a4f60996b904b2953da07094e0c8adfb247..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/bonus.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/bonus.png
deleted file mode 100644
index e0d04862280d4171110645745cfa63697013ea17..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/bonus_used.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/bonus_used.png
deleted file mode 100644
index eef0cd4dac10a7f49fa4ff9b3302fd681b0243c6..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/bridge.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/bridge.png
deleted file mode 100644
index 5d87bea00342422832211177d58cdc1f2141c466..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/bush.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/bush.png
deleted file mode 100644
index c3fa0ca42085ebc73dc1e8bf7d8df8ffdbbaeda2..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/cloud_1.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/cloud_1.png
deleted file mode 100644
index ae72230c1f35ec0f92276b23ab665f57f5d7925f..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/cloud_2.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/cloud_2.png
deleted file mode 100644
index 51aa6caed040455476c4385a852ab5b29bb4e7f6..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/cloud_3.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/cloud_3.png
deleted file mode 100644
index 3ada0488f083e7965ecc668e135a25c3eebe5534..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/coin_bronze.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/coin_bronze.png
deleted file mode 100644
index f7805cf1b412fc56bf2dccb7cfe4e4009ec54687..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/coin_gold.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/coin_gold.png
deleted file mode 100644
index ac2df7ecde795626434ff9ec83c43691472445af..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/coin_silver.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/coin_silver.png
deleted file mode 100644
index f9a3e2eb571776008a2b35b5d874153097740d1b..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/crate.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/crate.png
deleted file mode 100644
index a22eb7a53b001b310818da1802a8f7e2868d590d..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/enemies/fly.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/enemies/fly.png
deleted file mode 100644
index 535dee5aa59405f071919f93eda0e7c59be6c8d3..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/enemies/slime_normal.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/enemies/slime_normal.png
deleted file mode 100644
index 03764585efd2cd5e5f72c4d05fea42d981d98ad1..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/enemies/slime_walk.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/enemies/slime_walk.png
deleted file mode 100644
index f19e9f565a2f38589cb2c48109043bc9d4582e1f..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/fence.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/fence.png
deleted file mode 100644
index ac1e7ee6d25fdbb05c7efdae44791562fc15e732..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/fence_broken.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/fence_broken.png
deleted file mode 100644
index fd61cbc1312d8745bf00b7361e672c7d719001dc..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/grass.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/grass.png
deleted file mode 100644
index 44824149966a4bf28fb94f182fc002ad01678d9d..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/ground.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/ground.png
deleted file mode 100644
index 495f04c93d53b492dd58ab0bed1dc410a278ab9e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_cave.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_cave.png
deleted file mode 100644
index eb62405a3b7180ed751bb311b988740768858978..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_dirt.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_dirt.png
deleted file mode 100644
index 023c6037d41434132ca6e319b5db7ea269174f0b..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_rock.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_rock.png
deleted file mode 100644
index 170fbde7fc89f6679d05aa7628a34a28541a993a..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_sand.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/ground_sand.png
deleted file mode 100644
index 34e0f7425c20eb1b1d1124c1b7a861efc18bd282..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/hill_long.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/hill_long.png
deleted file mode 100644
index 194f759c82ef086c7671e39a52982df121c266a2..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/hill_short.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/hill_short.png
deleted file mode 100644
index 7506356c034c9a1f5daa8db21bee92e701a7a6a7..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/key_blue.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/key_blue.png
deleted file mode 100644
index a4a467ab1f21560dc4ae0bee77c3d2c2b7dc72ea..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/key_green.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/key_green.png
deleted file mode 100644
index db724bf8be7c3ffa0e2e8b61d2e88af730d6264b..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/key_red.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/key_red.png
deleted file mode 100644
index a424da9f3fe0e0206e436b8c1d50d96def73967c..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/key_yellow.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/key_yellow.png
deleted file mode 100644
index 528373760326cf66bf52d85e97a31a366c4de7eb..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/lava.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/lava.png
deleted file mode 100644
index 19d12cdff5b570a1d5949f3092e2a0edb4b73886..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_blue.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_blue.png
deleted file mode 100644
index 927addd5cbb177807ad7631861e1d7def8752641..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_green.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_green.png
deleted file mode 100644
index 27bdb9d7bf25051fc85a1d29d70eb584170516ff..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_red.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_red.png
deleted file mode 100644
index 3af3923075eee24233fc9536cdf672114352276e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_yellow.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/lock_yellow.png
deleted file mode 100644
index 848cc67890e2db7539cb22f56ce2e66dcb572599..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/plank.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/plank.png
deleted file mode 100644
index 81e15410ab153dc6e8d2a66c8a7bb64d999d76c3..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/rock.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/rock.png
deleted file mode 100644
index ffad60aee6c1ee82b68922325a385f9a0f7129b7..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/shroom.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/shroom.png
deleted file mode 100644
index ac4b855f75c6a9883b38f1633e1bc4e1d3fa435b..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/spaceman.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/spaceman.png
deleted file mode 100644
index 291a5d26a7f92d4fe586cf1f5fab30c1acb85623..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/spikes.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/spikes.png
deleted file mode 100644
index 0a7ab756ff5624ef657b543f4e45276259e24a12..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_blue_off.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_blue_off.png
deleted file mode 100644
index f3c581d6f97c8d2fb47451097b8d7e18509a8b32..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_blue_on.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_blue_on.png
deleted file mode 100644
index 62462b53a3ba020dfc9181564ab8b4caa2bc92f6..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_green_off.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_green_off.png
deleted file mode 100644
index 1d4c09ba5169dc276ceffcf3343d34e1bd8bf71e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_green_on.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_green_on.png
deleted file mode 100644
index b5bd735951621830ccf3a8776e3e426e4554b6bb..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_red_off.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_red_off.png
deleted file mode 100644
index 111713d4f9aa9ee10aa37f766c205d74bba50578..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_red_on.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_red_on.png
deleted file mode 100644
index 5f0ef5df7633318bcc32ee1651a7bea1cf0397ad..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_yellow_off.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_yellow_off.png
deleted file mode 100644
index 1f6adbd62c7ad25025960fc0996bf0140920898b..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_yellow_on.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/switch_yellow_on.png
deleted file mode 100644
index 2dfa20a7aea5dab3cb959dc422d3e972e407d22e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/images/water.png b/Examples/Lua/Game_Demos/Platformer/Resources/images/water.png
deleted file mode 100644
index c184cb928e7bdab59dd6e776eb7f5f27723a8098..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/levels/level1.entity2d b/Examples/Lua/Game_Demos/Platformer/Resources/levels/level1.entity2d
deleted file mode 100644
index 95477d1c2b8c497ce20915c185105f8b1a248051..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/sounds/button.wav b/Examples/Lua/Game_Demos/Platformer/Resources/sounds/button.wav
deleted file mode 100644
index e3629cbc3971e12761b944045521daadc614c334..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/sounds/coin.wav b/Examples/Lua/Game_Demos/Platformer/Resources/sounds/coin.wav
deleted file mode 100644
index f24785b751d0d101e8153234581d44b233ed4b8d..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/sounds/die.wav b/Examples/Lua/Game_Demos/Platformer/Resources/sounds/die.wav
deleted file mode 100644
index 3e9ff162a4ed1e734f0c413475667d2e4265828e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/sounds/jump.wav b/Examples/Lua/Game_Demos/Platformer/Resources/sounds/jump.wav
deleted file mode 100644
index b3fd8d2b77f64ecefa0d967a1e5114e00fece025..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/sprites/fly.sprite b/Examples/Lua/Game_Demos/Platformer/Resources/sprites/fly.sprite
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Resources/sprites/fly.sprite
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" ?>
-<sprite>
-    <image frameWidth="69" frameHeight="32" fileName="Resources/images/enemies/fly.png" />
-    <animations>
-        <animation name="fly" frames="0,1" speed="0.05" />
-    </animations>
-</sprite>
diff --git a/Examples/Lua/Game_Demos/Platformer/Resources/sprites/spaceman.sprite b/Examples/Lua/Game_Demos/Platformer/Resources/sprites/spaceman.sprite
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Resources/sprites/spaceman.sprite
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" ?>
-<sprite>
-    <image frameWidth="72" frameHeight="98" fileName="Resources/images/spaceman.png" />
-    <animations>
-        <animation name="walk" frames="0,1,2,3,4,5,6,7,8" speed="0.05" />
-        <animation name="idle" frames="10" speed="0.5" />
-        <animation name="jump" frames="11" speed="0.5" />
-    </animations>
-</sprite>
diff --git a/Examples/Lua/Game_Demos/Platformer/Scripts/Fly.lua b/Examples/Lua/Game_Demos/Platformer/Scripts/Fly.lua
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Scripts/Fly.lua
+++ /dev/null
@@ -1,22 +0,0 @@
-
-class "Fly"
-
-function Fly:Fly(flyBody)
-	self.startPosition = Vector3(flyBody.position.x, flyBody.position.y, flyBody.position.z)
-	self.body = flyBody
-	self.direction = -1.0
-end
-
-function Fly:Update(elapsed)
-	self.body:Translate(self.direction * elapsed * 150.0, 0.0, 0.0)
-	if self.startPosition:distance(self.body.position) > 100 then
-		if self.body.position.x < self.startPosition.x then
-			self.direction = 1.0
-		else
-			self.direction = -1.0
-		end
-	end
-
-	self.body.scale.x = self.direction * -1.0
-end
-
diff --git a/Examples/Lua/Game_Demos/Platformer/Scripts/HUD.lua b/Examples/Lua/Game_Demos/Platformer/Scripts/HUD.lua
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Scripts/HUD.lua
+++ /dev/null
@@ -1,16 +0,0 @@
-
-class "HUD"
-
-function HUD:HUD()
-	self.screen = Screen()
-	self.screen:setNormalizedCoordinates(true, 720)
-	self.coinsLabel = ScreenLabel("COINS: 0", 48, "Sniglet")
-	self.screen:addChild(self.coinsLabel)
-	self.coinsLabel.position.x = -400
-	self.coinsLabel.position.y = (-720/2)+10
-
-	self.winLabel = ScreenLabel("WOW, YOU WON THE GAME!", 72, "Sniglet")
-	self.screen:addChild(self.winLabel)
-	self.winLabel:setPositionMode(ScreenEntity.POSITION_CENTER)
-	self.winLabel.visible = false
-end
\ No newline at end of file
diff --git a/Examples/Lua/Game_Demos/Platformer/Scripts/Level.lua b/Examples/Lua/Game_Demos/Platformer/Scripts/Level.lua
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Scripts/Level.lua
+++ /dev/null
@@ -1,159 +0,0 @@
-
-require "Scripts/Player"
-require "Scripts/Fly"
-require "Scripts/HUD"
-
-class "Level"
-
-function Level:Level(levelFile)
-	self.loaded = false
-	self.levelFile = levelFile
-
-	self.coinSound = Sound("Resources/sounds/coin.wav")
-	self.buttonSound = Sound("Resources/sounds/button.wav")
-
-	self:initLevel()
-end
-
-function Level:initLevel()
-
-	self.backgroundScreen = Screen()
-	self.backgroundScreen:setNormalizedCoordinates(true, 720)
-	for i=0,4 do
-		self.background = ScreenImage("Resources/images/background.png")
-		self.backgroundScreen:addChild(self.background)
-		self.background.position.x =  -450 + (1280 * i)
-		self.background.position.y = -720/2
-	end
-
-	self.screen = PhysicsScreen(40, 60.0)
-
-	self.screen:setGravity(Vector2(0.0, 80))
-	self.screen:setNormalizedCoordinates(true, 720)
-	self.level = ScreenEntityInstance("Resources/levels/"..self.levelFile..".entity2d")
-	self.screen:addChild(self.level)
-	self.playerEntity = self.level:getScreenEntityById("player", true)
-	self.player = Player(self.screen, self.playerEntity)
-	self.screen:trackCollisionChild(self.player.groundSensor, PhysicsScreenEntity.ENTITY_RECT)
-
-	local ground_blocks = self.level:getScreenEntitiesByTag("ground", true)
-	for i=1,count(ground_blocks) do
-		self.screen:trackPhysicsChild(ground_blocks[i], PhysicsScreenEntity.ENTITY_RECT , true, 2.0, 1, 0, false, false)
-	end
-
-	self.coins = self.level:getScreenEntitiesByTag("coin", true)
-	for i=1,count(self.coins) do
-		self.screen:trackCollisionChild(self.coins[i], PhysicsScreenEntity.ENTITY_CIRCLE)
-	end
-
-	self.buttons = self.level:getScreenEntitiesByTag("button", true)
-	for i=1,count(self.buttons) do
-		self.screen:trackPhysicsChild(self.buttons[i], PhysicsScreenEntity.ENTITY_RECT , true, 2.0, 1, 0, false, false)
-	end
-
-
-	self.enemies = {}
-	local flies = self.level:getScreenEntitiesByTag("fly", true)
-	for i=1,count(flies) do
-		self.screen:trackCollisionChild(flies[i], PhysicsScreenEntity.ENTITY_CIRCLE)
-		self.enemies[count(self.enemies)+1] = Fly(flies[i])
-	end	
-	
-	self.screen:addEventListener(self, Level.onNewCollision, PhysicsScreenEvent.EVENT_NEW_SHAPE_COLLISION)
-	self.coinSinVal = 0
-
-	self.hud = HUD()
-
-	self.loaded = true
-end
-
-function Level:clearLevel()
-
-	self.screen.rootEntity:setOwnsChildrenRecursive(true)
-	self.backgroundScreen.rootEntity:setOwnsChildrenRecursive(true)
-	self.hud.screen.rootEntity:setOwnsChildrenRecursive(true)
-
-	safe_delete(self.player.jumpSound)
-	safe_delete(self.player.dieSound              )
-
-	safe_delete(self.screen)
-	safe_delete(self.backgroundScreen)
-	safe_delete(self.hud.screen)
-
-	self.loaded = false
-end
-
-function Level:reloadLevel()
-	self:clearLevel()
-	self:initLevel()
-end
-
-function Level:onNewCollision(event)
-	physicsEvent = safe_cast(event, PhysicsScreenEvent)
-	local collidedEntity =  physicsEvent.entity2
-	local firstEntity = physicsEvent.entity1
-
-	if firstEntity == self.player.groundSensor then
-		if collidedEntity:hasTag("button") then
-			local buttonUp = collidedEntity:getEntityById("button_up", true)
-			local buttonDown = collidedEntity:getEntityById("button_down", true)
-			if buttonUp.visible == true then
-				buttonUp.visible = false
-				buttonDown.visible = true
-				self.screen:stopTrackingChild(collidedEntity)
-				collidedEntity.height = 55
-				self.screen:trackPhysicsChild(collidedEntity, PhysicsScreenEntity.ENTITY_RECT , true, 2.0, 1, 0, false, false)
-				self.buttonSound:Play()
-				self:levelButtonPushed(collidedEntity.id)
-			end	
-		end
-	end
-
-	if firstEntity == self.player.playerEntity then
-		if collidedEntity:hasTag("coin") and collidedEntity.visible == true then
-			collidedEntity.visible = false
-			self.player.numCoins = self.player.numCoins + 1
-			self.coinSound:Play()
-		elseif collidedEntity:hasTag("enemy") and self.player.dead == false then
-			self.player:Die()
-		end
-	end
-end
-
-function Level:levelButtonPushed(buttonID)
-	if buttonID == "level_end_button" then
-		self.hud.winLabel.visible = true 
-	end
-end
-
-function Level:Update(elapsed)	
-
-	if self.player.deadCounter > 2.0 then
-		self:reloadLevel()
-	end
-
-	if self.loaded == false then return end
-
-	self.player:Update(elapsed)
-
-	for i=1,count(self.enemies) do
-		self.enemies[i]:Update(elapsed)
-	end
-
-	self.coinSinVal = self.coinSinVal + elapsed * 5.0
-	for i=1,count(self.coins) do
-		self.coins[i].scale.x = sin(self.coinSinVal)
-	end
-
-	local screenOffset = Vector2(-self.player.playerEntity.position.x, -self.player.playerEntity.position.y)
-	if screenOffset.y < 310 then
-		screenOffset.y = 310
-	end
-	if screenOffset.x > -650 then
-		screenOffset.x = -650
-	end
-	self.screen:setScreenOffset(screenOffset.x, 310)
-	self.backgroundScreen:setScreenOffset(screenOffset.x/3, 0.0)
-
-	self.hud.coinsLabel:setText("COINS: "..self.player.numCoins)
-end
\ No newline at end of file
diff --git a/Examples/Lua/Game_Demos/Platformer/Scripts/Main.lua b/Examples/Lua/Game_Demos/Platformer/Scripts/Main.lua
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Scripts/Main.lua
+++ /dev/null
@@ -1,14 +0,0 @@
-require "Scripts/Level"
-require "Scripts/HUD"
-
-level = Level("level1")
-
-function onKeyDown(key)
-	if key == KEY_z then 
-		level.player:Jump()
-	end
-end
-
-function Update(elapsed)
-	level:Update(elapsed)
-end
\ No newline at end of file
diff --git a/Examples/Lua/Game_Demos/Platformer/Scripts/Player.lua b/Examples/Lua/Game_Demos/Platformer/Scripts/Player.lua
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Platformer/Scripts/Player.lua
+++ /dev/null
@@ -1,76 +0,0 @@
-
-class "Player"
-
-function Player:Player(screen, playerEntity)
-	self.screen = screen
-	self.playerEntity = playerEntity
-	self.playerPhysics = screen:trackPhysicsChild(playerEntity, PhysicsScreenEntity.ENTITY_TRIPLE_CIRCLE, false, 0.0, 1, 0, false, true, -1)
-	self.playerSprite = safe_cast(playerEntity:getEntityById("playerSprite", true), ScreenSprite)
-	self.groundSensor = safe_cast(playerEntity:getEntityById("groundSensor", true), ScreenShape)
-	self.playerVelocity = 0.0
-	self.jumping = true
-	self.numCoins = 0
-	self.dead = false
-	self.deadCounter = 0
-	self.jumpSound = Sound("Resources/sounds/jump.wav")
-	self.dieSound = Sound("Resources/sounds/die.wav")
-end
-
-function Player:Jump()
-	if self.jumping == false and self.dead == false then
-		self.playerPhysics:applyImpulse(0.0, -80.0)
-		self.jumpSound:Play()
-	end
-end
- 
-function Player:Die()
-	if self.dead == true then return end
-	self.playerSprite.rotation.roll = -90
-	self.playerSprite.position.y = 10
-	self.playerPhysics:applyImpulse(0.0, -80.0)
-	self.dead = true
-	self.dieSound:Play()
-end
-
-function Player:Update(elapsed)
-
-	if self.playerEntity.position.y > 400 then 
-		self:Die()
-	end
-
-	if self.dead then
-		self.deadCounter = self.deadCounter + elapsed
-		self.playerSprite:playAnimation("idle", 0, false)
-		self.playerPhysics:setVelocityX(0)
-		return
-	end
-
-	if self.screen:isEntityColliding(self.groundSensor) then
-		self.jumping = false
-	else
-		self.jumping = true
-	end
-
-	if Services.Input:getKeyState(KEY_LEFT) then
-		self.playerVelocity = -7.2
-		self.playerSprite.scale.x = -1
-	elseif Services.Input:getKeyState(KEY_RIGHT) then
-		self.playerVelocity = 7.2
-		self.playerSprite.scale.x = 1
-	else
-		self.playerVelocity = 0.0
-	end
-
-	self.playerPhysics:setVelocityX(self.playerVelocity)
-
-	if self.jumping == true then
-		self.playerSprite:playAnimation("jump", 0, false)
-	else
-		if self.playerVelocity == 0.0 then
-			self.playerSprite:playAnimation("idle", 0, false)
-		else
-			self.playerSprite:playAnimation("walk", 0, false)
-		end
-	end
-
-end
\ No newline at end of file
diff --git a/Examples/Lua/Game_Demos/Pong/Pong.polyproject b/Examples/Lua/Game_Demos/Pong/Pong.polyproject
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Pong/Pong.polyproject
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" ?>
-<PolycodeProject defaultWidth="640" defaultHeight="480" antiAliasingLevel="0" entryPoint="Scripts/Main.lua" textureFiltering="linear" vSync="true" anisotropyLevel="0" frameRate="60">
-    <backgroundColor red="0.167291" green="0.217107" blue="0.240642" />
-    <polyarray:packedItems>
-        <item type="folder" path="Resources" />
-        <item type="folder" path="Scripts" />
-    </polyarray:packedItems>
-</PolycodeProject>
diff --git a/Examples/Lua/Game_Demos/Pong/Resources/field.entity2d b/Examples/Lua/Game_Demos/Pong/Resources/field.entity2d
deleted file mode 100755
index cc5bb186592c7efd14d0c79b4c970e08849c1e01..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Pong/Resources/hit.wav b/Examples/Lua/Game_Demos/Pong/Resources/hit.wav
deleted file mode 100644
index 405f7b4b8cacb54a33184b492295710d2af1b7d2..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Pong/Resources/score.wav b/Examples/Lua/Game_Demos/Pong/Resources/score.wav
deleted file mode 100644
index 39e3dfadfd93a4aeffa89472257eb64b7898d66a..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Examples/Lua/Game_Demos/Pong/Scripts/Main.lua b/Examples/Lua/Game_Demos/Pong/Scripts/Main.lua
deleted file mode 100644
--- a/Examples/Lua/Game_Demos/Pong/Scripts/Main.lua
+++ /dev/null
@@ -1,123 +0,0 @@
-------------------------------------------------
--- Polycode Pong example by Ivan Safrin, 2013
-------------------------------------------------
-
--- create a new Screen and set its height to 480
-screen = PhysicsScreen(1.0, 30)
-screen:setNormalizedCoordinates(true, 480)
-
--- load the playing field from the entity file and add it to the screen
-field = ScreenEntityInstance("Resources/field.entity2d")
-screen:addChild(field)
-
--- get a handle to the player paddles and ball in the screen file and begin tracking collision
-
-ball = field:getScreenEntityById("ball", true)
-screen:trackCollisionChild(ball, PhysicsScreenEntity.ENTITY_RECT)
-
-p1 = field:getScreenEntityById("p1", true)
-screen:trackCollisionChild(p1, PhysicsScreenEntity.ENTITY_RECT)
-
-p2 = field:getScreenEntityById("p2", true)
-screen:trackCollisionChild(p2, PhysicsScreenEntity.ENTITY_RECT)
-
-topWall = field:getScreenEntityById("topWall", true)
-screen:trackCollisionChild(topWall, PhysicsScreenEntity.ENTITY_RECT)
-
-bottomWall = field:getScreenEntityById("bottomWall", true)
-screen:trackCollisionChild(bottomWall, PhysicsScreenEntity.ENTITY_RECT)
-
---load sounds
-hitSound = Sound("Resources/hit.wav")
-scoreSound = Sound("Resources/score.wav")
-
-ballSpeed = 400.0
-ballDirection = Vector2(1.0, 0.0)
-
--- initialize scores and get references to the player score labels on the field
-p1scoreLabel = cast(field:getScreenEntityById("p1scoreLabel", true), ScreenLabel)
-p2scoreLabel = cast(field:getScreenEntityById("p2scoreLabel", true), ScreenLabel)
-p1Score = 0
-p2Score = 0
-
-function onCollision(t, event)
-	-- we need to cast the event to PhysicsScreenEvent because this is a PhysicsScreen event
-	physicsEvent = cast(event, PhysicsScreenEvent)
-
-	-- check if the colliding entity is the ball
-	if physicsEvent.entity1 == ball then
-
-		-- if colliding with player 1 or player 2 paddle
-		if physicsEvent.entity2 == p1 or physicsEvent.entity2 == p2 then
-
-			-- reverse the horizontal direction
-			ballDirection.x = ballDirection.x * -1 
-
-			-- adjust the vertical direction based on where on the paddle it hit
-			ballDirection.y = (ball.position.y - physicsEvent:getSecondEntity().position.y)/80.0
-			if ballDirection.y > 1.0 then ballDirection.y = 1.0 end
-			if ballDirection.y < -1.0 then ballDirection.y = -1.0 end
-		else
-			-- if collliding with the walls, simply reverse the vertical direction
-			ballDirection.y = ballDirection.y * -1
-		end
-
-		-- play the hit sound
-		hitSound:Play()
-	end
-end
-
--- add a collision listener to the Physics Screen
--- onCollision will now be called every time there is a collion between
--- entities that we are tracking
-screen:addEventListener(nil, onCollision, PhysicsScreenEvent.EVENT_NEW_SHAPE_COLLISION)
-
--- Update is called automatically every frame
-function Update(elapsed)
-
-	-- check player 1 input
-	if Services.Input:getKeyState(KEY_a) == true then
-		p1.position.y = p1.position.y - (300 * elapsed)
-	elseif Services.Input:getKeyState(KEY_z) == true then
-		p1.position.y = p1.position.y + (300 * elapsed)
-	end
-
-	-- check player 2 input
-	if Services.Input:getKeyState(KEY_UP) == true then
-		p2.position.y = p2.position.y - (300 * elapsed)
-	elseif Services.Input:getKeyState(KEY_DOWN) == true then
-		p2.position.y = p2.position.y + (300 * elapsed)
-	end
-
-	-- limit the paddle positions so they don't go offscreen
-	if p1.position.y < -180 then p1.position.y = -180 end
-	if p1.position.y > 180 then p1.position.y = 180 end
-	if p2.position.y < -180 then p2.position.y = -180 end
-	if p2.position.y > 180 then p2.position.y = 180 end
-
-	-- update the ball position
-	ball.position.x = ball.position.x + (ballDirection.x * ballSpeed * elapsed)
-	ball.position.y = ball.position.y + (ballDirection.y * ballSpeed * elapsed)
-
-	-- check if the ball beyond player 1's paddle and increment player 2's score
-	if ball.position.x < -328 then
-		ball.position.x = -200
-		ball.position.y = 0
-		ballDirection.x = 1.0
-		ballDirection.y = 0.0
-		scoreSound:Play()
-		p2Score = p2Score + 1
-		p2scoreLabel:setText(""..p2Score)
-	end
-
-	-- check if the ball beyond player 2's paddle and increment player 1's score
-	if ball.position.x > 328 then
-		ball.position.x = 200
-		ball.position.y = 0
-		ballDirection.x = -1.0
-		ballDirection.y = 0.0
-		scoreSound:Play()
-		p1Score = p1Score + 1
-		p1scoreLabel:setText(""..p1Score)
-	end
-end
\ No newline at end of file
diff --git a/IDE/Build/Linux/Makefile b/IDE/Build/Linux/Makefile
--- a/IDE/Build/Linux/Makefile
+++ b/IDE/Build/Linux/Makefile
@@ -1,22 +1,20 @@
 CC=g++
 CFLAGS=-I../../Contents/Include -I../../../Release/Linux/Framework/Core/Dependencies/include -I../../../Release/Linux/Framework/Core/Dependencies/include/AL -I../../../Release/Linux/Framework/Core/include -I../../../Release/Linux/Framework/Modules/include -I../../../Release/Linux/Framework/Modules/Dependencies/include -I../../../Release/Linux/Framework/Modules/Dependencies/include/bullet -DUSE_POLYCODEUI_FILE_DIALOGS -DUSE_POLYCODEUI_MENUBAR
-LDFLAGS=-lrt -ldl -lpthread ../../../Release/Linux/Framework/Core/lib/libPolycore.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libfreetype.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbisfile.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbis.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibogg.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libopenal.so ../../../Release/Linux/Framework/Core/Dependencies/lib/libphysfs.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libpng15.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libz.a -lGL -lGLU -lSDL ../../../Release/Linux/Framework/Modules/lib/libPolycode2DPhysics.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBox2D.a ../../../Release/Linux/Framework/Modules/lib/libPolycode3DPhysics.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletDynamics.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletCollision.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libLinearMath.a ../../../Release/Linux/Framework/Modules/lib/libPolycodeUI.a -lX11
-LDFLAGS_DEBUG=-lrt -ldl -lpthread ../../../Release/Linux/Framework/Core/lib/libPolycore_d.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libfreetype_d.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbisfiled.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbisd.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libliboggd.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libopenal.so ../../../Release/Linux/Framework/Core/Dependencies/lib/libphysfsd.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libpng15d.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libz.a -lGL -lGLU -lSDL ../../../Release/Linux/Framework/Modules/lib/libPolycode2DPhysics_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBox2D_d.a ../../../Release/Linux/Framework/Modules/lib/libPolycode3DPhysics_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletDynamics_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletCollision_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libLinearMath_d.a ../../../Release/Linux/Framework/Modules/lib/libPolycodeUI_d.a -lX11
-SRCS=../../Contents/Source/ExampleBrowserWindow.cpp ../../Contents/Source/PolycodeEditorManager.cpp  ../../Contents/Source/PolycodeProject.cpp        ../../Contents/Source/PolycodeScreenEditor.cpp ../../Contents/Source/ExportProjectWindow.cpp  ../../Contents/Source/PolycodeFontEditor.cpp     ../../Contents/Source/PolycodeProjectBrowser.cpp ../../Contents/Source/PolycodeSpriteEditor.cpp ../../Contents/Source/NewFileWindow.cpp        ../../Contents/Source/PolycodeFrame.cpp          ../../Contents/Source/PolycodeProjectEditor.cpp  ../../Contents/Source/PolycodeTextEditor.cpp ../../Contents/Source/NewProjectWindow.cpp     ../../Contents/Source/PolycodeIDEApp.cpp         ../../Contents/Source/PolycodeProjectManager.cpp ../../Contents/Source/PolycodeToolLauncher.cpp ../../Contents/Source/PolycodeConsole.cpp      ../../Contents/Source/PolycodeImageEditor.cpp    ../../Contents/Source/PolycodeProps.cpp          ../../Contents/Source/TextureBrowser.cpp ../../Contents/Source/PolycodeEditor.cpp       ../../Contents/Source/PolycodeMaterialEditor.cpp ../../Contents/Source/PolycodeRemoteDebugger.cpp ../../Contents/Source/ToolWindows.cpp ../../Contents/Source/PolycodeClipboard.cpp ../../Contents/Source/SettingsWindow.cpp
+LDFLAGS=-lrt -ldl -lpthread ../../../Release/Linux/Framework/Core/lib/libPolycore.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libfreetype.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbisfile.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbis.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibogg.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libopenal.so ../../../Release/Linux/Framework/Core/Dependencies/lib/libphysfs.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libpng15.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libz.a -lGL -lGLU -lSDL ../../../Release/Linux/Framework/Modules/lib/libPolycode2DPhysics.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBox2D.a ../../../Release/Linux/Framework/Modules/lib/libPolycode3DPhysics.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletDynamics.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletCollision.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libLinearMath.a ../../../Release/Linux/Framework/Modules/lib/libPolycodeUI.a
+LDFLAGS_DEBUG=-lrt -ldl -lpthread ../../../Release/Linux/Framework/Core/lib/libPolycore_d.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libfreetype_d.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbisfiled.a ../../../Release/Linux/Framework/Core/Dependencies/lib/liblibvorbisd.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libliboggd.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libopenal.so ../../../Release/Linux/Framework/Core/Dependencies/lib/libphysfsd.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libpng15d.a ../../../Release/Linux/Framework/Core/Dependencies/lib/libz.a -lGL -lGLU -lSDL ../../../Release/Linux/Framework/Modules/lib/libPolycode2DPhysics_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBox2D_d.a ../../../Release/Linux/Framework/Modules/lib/libPolycode3DPhysics_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletDynamics_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libBulletCollision_d.a ../../../Release/Linux/Framework/Modules/Dependencies/lib/libLinearMath_d.a ../../../Release/Linux/Framework/Modules/lib/libPolycodeUI_d.a
+SRCS=../../Contents/Source/ExampleBrowserWindow.cpp ../../Contents/Source/PolycodeEditorManager.cpp  ../../Contents/Source/PolycodeProject.cpp        ../../Contents/Source/PolycodeScreenEditor.cpp ../../Contents/Source/ExportProjectWindow.cpp  ../../Contents/Source/PolycodeFontEditor.cpp     ../../Contents/Source/PolycodeProjectBrowser.cpp ../../Contents/Source/PolycodeSpriteEditor.cpp ../../Contents/Source/NewFileWindow.cpp        ../../Contents/Source/PolycodeFrame.cpp          ../../Contents/Source/PolycodeProjectEditor.cpp  ../../Contents/Source/PolycodeTextEditor.cpp ../../Contents/Source/NewProjectWindow.cpp     ../../Contents/Source/PolycodeIDEApp.cpp         ../../Contents/Source/PolycodeProjectManager.cpp ../../Contents/Source/PolycodeToolLauncher.cpp ../../Contents/Source/PolycodeConsole.cpp      ../../Contents/Source/PolycodeImageEditor.cpp    ../../Contents/Source/PolycodeProps.cpp          ../../Contents/Source/TextureBrowser.cpp ../../Contents/Source/PolycodeEditor.cpp       ../../Contents/Source/PolycodeMaterialEditor.cpp ../../Contents/Source/PolycodeRemoteDebugger.cpp ../../Contents/Source/ToolWindows.cpp ../../Contents/Source/PolycodeClipboard.cpp
 
 default:
 	mkdir -p ./Build
 	$(CC) $(CFLAGS) -O2 main.cpp $(SRCS) -o ./Build/Polycode $(LDFLAGS)
 	cp -R ../../Contents/Resources/* Build/
 	cp ../../../Release/Linux/Framework/Core/Assets/default.pak Build/
-	cp ../../../Release/Linux/Framework/Core/Assets/hdr.pak Build/
 	cp -R ../../../Release/Linux/Standalone Build
 debug:
 	mkdir -p ./Build
 	$(CC) $(CFLAGS) -g main.cpp $(SRCS) -o ./Build/Polycode $(LDFLAGS_DEBUG)
 	cp -R ../../Contents/Resources/* Build/
 	cp ../../../Release/Linux/Framework/Core/Assets/default.pak Build/
-	cp ../../../Release/Linux/Framework/Core/Assets/hdr.pak Build/
 	cp -R ../../../Release/Linux/Standalone Build
 
 clean:
diff --git a/IDE/Build/Mac OS X/English.lproj/MainMenu.xib b/IDE/Build/Mac OS X/English.lproj/MainMenu.xib
--- a/IDE/Build/Mac OS X/English.lproj/MainMenu.xib	
+++ b/IDE/Build/Mac OS X/English.lproj/MainMenu.xib	
@@ -1,23 +1,23 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <archive type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="7.10">
 	<data>
-		<int key="IBDocument.SystemTarget">1080</int>
-		<string key="IBDocument.SystemVersion">12D78</string>
-		<string key="IBDocument.InterfaceBuilderVersion">3084</string>
-		<string key="IBDocument.AppKitVersion">1187.37</string>
-		<string key="IBDocument.HIToolboxVersion">626.00</string>
+		<int key="IBDocument.SystemTarget">1060</int>
+		<string key="IBDocument.SystemVersion">11E53</string>
+		<string key="IBDocument.InterfaceBuilderVersion">2182</string>
+		<string key="IBDocument.AppKitVersion">1138.47</string>
+		<string key="IBDocument.HIToolboxVersion">569.00</string>
 		<object class="NSMutableDictionary" key="IBDocument.PluginVersions">
 			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin</string>
-			<string key="NS.object.0">3084</string>
+			<string key="NS.object.0">2182</string>
 		</object>
 		<object class="NSArray" key="IBDocument.IntegratedClassDependencies">
 			<bool key="EncodedWithXMLCoder">YES</bool>
-			<string>NSCustomObject</string>
+			<string>NSOpenGLView</string>
+			<string>NSWindowTemplate</string>
+			<string>NSView</string>
 			<string>NSMenu</string>
 			<string>NSMenuItem</string>
-			<string>NSOpenGLView</string>
-			<string>NSView</string>
-			<string>NSWindowTemplate</string>
+			<string>NSCustomObject</string>
 		</object>
 		<object class="NSArray" key="IBDocument.PluginDependencies">
 			<bool key="EncodedWithXMLCoder">YES</bool>
@@ -521,30 +521,6 @@
 							</object>
 						</object>
 					</object>
-					<object class="NSMenuItem" id="429735361">
-						<reference key="NSMenu" ref="649796088"/>
-						<string key="NSTitle">View</string>
-						<string key="NSKeyEquiv"/>
-						<int key="NSMnemonicLoc">2147483647</int>
-						<reference key="NSOnImage" ref="35465992"/>
-						<reference key="NSMixedImage" ref="502551668"/>
-						<string key="NSAction">submenuAction:</string>
-						<object class="NSMenu" key="NSSubmenu" id="623021514">
-							<string key="NSTitle">View</string>
-							<object class="NSMutableArray" key="NSMenuItems">
-								<bool key="EncodedWithXMLCoder">YES</bool>
-								<object class="NSMenuItem" id="269422455">
-									<reference key="NSMenu" ref="623021514"/>
-									<string key="NSTitle">Toggle Console</string>
-									<string key="NSKeyEquiv">C</string>
-									<int key="NSKeyEquivModMask">1048576</int>
-									<int key="NSMnemonicLoc">2147483647</int>
-									<reference key="NSOnImage" ref="35465992"/>
-									<reference key="NSMixedImage" ref="502551668"/>
-								</object>
-							</object>
-						</object>
-					</object>
 					<object class="NSMenuItem" id="947553395">
 						<reference key="NSMenu" ref="649796088"/>
 						<string key="NSTitle">Project</string>
@@ -680,27 +656,26 @@
 				<string key="NSName">_NSMainMenu</string>
 			</object>
 			<object class="NSWindowTemplate" id="972006081">
-				<int key="NSWindowStyleMask">13</int>
+				<int key="NSWindowStyleMask">15</int>
 				<int key="NSWindowBacking">2</int>
 				<string key="NSWindowRect">{{335, 390}, {800, 600}}</string>
-				<int key="NSWTFlags">1685585920</int>
+				<int key="NSWTFlags">1954021376</int>
 				<string key="NSWindowTitle">Polycode</string>
 				<string key="NSWindowClass">NSWindow</string>
 				<nil key="NSViewClass"/>
 				<nil key="NSUserInterfaceItemIdentifier"/>
 				<string key="NSWindowContentMinSize">{400, 200}</string>
 				<object class="NSView" key="NSWindowView" id="439893737">
-					<reference key="NSNextResponder"/>
+					<nil key="NSNextResponder"/>
 					<int key="NSvFlags">256</int>
 					<object class="NSMutableArray" key="NSSubviews">
 						<bool key="EncodedWithXMLCoder">YES</bool>
 						<object class="NSOpenGLView" id="633009941">
 							<reference key="NSNextResponder" ref="439893737"/>
 							<int key="NSvFlags">1298</int>
+							<object class="NSPSMatrix" key="NSDrawMatrix"/>
 							<string key="NSFrameSize">{800, 600}</string>
 							<reference key="NSSuperview" ref="439893737"/>
-							<reference key="NSWindow"/>
-							<reference key="NSNextKeyView"/>
 							<object class="NSOpenGLPixelFormat" key="NSPixelFormat">
 								<object class="NSMutableData" key="NSPixelAttributes">
 									<bytes key="NS.bytes">AAAAYAAAAAA</bytes>
@@ -709,11 +684,9 @@
 						</object>
 					</object>
 					<string key="NSFrameSize">{800, 600}</string>
-					<reference key="NSSuperview"/>
-					<reference key="NSWindow"/>
 					<reference key="NSNextKeyView" ref="633009941"/>
 				</object>
-				<string key="NSScreenRect">{{0, 0}, {1440, 900}}</string>
+				<string key="NSScreenRect">{{0, 0}, {1680, 1028}}</string>
 				<string key="NSMinSize">{400, 222}</string>
 				<string key="NSMaxSize">{10000000000000, 10000000000000}</string>
 				<int key="NSWindowCollectionBehavior">128</int>
@@ -1163,30 +1136,6 @@
 					</object>
 					<int key="connectionID">594</int>
 				</object>
-				<object class="IBConnectionRecord">
-					<object class="IBOutletConnection" key="connection">
-						<string key="label">sdfsdf</string>
-						<reference key="source" ref="976324537"/>
-						<reference key="destination" ref="269422455"/>
-					</object>
-					<int key="connectionID">613</int>
-				</object>
-				<object class="IBConnectionRecord">
-					<object class="IBActionConnection" key="connection">
-						<string key="label">toggleConsole:</string>
-						<reference key="source" ref="976324537"/>
-						<reference key="destination" ref="269422455"/>
-					</object>
-					<int key="connectionID">614</int>
-				</object>
-				<object class="IBConnectionRecord">
-					<object class="IBActionConnection" key="connection">
-						<string key="label">showSettings:</string>
-						<reference key="source" ref="976324537"/>
-						<reference key="destination" ref="609285721"/>
-					</object>
-					<int key="connectionID">615</int>
-				</object>
 			</object>
 			<object class="IBMutableOrderedSet" key="objectRecords">
 				<object class="NSArray" key="orderedObjects">
@@ -1228,7 +1177,6 @@
 							<reference ref="379814623"/>
 							<reference ref="448692316"/>
 							<reference ref="947553395"/>
-							<reference ref="429735361"/>
 						</object>
 						<reference key="parent" ref="0"/>
 					</object>
@@ -1756,29 +1704,6 @@
 						<reference key="object" ref="317190896"/>
 						<reference key="parent" ref="720053764"/>
 					</object>
-					<object class="IBObjectRecord">
-						<int key="objectID">595</int>
-						<reference key="object" ref="429735361"/>
-						<object class="NSMutableArray" key="children">
-							<bool key="EncodedWithXMLCoder">YES</bool>
-							<reference ref="623021514"/>
-						</object>
-						<reference key="parent" ref="649796088"/>
-					</object>
-					<object class="IBObjectRecord">
-						<int key="objectID">596</int>
-						<reference key="object" ref="623021514"/>
-						<object class="NSMutableArray" key="children">
-							<bool key="EncodedWithXMLCoder">YES</bool>
-							<reference ref="269422455"/>
-						</object>
-						<reference key="parent" ref="429735361"/>
-					</object>
-					<object class="IBObjectRecord">
-						<int key="objectID">597</int>
-						<reference key="object" ref="269422455"/>
-						<reference key="parent" ref="623021514"/>
-					</object>
 				</object>
 			</object>
 			<object class="NSMutableDictionary" key="flattenedProperties">
@@ -1864,9 +1789,6 @@
 					<string>585.IBPluginDependency</string>
 					<string>587.IBPluginDependency</string>
 					<string>588.IBPluginDependency</string>
-					<string>595.IBPluginDependency</string>
-					<string>596.IBPluginDependency</string>
-					<string>597.IBPluginDependency</string>
 					<string>72.IBPluginDependency</string>
 					<string>73.IBPluginDependency</string>
 					<string>75.IBPluginDependency</string>
@@ -1965,9 +1887,6 @@
 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
 					<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
-					<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
 				</object>
 			</object>
 			<object class="NSMutableDictionary" key="unlocalizedProperties">
@@ -1982,79 +1901,12 @@
 				<reference key="dict.values" ref="0"/>
 			</object>
 			<nil key="sourceID"/>
-			<int key="maxID">615</int>
+			<int key="maxID">594</int>
 		</object>
 		<object class="IBClassDescriber" key="IBDocument.Classes">
 			<object class="NSMutableArray" key="referencedPartialClassDescriptions">
 				<bool key="EncodedWithXMLCoder">YES</bool>
 				<object class="IBPartialClassDescription">
-					<string key="className">NSDocument</string>
-					<object class="NSMutableDictionary" key="actions">
-						<bool key="EncodedWithXMLCoder">YES</bool>
-						<object class="NSArray" key="dict.sortedKeys">
-							<bool key="EncodedWithXMLCoder">YES</bool>
-							<string>printDocument:</string>
-							<string>revertDocumentToSaved:</string>
-							<string>runPageLayout:</string>
-							<string>saveDocument:</string>
-							<string>saveDocumentAs:</string>
-							<string>saveDocumentTo:</string>
-						</object>
-						<object class="NSArray" key="dict.values">
-							<bool key="EncodedWithXMLCoder">YES</bool>
-							<string>id</string>
-							<string>id</string>
-							<string>id</string>
-							<string>id</string>
-							<string>id</string>
-							<string>id</string>
-						</object>
-					</object>
-					<object class="NSMutableDictionary" key="actionInfosByName">
-						<bool key="EncodedWithXMLCoder">YES</bool>
-						<object class="NSArray" key="dict.sortedKeys">
-							<bool key="EncodedWithXMLCoder">YES</bool>
-							<string>printDocument:</string>
-							<string>revertDocumentToSaved:</string>
-							<string>runPageLayout:</string>
-							<string>saveDocument:</string>
-							<string>saveDocumentAs:</string>
-							<string>saveDocumentTo:</string>
-						</object>
-						<object class="NSArray" key="dict.values">
-							<bool key="EncodedWithXMLCoder">YES</bool>
-							<object class="IBActionInfo">
-								<string key="name">printDocument:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-							<object class="IBActionInfo">
-								<string key="name">revertDocumentToSaved:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-							<object class="IBActionInfo">
-								<string key="name">runPageLayout:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-							<object class="IBActionInfo">
-								<string key="name">saveDocument:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-							<object class="IBActionInfo">
-								<string key="name">saveDocumentAs:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-							<object class="IBActionInfo">
-								<string key="name">saveDocumentTo:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-						</object>
-					</object>
-					<object class="IBClassDescriptionSource" key="sourceIdentifier">
-						<string key="majorKey">IBProjectSource</string>
-						<string key="minorKey">./Classes/NSDocument.h</string>
-					</object>
-				</object>
-				<object class="IBPartialClassDescription">
 					<string key="className">PolycodeAppDelegate</string>
 					<string key="superclassName">NSObject</string>
 					<object class="NSMutableDictionary" key="actions">
@@ -2077,8 +1929,6 @@
 							<string>runProject:</string>
 							<string>saveFile:</string>
 							<string>showAbout:</string>
-							<string>showSettings:</string>
-							<string>toggleConsole:</string>
 						</object>
 						<object class="NSArray" key="dict.values">
 							<bool key="EncodedWithXMLCoder">YES</bool>
@@ -2098,8 +1948,6 @@
 							<string>id</string>
 							<string>id</string>
 							<string>id</string>
-							<string>id</string>
-							<string>id</string>
 						</object>
 					</object>
 					<object class="NSMutableDictionary" key="actionInfosByName">
@@ -2122,8 +1970,6 @@
 							<string>runProject:</string>
 							<string>saveFile:</string>
 							<string>showAbout:</string>
-							<string>showSettings:</string>
-							<string>toggleConsole:</string>
 						</object>
 						<object class="NSArray" key="dict.values">
 							<bool key="EncodedWithXMLCoder">YES</bool>
@@ -2191,14 +2037,6 @@
 								<string key="name">showAbout:</string>
 								<string key="candidateClassName">id</string>
 							</object>
-							<object class="IBActionInfo">
-								<string key="name">showSettings:</string>
-								<string key="candidateClassName">id</string>
-							</object>
-							<object class="IBActionInfo">
-								<string key="name">toggleConsole:</string>
-								<string key="candidateClassName">id</string>
-							</object>
 						</object>
 					</object>
 					<object class="NSMutableDictionary" key="outlets">
@@ -2257,6 +2095,10 @@
 		</object>
 		<int key="IBDocument.localizationMode">0</int>
 		<string key="IBDocument.TargetRuntimeIdentifier">IBCocoaFramework</string>
+		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencyDefaults">
+			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string>
+			<integer value="1060" key="NS.object.0"/>
+		</object>
 		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDevelopmentDependencies">
 			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.InterfaceBuilder3</string>
 			<integer value="3000" key="NS.object.0"/>
diff --git a/IDE/Build/Mac OS X/Polycode.xcodeproj/project.pbxproj b/IDE/Build/Mac OS X/Polycode.xcodeproj/project.pbxproj
--- a/IDE/Build/Mac OS X/Polycode.xcodeproj/project.pbxproj	
+++ b/IDE/Build/Mac OS X/Polycode.xcodeproj/project.pbxproj	
@@ -11,7 +11,6 @@
 		256AC3DA0F4B6AC300CF3369 /* PolycodeAppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 256AC3D90F4B6AC300CF3369 /* PolycodeAppDelegate.m */; };
 		6D06CCF314BC203800E4CB4C /* libPolycore_d.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6D06CCF214BC203800E4CB4C /* libPolycore_d.a */; };
 		6D06CCF514BC204200E4CB4C /* libPolycodeUI_d.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6D06CCF414BC204200E4CB4C /* libPolycodeUI_d.a */; };
-		6D128ABD174A9940007B0375 /* SettingsWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6D128ABC174A9940007B0375 /* SettingsWindow.cpp */; };
 		6D1CD96B164D9568006CDAB1 /* polycode_project.icns in Resources */ = {isa = PBXBuildFile; fileRef = 6D1CD96A164D9568006CDAB1 /* polycode_project.icns */; };
 		6D2AC99B14B8500400BB63DA /* PolycodeProjectEditor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6D2AC99A14B8500400BB63DA /* PolycodeProjectEditor.cpp */; };
 		6D34143412B816BC0034FA9B /* IOKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 6D34143312B816BC0034FA9B /* IOKit.framework */; };
@@ -82,8 +81,6 @@
 		29B97325FDCFA39411CA2CEA /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = /System/Library/Frameworks/Foundation.framework; sourceTree = "<absolute>"; };
 		6D06CCF214BC203800E4CB4C /* libPolycore_d.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; name = libPolycore_d.a; path = ../../../Release/Darwin/Framework/Core/lib/libPolycore_d.a; sourceTree = "<group>"; };
 		6D06CCF414BC204200E4CB4C /* libPolycodeUI_d.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; name = libPolycodeUI_d.a; path = ../../../Release/Darwin/Framework/Modules/lib/libPolycodeUI_d.a; sourceTree = "<group>"; };
-		6D128ABA174A9936007B0375 /* SettingsWindow.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SettingsWindow.h; sourceTree = "<group>"; };
-		6D128ABC174A9940007B0375 /* SettingsWindow.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SettingsWindow.cpp; sourceTree = "<group>"; };
 		6D1CD96A164D9568006CDAB1 /* polycode_project.icns */ = {isa = PBXFileReference; lastKnownFileType = image.icns; name = polycode_project.icns; path = ../../../Assets/Icons/polycode_project.icns; sourceTree = "<group>"; };
 		6D2AC99A14B8500400BB63DA /* PolycodeProjectEditor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PolycodeProjectEditor.cpp; sourceTree = "<group>"; };
 		6D2AC99D14B8500A00BB63DA /* PolycodeProjectEditor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PolycodeProjectEditor.h; sourceTree = "<group>"; };
@@ -301,7 +298,6 @@
 				6D80E91312AB53FB0037A708 /* PolycodeFrame.h */,
 				6D80E91412AB53FB0037A708 /* PolycodeIDEApp.h */,
 				6D80E91512AB53FB0037A708 /* PolycodeProject.h */,
-				6D128ABA174A9936007B0375 /* SettingsWindow.h */,
 				6D80E91612AB53FB0037A708 /* PolycodeProjectBrowser.h */,
 				6D80E91712AB53FB0037A708 /* PolycodeProjectManager.h */,
 			);
@@ -312,7 +308,6 @@
 		6D80E91812AB53FB0037A708 /* Source */ = {
 			isa = PBXGroup;
 			children = (
-				6D128ABC174A9940007B0375 /* SettingsWindow.cpp */,
 				6D8A845C16F593D000F3BA08 /* PolycodeClipboard.cpp */,
 				6DC67A531656F693004FD1EF /* TextureBrowser.cpp */,
 				6D79732D167F0D4600646407 /* PolycodeSpriteEditor.cpp */,
@@ -455,7 +450,6 @@
 				6D79732E167F0D4600646407 /* PolycodeSpriteEditor.cpp in Sources */,
 				6D797333167F0EB100646407 /* PolycodeProps.cpp in Sources */,
 				6D8A845D16F593D000F3BA08 /* PolycodeClipboard.cpp in Sources */,
-				6D128ABD174A9940007B0375 /* SettingsWindow.cpp in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -503,11 +497,21 @@
 				INSTALL_PATH = "$(HOME)/Applications";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/../../../Core/Build/Mac OS X/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/libpng/projects/xcode/build/Release\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/physfs/Release\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/zlib/projects/xcode/Untitled/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/freetype\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/physfs/XcodeProject/physfs/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/physfs/Debug\"",
+					"\"$(SRCROOT)/../../../Modules/Build/Mac OS X/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/zlib\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/libpng\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/luajit/src\"",
 					"\"$(SRCROOT)/../../../Release/Darwin/Framework/Core/lib\"",
 					"\"$(SRCROOT)/../../../Release/Darwin/Framework/Core/Dependencies/lib\"",
 					"\"$(SRCROOT)/../../../Release/Darwin/Framework/Modules/lib\"",
 				);
-				MACOSX_DEPLOYMENT_TARGET = 10.6;
 				PRODUCT_NAME = Polycode;
 			};
 			name = Debug;
@@ -531,11 +535,21 @@
 				INSTALL_PATH = "$(HOME)/Applications";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/../../../Core/Build/Mac OS X/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/libpng/projects/xcode/build/Release\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/physfs/Release\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/zlib/projects/xcode/Untitled/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/freetype\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/physfs/XcodeProject/physfs/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/physfs/Debug\"",
+					"\"$(SRCROOT)/../../../Modules/Build/Mac OS X/build/Debug\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/zlib\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/libpng\"",
+					"\"$(SRCROOT)/../../../Core/Dependencies/luajit/src\"",
 					"\"$(SRCROOT)/../../../Release/Darwin/Framework/Core/lib\"",
 					"\"$(SRCROOT)/../../../Release/Darwin/Framework/Core/Dependencies/lib\"",
 					"\"$(SRCROOT)/../../../Release/Darwin/Framework/Modules/lib\"",
 				);
-				MACOSX_DEPLOYMENT_TARGET = 10.6;
 				PRODUCT_NAME = Polycode;
 			};
 			name = Release;
@@ -561,7 +575,7 @@
 				);
 				ONLY_ACTIVE_ARCH = YES;
 				PREBINDING = NO;
-				SDKROOT = macosx;
+				SDKROOT = macosx10.6;
 			};
 			name = Debug;
 		};
@@ -585,7 +599,7 @@
 				);
 				ONLY_ACTIVE_ARCH = YES;
 				PREBINDING = NO;
-				SDKROOT = macosx;
+				SDKROOT = macosx10.6;
 			};
 			name = Release;
 		};
diff --git a/IDE/Build/Mac OS X/PolycodeAppDelegate.h b/IDE/Build/Mac OS X/PolycodeAppDelegate.h
--- a/IDE/Build/Mac OS X/PolycodeAppDelegate.h	
+++ b/IDE/Build/Mac OS X/PolycodeAppDelegate.h	
@@ -14,17 +14,21 @@
 
 using namespace Polycode;
 
-@class PolycodeAppDelegate;
-
 class PolycodeAppEventHandler : public EventHandler {
 	
 public:
 	PolycodeAppEventHandler() {}
 	~PolycodeAppEventHandler() {}
 	
-	void handleEvent(Event *evt);
-
-	PolycodeAppDelegate* appDelegate;
+	void handleEvent(Event *evt) {
+		switch(evt->getEventCode()) {
+			case PolycodeIDEApp::EVENT_SHOW_MENU:
+				[appDelegate showProjectMenu];
+			break;
+		}
+	}
+	
+	id appDelegate;
 };
 
 @interface PolycodeAppDelegate : NSObject <NSApplicationDelegate> {
@@ -49,7 +53,6 @@
 
 // Menu accessors
 
--(IBAction) toggleConsole: (id) sender;
 -(IBAction) refreshProject: (id) sender;
 -(IBAction) renameFile: (id) sender;
 -(IBAction) removeFile: (id) sender;
@@ -66,5 +69,4 @@
 -(IBAction) findText: (id) sender;
 -(IBAction) openDocs: (id) sender;
 -(IBAction) showAbout: (id) sender;
--(IBAction) showSettings: (id) sender;
 @end
diff --git a/IDE/Build/Mac OS X/PolycodeAppDelegate.m b/IDE/Build/Mac OS X/PolycodeAppDelegate.m
--- a/IDE/Build/Mac OS X/PolycodeAppDelegate.m	
+++ b/IDE/Build/Mac OS X/PolycodeAppDelegate.m	
@@ -8,14 +8,6 @@
 
 #import "PolycodeAppDelegate.h"
 
-void PolycodeAppEventHandler::handleEvent(Event *evt) {
-	switch(evt->getEventCode()) {
-		case PolycodeIDEApp::EVENT_SHOW_MENU:
-			[appDelegate showProjectMenu];
-			break;
-	}
-}
-
 @implementation PolycodeAppDelegate
 
 @synthesize window;
@@ -50,7 +42,7 @@
 - (void)animationTimer:(NSTimer *)timer
 {
 	if(!app->Update()) {
-		[[NSApplication sharedApplication] terminate:self];
+		[[NSApplication sharedApplication] stop:self];
 	}
 	
 	if(mustShowProjectMenu) {
@@ -78,17 +70,9 @@
 }
 
 - (void)applicationWillTerminate:(NSNotification *)aNotification {
-}
-
-- (NSApplicationTerminateReply)applicationShouldTerminate:(NSApplication *)theApplication
-{
-	bool retVal = app->quitApp();
-	if(retVal) {
-		app->saveConfigFile();
-		app->core->Shutdown();
-		printf("STOPPING\n");
-	}
-	return retVal;
+	NSLog(@"STOPPING\n");
+	app->saveConfigFile();
+	app->core->Shutdown();
 }
 
 - (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)theApplication
@@ -174,12 +158,4 @@
 	app->showAbout();
 }
 
--(IBAction) toggleConsole: (id) sender {
-	app->toggleConsole();
-}
-
--(IBAction) showSettings: (id) sender {
-	app->showSettings();
-}
-
 @end
diff --git a/IDE/Build/Windows/Polycode.vcxproj b/IDE/Build/Windows/Polycode.vcxproj
--- a/IDE/Build/Windows/Polycode.vcxproj
+++ b/IDE/Build/Windows/Polycode.vcxproj
@@ -34,7 +34,6 @@
     <ClCompile Include="..\..\Contents\Source\PolycodeSpriteEditor.cpp" />
     <ClCompile Include="..\..\Contents\Source\PolycodeTextEditor.cpp" />
     <ClCompile Include="..\..\Contents\Source\PolycodeToolLauncher.cpp" />
-    <ClCompile Include="..\..\Contents\Source\SettingsWindow.cpp" />
     <ClCompile Include="..\..\Contents\Source\TextureBrowser.cpp" />
     <ClCompile Include="..\..\Contents\Source\ToolWindows.cpp" />
     <ClCompile Include="main.cpp" />
@@ -64,7 +63,6 @@
     <ClInclude Include="..\..\Contents\Include\PolycodeSpriteEditor.h" />
     <ClInclude Include="..\..\Contents\Include\PolycodeTextEditor.h" />
     <ClInclude Include="..\..\Contents\Include\PolycodeToolLauncher.h" />
-    <ClInclude Include="..\..\Contents\Include\SettingsWindow.h" />
     <ClInclude Include="..\..\Contents\Include\TextureBrowser.h" />
     <ClInclude Include="..\..\Contents\Include\ToolWindows.h" />
   </ItemGroup>
diff --git a/IDE/Build/Windows/Polycode.vcxproj.filters b/IDE/Build/Windows/Polycode.vcxproj.filters
--- a/IDE/Build/Windows/Polycode.vcxproj.filters
+++ b/IDE/Build/Windows/Polycode.vcxproj.filters
@@ -87,9 +87,6 @@
     <ClCompile Include="..\..\Contents\Source\PolycodeClipboard.cpp">
       <Filter>Source</Filter>
     </ClCompile>
-    <ClCompile Include="..\..\Contents\Source\SettingsWindow.cpp">
-      <Filter>Source</Filter>
-    </ClCompile>
   </ItemGroup>
   <ItemGroup>
     <ClInclude Include="..\..\Contents\Include\ExampleBrowserWindow.h">
@@ -170,8 +167,5 @@
     <ClInclude Include="..\..\Contents\Include\PolycodeClipboard.h">
       <Filter>Include</Filter>
     </ClInclude>
-    <ClInclude Include="..\..\Contents\Include\SettingsWindow.h">
-      <Filter>Include</Filter>
-    </ClInclude>
   </ItemGroup>
 </Project>
\ No newline at end of file
diff --git a/IDE/Build/Windows/main.cpp b/IDE/Build/Windows/main.cpp
--- a/IDE/Build/Windows/main.cpp
+++ b/IDE/Build/Windows/main.cpp
@@ -7,7 +7,7 @@
 
 int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
 {
-	PolycodeView *view = new PolycodeView(hInstance, nCmdShow, L"Polycode", true, false);
+	PolycodeView *view = new PolycodeView(hInstance, nCmdShow, L"Polycode", true, true);
 	PolycodeIDEApp *app = new PolycodeIDEApp(view);
 
 	MSG Msg;
diff --git a/IDE/Contents/CMakeLists.txt b/IDE/Contents/CMakeLists.txt
--- a/IDE/Contents/CMakeLists.txt
+++ b/IDE/Contents/CMakeLists.txt
@@ -1,122 +0,0 @@
-CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
-
-PROJECT(PolycodeIDE)
-
-SET(POLYCODE_ROOT_DIR ${PolycodeIDE_SOURCE_DIR}/../../)
-SET(POLYCODE_RELEASE_DIR ${POLYCODE_ROOT_DIR}/Release/${CMAKE_SYSTEM_NAME})
-SET(POLYCODE_CMAKE_DIR ${POLYCODE_ROOT_DIR}/CMake)
-SET(CMAKE_INSTALL_PREFIX ${POLYCODE_RELEASE_DIR}/Standalone/)
-
-SET(CMAKE_PREFIX_PATH
-    ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies
-    ${POLYCODE_RELEASE_DIR}/Framework/Modules/Dependencies
-    ${POLYCODE_RELEASE_DIR}/Framework/Tools/Dependencies)
-
-SET(CMAKE_DEBUG_POSTFIX "_d")
-SET(CMAKE_MODULE_PATH ${POLYCODE_ROOT_DIR}/CMake)
-INCLUDE(${POLYCODE_CMAKE_DIR}/PolycodeDependencies.cmake)
-
-IF(MSVC OR MINGW)
-	SET(MAIN_CPP ../Build/Windows/main.cpp)
-ELSEIF(APPLE)
-		MESSAGE("Target system not currently supported.")
-ELSE(MSVC OR MINGW)
-	SET(MAIN_CPP ../Build/Linux/main.cpp)
-ENDIF(MSVC OR MINGW)
-
-
-SET(PolycodeIDE_SRCS
-		${MAIN_CPP}
-		Source/ExampleBrowserWindow.cpp
-		Source/PolycodeProject.cpp
-		Source/ExportProjectWindow.cpp
-		Source/PolycodeProjectBrowser.cpp
-		Source/NewFileWindow.cpp
-		Source/PolycodeProjectEditor.cpp
-		Source/NewProjectWindow.cpp
-		Source/PolycodeProjectManager.cpp
-		Source/PolycodeClipboard.cpp
-		Source/PolycodeProps.cpp
-		Source/PolycodeConsole.cpp
-		Source/PolycodeRemoteDebugger.cpp
-		Source/PolycodeEditor.cpp
-		Source/PolycodeScreenEditor.cpp
-		Source/PolycodeEditorManager.cpp
-		Source/PolycodeSpriteEditor.cpp
-		Source/PolycodeFontEditor.cpp
-		Source/PolycodeTextEditor.cpp
-		Source/PolycodeFrame.cpp
-		Source/PolycodeToolLauncher.cpp
-		Source/PolycodeIDEApp.cpp
-		Source/SettingsWindow.cpp
-		Source/PolycodeImageEditor.cpp
-		Source/TextureBrowser.cpp
-		Source/PolycodeMaterialEditor.cpp
-		Source/ToolWindows.cpp
-)
-
-SET(PolycodeIDE_HDRS
-		Include/ExampleBrowserWindow.h
-		Include/PolycodeFrame.h
-		Include/PolycodeProps.h
-		Include/ExportProjectWindow.h
-		Include/PolycodeGlobals.h
-		Include/PolycodeRemoteDebugger.h
-		Include/NewFileWindow.h
-		Include/PolycodeIDEApp.h
-		Include/PolycodeScreenEditor.h
-		Include/NewProjectWindow.h
-		Include/PolycodeImageEditor.h
-		Include/PolycodeSpriteEditor.h
-		Include/PolycodeClipboard.h
-		Include/PolycodeMaterialEditor.h
-		Include/PolycodeTextEditor.h
-		Include/PolycodeConsole.h
-		Include/PolycodeProject.h
-		Include/PolycodeToolLauncher.h
-		Include/PolycodeEditor.h
-		Include/PolycodeProjectBrowser.h
-		Include/SettingsWindow.h
-		Include/PolycodeEditorManager.h
-		Include/PolycodeProjectEditor.h
-		Include/TextureBrowser.h
-		Include/PolycodeFontEditor.h
-		Include/PolycodeProjectManager.h
-		Include/ToolWindows.h
-
-)
-
-INSTALL(FILES ${POLYCODE_ROOT_DIR}/LICENSE.txt
-		DESTINATION ./)
-
-# WIN32 makes it build a GUI application on windows(no effect on other platforms)
-ADD_EXECUTABLE(PolycodeIDE WIN32 ${PolycodeIDE_SRCS} ${PolycodeIDE_HDRS})
-
-IF(MSVC OR MINGW)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Core/Dependencies/bin/OpenAL32.dll DESTINATION bin)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Player/default.pak DESTINATION bin)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Player/hdr.pak DESTINATION bin)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Player/api.pak DESTINATION bin)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Player/UI.pak DESTINATION bin)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Player/Physics2D.pak DESTINATION bin)
-	INSTALL(FILES ${POLYCODE_RELEASE_DIR}/Framework/Player/Physics3D.pak DESTINATION bin)
-
-	TARGET_LINK_LIBRARIES(PolycodeIDE
-		${POLYCODE_DEPENDENCY_LIBS}
-     )
-
-ELSEIF(APPLE)
-		MESSAGE("Target system not currently supported.")
-ELSE(MSVC OR MINGW)
-	TARGET_LINK_LIBRARIES(PolycodeIDE
-		${POLYCODE_DEPENDENCY_LIBS}
-	)
-	
-	# Install resources etc. after the build is finished
-	ADD_CUSTOM_COMMAND(TARGET PolycodeIDE POST_BUILD 
-		COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/Resources/ ${CMAKE_BINARY_DIR}
-		COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/../../Release/Linux/Framework/Core/Assets/default.pak ${CMAKE_BINARY_DIR}
-		COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/../../Release/Linux/Standalone ${CMAKE_BINARY_DIR}/Standalone
-	)
-
-ENDIF(MSVC OR MINGW)
diff --git a/IDE/Contents/Include/ExportProjectWindow.h b/IDE/Contents/Include/ExportProjectWindow.h
--- a/IDE/Contents/Include/ExportProjectWindow.h
+++ b/IDE/Contents/Include/ExportProjectWindow.h
@@ -47,6 +47,5 @@
 		
 		UICheckBox *macCheckBox;
 		UICheckBox *winCheckBox;
-		UICheckBox *linCheckBox;
-		UICheckBox *compileCheckBox;
+		UICheckBox *linCheckBox;		
 };
\ No newline at end of file
diff --git a/IDE/Contents/Include/PolycodeConsole.h b/IDE/Contents/Include/PolycodeConsole.h
--- a/IDE/Contents/Include/PolycodeConsole.h
+++ b/IDE/Contents/Include/PolycodeConsole.h
@@ -96,8 +96,7 @@
 		UITextInput *debugTextInput;
 		UITextInput *consoleTextInput;
 		
-		UIImageButton *clearButton;
-		UIImageButton *hideConsoleButton;
+		UIButton *clearButton;
 		
 		ScreenShape *labelBg;
 };
@@ -120,7 +119,6 @@
 		static void clearBacktraces();
 		void _clearBacktraces();
 		
-		
 		void applyTheme();
 		
 		void _addBacktrace(String fileName, int lineNumber, PolycodeProject *project);
@@ -131,19 +129,14 @@
 		
 		BackTraceWindow *backtraceWindow;	
 		ConsoleWindow  *consoleWindow;
-
 	protected:
+	
 		UIHSizer *backtraceSizer;
 	
 		PolycodeRemoteDebugger *debugger;		
 		static PolycodeConsole *instance;
 		
+		
 		UITextInput *debugTextInput;
-		UITextInput *consoleTextInput;
-
-	private:
-		std::vector<String> consoleHistory;
-		int consoleHistoryPosition;
-		int consoleHistoryMaxSize;
-
+		UITextInput *consoleTextInput;		
 };
diff --git a/IDE/Contents/Include/PolycodeEditor.h b/IDE/Contents/Include/PolycodeEditor.h
--- a/IDE/Contents/Include/PolycodeEditor.h
+++ b/IDE/Contents/Include/PolycodeEditor.h
@@ -27,30 +27,8 @@
 #include "PolycodeProject.h"
 #include "PolycodeClipboard.h"
 
-#define MAX_EDITOR_UNDO_ACTIONS	40
-
 using namespace Polycode;
 
-class PolycodeEditorActionData {
-	public:
-		PolycodeEditorActionData(){}
-		virtual ~PolycodeEditorActionData() {}
-};
-
-class PolycodeEditorAction  {
-	public:
-		PolycodeEditorAction(){}
-		~PolycodeEditorAction() {}
-		
-		void deleteData() {
-			delete beforeData;
-			delete afterData;		
-		}
-		
-		String actionName;
-		PolycodeEditorActionData *beforeData;
-		PolycodeEditorActionData *afterData;		
-};
 
 class PolycodeEditor : public ScreenEntity, public ClipboardProvider { 
 public:
@@ -62,11 +40,9 @@
 	
 	virtual void handleEvent(Event *event);
 
-	virtual void Activate() {};	
-	virtual void saveFile(){};
+	virtual void Activate() {};
 	
-	void didAction(String actionName, PolycodeEditorActionData *beforeData, PolycodeEditorActionData *afterData, bool setFileChanged = true);
-	virtual void doAction(String actionName, PolycodeEditorActionData *data) {}
+	virtual void saveFile(){};
 	
 	virtual String Copy(void **data) { return ""; }
 	virtual void Paste(void *data, String clipboardType) {}
@@ -96,9 +72,7 @@
 	Vector2 editorSize;
 	
 	String editorType;
-
-	std::vector<PolycodeEditorAction> editorActions;
-	int currentUndoPosition;
+	
 };
 
 
diff --git a/IDE/Contents/Include/PolycodeEditorManager.h b/IDE/Contents/Include/PolycodeEditorManager.h
--- a/IDE/Contents/Include/PolycodeEditorManager.h
+++ b/IDE/Contents/Include/PolycodeEditorManager.h
@@ -35,8 +35,6 @@
 		PolycodeEditor *getEditorForPath(String path);
 		PolycodeEditor *createEditorForExtension(String extension);
 		void registerEditorFactory(PolycodeEditorFactory *editorFactory);
-		
-		PolycodeEditorFactory *getEditorFactoryForExtension(String extension);
 	
 		void handleEvent(Event *event);
 		
@@ -49,7 +47,6 @@
 		
 		bool hasUnsavedFiles();
 		bool hasUnsavedFilesForProject(PolycodeProject *project);
-		void saveFilesForProject(PolycodeProject *project);
 		
 	//	int close
 	std::vector<PolycodeEditor*> openEditors;
diff --git a/IDE/Contents/Include/PolycodeFrame.h b/IDE/Contents/Include/PolycodeFrame.h
--- a/IDE/Contents/Include/PolycodeFrame.h
+++ b/IDE/Contents/Include/PolycodeFrame.h
@@ -33,7 +33,6 @@
 #include "ToolWindows.h"
 #include "PolycodeProjectManager.h"
 #include "PolycodeEditorManager.h"
-#include "SettingsWindow.h"
 
 using namespace Polycode;
 
@@ -175,10 +174,6 @@
 	
 	void showAssetBrowser(std::vector<String> extensions);
 	
-	void toggleConsole();
-	void showConsole();
-	void hideConsole();
-	
 	void showCurveEditor();
 	
 	PolycodeProjectBrowser *getProjectBrowser();
@@ -187,7 +182,6 @@
 	ExampleBrowserWindow *exampleBrowserWindow;
 	NewFileWindow *newFileWindow;
 	ExportProjectWindow *exportProjectWindow;
-	SettingsWindow *settingsWindow;
 	
 	AssetBrowser *assetBrowser;
 	
@@ -216,22 +210,12 @@
 	
 	UIWindow *aboutWindow;
 	UIButton *aboutOKButton;
-	
-	UIImageButton *closeFileButton;
-	
-	void updateFileSelector();
-	void showNextEditor();
-	void showPreviousEditor();
-	
 private:
 	
 	int frameSizeX;
 	int frameSizeY;
 	
 	bool willHideModal;
-	
-	bool showingConsole;
-	Number consoleSize;
 
 	ScreenShape *fileDialogBlocker;
 
@@ -263,6 +247,4 @@
 	UIButton *newProjectButton;
 	UIButton *examplesButton;
 	
-	bool displayFilePathInSelector;
-
 };
diff --git a/IDE/Contents/Include/PolycodeIDEApp.h b/IDE/Contents/Include/PolycodeIDEApp.h
--- a/IDE/Contents/Include/PolycodeIDEApp.h
+++ b/IDE/Contents/Include/PolycodeIDEApp.h
@@ -87,9 +87,7 @@
 	void findText();
 	void runProject();
 	void doRunProject();
-	void exportProject();
-	void toggleConsole();
-	void showSettings();
+	void exportProject();	
 	
 	void removeEditor(PolycodeEditor *editor);
 	
@@ -99,22 +97,14 @@
 	
 	void refreshProject();	
 	
-	bool quitApp();
-	
 	bool needsRedraw;
 	bool lastConnected;
 	
 	const static int EVENT_SHOW_MENU = 1;
 	
-	Core *core;
-	
-	void saveFiles(std::vector<PolycodeEditor*> editors);
-	void closeFiles(std::vector<PolycodeEditor*> editors, String saveMsg="");
-	bool filesHaveChanges(std::vector<PolycodeEditor*> editors);
-	
+	Core *core;	
 protected:
 
-	bool quittingApp;
 	bool runNextFrame;
 
 	bool willRunProject;
@@ -127,10 +117,4 @@
 
 	UIMenuBar *menuBar;
 	
-private:
-	void doCloseProject();
-	void doCloseFiles(std::vector<PolycodeEditor*> editors);
-	
-	// used in saving/closing files via popup dialog prompts
-	std::vector<PolycodeEditor*> tempEditorStore;
 };
diff --git a/IDE/Contents/Include/PolycodeMaterialEditor.h b/IDE/Contents/Include/PolycodeMaterialEditor.h
--- a/IDE/Contents/Include/PolycodeMaterialEditor.h
+++ b/IDE/Contents/Include/PolycodeMaterialEditor.h
@@ -25,7 +25,6 @@
 #include "PolycodeEditor.h"
 #include <Polycode.h>
 #include "PolycodeUI.h"
-#include "PolycodeProps.h"
 
 using namespace Polycode;
 
@@ -34,74 +33,12 @@
 public:
 	MaterialBrowserData() {
 		material = NULL;
-		shader = NULL;
-		cubemap = NULL;
-		postMaterial = NULL;
 	}
 	Material *material;
-	Material *postMaterial;
-	Shader *shader;
-	Cubemap *cubemap;
 	String name;
 };
 
 
-class MaterialPreviewBox : public UIElement {
-	public:
-		MaterialPreviewBox();
-		~MaterialPreviewBox();
-		void setMaterial(Material *material);		
-		void showPrimitive(unsigned int index);
-		void clearMaterial();
-		
-		void handleEvent(Event *event);
-		
-		Scene *previewScene;
-		SceneLight *mainLight;
-		SceneLight *secondLight;		
-		SceneRenderTexture *renderTexture;
-		ScreenShape *previewShape;
-		
-		std::vector<UIImageButton*> shapeSwitches;
-		std::vector<ScenePrimitive*> shapePrimitives;
-		ScreenImage *shapeSelector;
-		
-		ScreenEntity *previewBase;		
-		ScenePrimitive *previewPrimitive;	
-		Material *currentMaterial;					
-};
-
-class PostPreviewBox : public UIElement {
-	public:
-		PostPreviewBox();
-		~PostPreviewBox();
-		void setMaterial(Material *material);
-		void clearMaterial();		
-		void handleEvent(Event *event);
-		void Resize(Number width, Number height);
-		void Update();	
-			
-		Scene *previewScene;
-		SceneRenderTexture *renderTexture;
-		ScreenShape *previewShape;				
-		ScreenEntity *previewBase;		
-		ScenePrimitive *previewPrimitive;	
-		Material *currentMaterial;	
-		ScreenShape *headerBg;
-				
-		Number spinValue;
-		
-		UICheckBox *rotateCheckBox;
-		UICheckBox *hdrCheckBox;		
-		UITextInput *cameraExposureInput;
-		UITextInput *lightStrength;
-				
-		SceneLight	*mainLight;
-		SceneLight	*secondLight;
-
-};
-
-
 class MaterialBrowser : public UIElement {
 	public:
 		MaterialBrowser();
@@ -109,165 +46,107 @@
 		
 		void Resize(Number width, Number height);
 		
-		UITree *addMaterial(Material *material);
-		UITree *addShader(Shader *shader);
-		UITree *addCubemap(Cubemap *cubemap);
-		UITree *addPostMaterial(Material *material);
-		
-		void removeSelected();
-		
+		UITree * addMaterial(Material *material);
 		void handleEvent(Event *event);
 		
 		MaterialBrowserData *selectedData;
-
-		UIImageButton *newShaderButton;	
+				
 		UIImageButton *newMaterialButton;
-		UIImageButton *newCubemapButton;
-		UIImageButton *newPostButton;
 		
-		UIImageButton *removeButton;
-								
 		UITree *selectedNode;
-														
+												
 	protected:
 	
 		ScreenShape *headerBg;
+	
 		UITree *shadersNode;
 		UITree *materialsNode;
-		UITree *cubemapsNode;
-		UITree *postEffectsNode;
-			
+		UITree *cubemapsNode;			
+	
 		UITreeContainer *treeContainer;	
 };
 
-class CubemapEditorPane : public UIElement {
+class MaterialTextureSlot : public UIElement {
 	public:
-		CubemapEditorPane();
-		~CubemapEditorPane();
-		void Resize(Number width, Number height);
-		void setCubemap(Cubemap *cubemap);
-		void handleEvent(Event *event);
-		Cubemap *currentCubemap;		
+		MaterialTextureSlot(String textureNameString);
+		~MaterialTextureSlot();
 		
-	protected:
-	
-		PropList *propList;
-		ScreenShape *headerBg;
+		ScreenShape *bgShape;
+		ScreenShape *imageShape;
 		
-		TextureProp *yPosTexture;
-		TextureProp *yNegTexture;
-		TextureProp *xPosTexture;
-		TextureProp *xNegTexture;
-		TextureProp *zPosTexture;
-		TextureProp *zNegTexture;
+		ScreenLabel *textureName;
+		ScreenLabel *textureFileName;	
 		
-		StringProp *nameProp;
-		
-		MaterialPreviewBox *cubemapPreview;
+		String textureString;
 };
 
-class PostEditorPane : public UIElement {
+class MaterialPropertySlot : public UIElement {
 	public:
-		PostEditorPane();
-		~PostEditorPane();
-		void Resize(Number width, Number height);
-		void setMaterial(Material *material);
-		void handleEvent(Event *event);
-		Material *currentMaterial;	
-		
-		void adjustPreview();
-		
-		protected:
-		
-		ScreenShape *headerBgBottom;
-
-		PropList *propList;				
-		PropSheet *baseProps;
-		ShaderPassesSheet *passProps;
-		RenderTargetsSheet *targetsProps;
-	
-		PropList *optionsPropList;
-		
-		TargetBindingsSheet *targetBindingProps;
-		ShaderTexturesSheet *shaderTextureSheet;
-		ShaderOptionsSheet *shaderOptionsSheet;			
-			
-		UIVSizer *mainSizer;
-		UIElement *topElement;
-		UIElement *bottomElement;
-						
-		StringProp *nameProp;
-		BoolProp *fp16Prop;
-		
-		PostPreviewBox *postPreview;
-		
-		Screen *previewScreen;
-		
-					
-};
-
-class ShaderEditorPane : public UIElement {
-	public:
-		ShaderEditorPane();
-		~ShaderEditorPane();
-		void Resize(Number width, Number height);
-		void setShader(Shader *shader);
+		MaterialPropertySlot(ShaderBinding *binding, ProgramParam param);
+		~MaterialPropertySlot();
 		
 		void handleEvent(Event *event);
 		
-		void reloadPrograms();
-
-		Shader *currentShader;
-		PolycodeProject *parentProject;
-			
-	protected:
-	
+		ScreenLabel *propertyName;	
 		
-		bool changingShader;
-
-		bool choosingVertexProgram;
-	
-		PropList *propList;
-		ScreenShape *headerBg;
+		ScreenLabel *minLabel;
+		ScreenLabel *maxLabel;
+							
+		UIHSlider *numberSlider;
+		UIColorBox *colorBox;
+					
+		ShaderBinding *binding;		
+		ProgramParam param;
 		
-		ComboProp *vertexProgramProp;
-		ComboProp *fragmentProgramProp;
+		String finalName;
 		
-		StringProp *nameProp;
-		BoolProp *screenShaderProp;
-	
-		
-		NumberProp *areaLightsProp;
-		NumberProp *spotLightsProp;		
 };
 
-class MaterialEditorPane : public UIElement {
+class MaterialEditorPane : public UIWindow {
 	public:
 		MaterialEditorPane();
 		~MaterialEditorPane();
 		
 		void setMaterial(Material *material);
+		
+		void clearAll();
+		
 		void handleEvent(Event *event);
 		
-		void reloadShaders();
-		void Resize(Number width, Number height);	
+		void handleDroppedFile(OSFileEntry file, Number x, Number y);	
 		
-		Material *currentMaterial;			
+		void showPrimitive(unsigned int index);
+		
+		Material *currentMaterial;
+				
 	protected:
 	
-		MaterialPreviewBox *materialPreview;
-		bool changingMaterial;
+	
+		std::vector<MaterialTextureSlot*> textureSlots;
+		std::vector<MaterialPropertySlot*> fragmentPropertySlots;
 	
-		ScreenShape *headerBg;			
+		ScreenEntity *textureSlotBase;
+	
+		ScenePrimitive *previewPrimitive;
 		
-		PropList *propList;
+		UIElement *paramsEntity;
 		
-		StringProp *nameProp;
-		ComboProp *blendModeProp;
-		ComboProp *shaderProp;
+		Scene *previewScene;
+		SceneLight *mainLight;
+		SceneLight *secondLight;		
+		SceneRenderTexture *renderTexture;
+		ScreenShape *previewShape;
 		
-		ShaderTexturesSheet *shaderTextureSheet;
-		ShaderOptionsSheet *shaderOptionsSheet;	
+		UIComboBox *shaderSelector;
+
+		UIComboBox *blendSelector;
+		
+		UITextInput *nameInput;
+		
+		std::vector<UIImageButton*> shapeSwitches;
+		std::vector<ScenePrimitive*> shapePrimitives;
+		ScreenImage *shapeSelector;
+		
 };
 
 class MaterialMainWindow : public UIElement {
@@ -277,11 +156,7 @@
 	
 	void Resize(Number width, Number height);
 	
-	MaterialEditorPane *materialPane;
-	ShaderEditorPane *shaderPane;	
-	CubemapEditorPane *cubemapPane;	
-	PostEditorPane *postPane;	
-		
+	MaterialEditorPane *materialPane;	
 	UIColorPicker *colorPicker;
 };
 
@@ -293,14 +168,15 @@
 	bool openFile(OSFileEntry filePath);
 	void Resize(int x, int y);
 	
+	void handleDroppedFile(OSFileEntry file, Number x, Number y);
 	
 	void handleEvent(Event *event);	
 	void saveFile();
-	void saveMaterials(ObjectEntry *materialsEntry, std::vector<Material*> materials);
 	
 	String createStringValue(unsigned int type, void *value);
 	
 	protected:
+		ScreenImage *grid;	
 		ScreenImage *editorImage;
 		
 		MaterialBrowser *materialBrowser;
@@ -308,10 +184,7 @@
 		
 		MaterialMainWindow *mainWindow;
 		std::vector<Material*> materials;
-		std::vector<Shader*> shaders;
-		std::vector<Cubemap*> cubemaps;
-		std::vector<Material*> postMaterials;
-								
+		
 		UITree *selectedMaterialNode;
 };
 
diff --git a/IDE/Contents/Include/PolycodeProjectManager.h b/IDE/Contents/Include/PolycodeProjectManager.h
--- a/IDE/Contents/Include/PolycodeProjectManager.h
+++ b/IDE/Contents/Include/PolycodeProjectManager.h
@@ -48,7 +48,7 @@
 	
 	PolycodeProject *getProjectByProjectFile(String projectFile);
 	
-	void exportProject(PolycodeProject *project, String exportPath, bool macOS, bool windows, bool linux_, bool compileScripts);
+	void exportProject(PolycodeProject *project, String exportPath, bool macOS, bool windows, bool linux_);
 	
 	int removeProject(PolycodeProject *project);
 	
diff --git a/IDE/Contents/Include/PolycodeProps.h b/IDE/Contents/Include/PolycodeProps.h
--- a/IDE/Contents/Include/PolycodeProps.h
+++ b/IDE/Contents/Include/PolycodeProps.h
@@ -26,29 +26,17 @@
 #include "PolycodeUI.h"
 #include "Polycode.h"
 #include "OSBasics.h"
-#include "PolycodeEditor.h"
 
 using namespace Polycode;
 
-#define PROP_PADDING	40
-
-class PolycodeEditorPropActionData;
 
 class PropProp : public UIElement {
 	public:
-		PropProp(String caption, String type);
+		PropProp(String caption);
 		~PropProp();
-
-		virtual void setPropData(PolycodeEditorPropActionData* data) {}
-		
-		virtual void setPropWidth(Number width) {}
 		
-		String propType;
 		ScreenLabel *label;
-		ScreenEntity *propContents;				
-		
-		bool suppressChangeEvent;		
-		bool settingFromData;
+		ScreenEntity *propContents;
 };
 
 class Vector2Prop : public PropProp {
@@ -58,19 +46,9 @@
 		void handleEvent(Event *event);
 		void set(Vector2 position);
 		Vector2 get();
-		
-		void setPropData(PolycodeEditorPropActionData* data);
-		
-		void setPropWidth(Number width);		
 				
 		UITextInput *positionX;
-		UITextInput *positionY;	
-		
-		Vector2 lastData;
-		Vector2 currentData;	
-		
-		ScreenLabel *labelX;
-		ScreenLabel *labelY;		
+		UITextInput *positionY;						
 };
 
 class SliderProp : public PropProp {
@@ -80,15 +58,9 @@
 		void handleEvent(Event *event);
 		void set(Number number);
 		Number get();
-		
-		void setPropWidth(Number width);		
-		void setPropData(PolycodeEditorPropActionData* data);		
 				
 		UIHSlider *slider;
 		ScreenLabel *valueLabel;
-		
-		Number lastValue;
-		Number currentValue;
 };
 
 
@@ -99,75 +71,10 @@
 		void handleEvent(Event *event);
 		void set(Number number);
 		Number get();
-		
-		void setPropWidth(Number width);
-		
-		void setPropData(PolycodeEditorPropActionData* data);
 				
 		UITextInput *numberEntry;
-		
-		Number lastValue;
-		Number currentValue;
-};
-
-class TargetBindingProp : public PropProp {
-	public:
-
-		TargetBindingProp(Shader *shader, Material *material, ShaderBinding *binding, RenderTargetBinding *targetBinding);
-		~TargetBindingProp();
-
-		void handleEvent(Event *event);	
-		void setPropWidth(Number width);
-						
-		RenderTargetBinding *targetBinding;
-		Material *material;
-		Shader *shader;
-		ShaderBinding *binding;
-		
-		UIComboBox *typeComboBox;
-		UIComboBox *targetComboBox;
-		UIComboBox *textureComboBox;		
-		UIImageButton *removeButton;					
-	
 };
 
-class RenderTargetProp : public PropProp {
-	public:
-		RenderTargetProp(ShaderRenderTarget *renderTarget, Material *material);
-		~RenderTargetProp();
-
-		void handleEvent(Event *event);	
-		void setPropWidth(Number width);
-		
-		void recreateRenderTarget();
-		
-		Material *material;
-		ShaderRenderTarget *renderTarget;
-		
-		UITextInput *nameInput;		
-		UIComboBox *typeComboBox;		
-		UITextInput *widthInput;
-		UITextInput *heightInput;		
-		UIImageButton *removeButton;					
-};
-
-class ShaderPassProp : public PropProp {
-	public:
-		ShaderPassProp(Material *material, int shaderIndex);
-		~ShaderPassProp();
-		
-		void handleEvent(Event *event);	
-		void setPropWidth(Number width);
-		
-		Material *material;
-		Shader *shader;		
-		int shaderIndex;
-		UIComboBox *shaderComboBox;		
-		UIImageButton *removeButton;
-		
-		UIButton *editButton;
-		
-};
 
 class CustomProp : public PropProp {
 	public:
@@ -190,15 +97,8 @@
 		void handleEvent(Event *event);
 		void set(String str);
 		String get();
-
-		void setPropWidth(Number width);
-
-		void setPropData(PolycodeEditorPropActionData* data);
 				
 		UITextInput *stringEntry;
-		
-		String lastValue;
-		String currentValue;
 };
 
 class ColorProp : public PropProp {
@@ -207,13 +107,8 @@
 		~ColorProp();		
 		void handleEvent(Event *event);
 		
-		virtual void setPropData(PolycodeEditorPropActionData* data);
-		
 		void set(Color color);
 		Color get();
-		
-		Color currentColor;
-		Color lastColor;
 				
 		UIColorBox *colorEntry;
 };
@@ -224,17 +119,10 @@
 		~ComboProp();		
 		void handleEvent(Event *event);
 		
-		void setPropData(PolycodeEditorPropActionData* data);
-
-		void setPropWidth(Number width);
-
 		void set(unsigned int index);
 		unsigned int get();
 				
 		UIComboBox *comboEntry;
-		
-		int lastValue;
-		int currentValue;
 };
 
 class BoolProp : public PropProp {
@@ -243,15 +131,10 @@
 		~BoolProp();		
 		void handleEvent(Event *event);
 		
-		void setPropData(PolycodeEditorPropActionData* data);
-		
 		void set(bool val);
 		bool get();
 				
 		UICheckBox *checkEntry;
-		
-		bool lastData;
-		bool currentData;
 };
 
 class SoundProp : public PropProp {
@@ -263,15 +146,10 @@
 		void set(String soundPath);
 		String get();
 		
-		void setPropData(PolycodeEditorPropActionData* data);
-		
 		Sound *previewSound;
 		ScreenLabel *soundFile;		
 		UIButton *changeButton;
-		UIButton *playButton;	
-		
-		String lastData;
-		String currentData;
+		UIButton *playButton;		
 };
 
 class BezierRGBACurveProp : public PropProp {
@@ -305,37 +183,25 @@
 		TextureProp(String caption);
 		~TextureProp();
 		void handleEvent(Event *event);	
-		void setPropWidth(Number width);
-				
+		
 		void set(Texture *texture);
 		Texture* get();
-		
-		void setPropData(PolycodeEditorPropActionData* data);
 				
 		ScreenShape *previewShape;
 		UIButton *changeButton;
-		ScreenLabel *textureLabel;
-		
-		String lastData;
-		String currentData;
 };
 
 class ScreenSpriteProp : public PropProp {
 	public:
 		ScreenSpriteProp(String caption);
 		~ScreenSpriteProp();
-		void handleEvent(Event *event);
-		
-		void setPropData(PolycodeEditorPropActionData* data);
+		void handleEvent(Event *event);			
 		
 		void set(String fileName);
 		String get();		
 				
 		ScreenSprite *previewSprite;
 		UIButton *changeButton;
-		
-		String lastData;
-		String currentData;
 };
 
 
@@ -345,27 +211,20 @@
 		~ScreenEntityInstanceProp();
 		void handleEvent(Event *event);			
 		
-		void setPropData(PolycodeEditorPropActionData* data);
-		
 		void set(String fileName);
 		String get();		
 				
 		ScreenEntityInstance *previewInstance;
 		UIButton *changeButton;
-		
-		String lastData;
-		String currentData;
-		
 };
 
+
 class PropSheet : public UIElement {
 	public:
 		PropSheet(String caption, String type);
 		~PropSheet();		
 		void Resize(Number width, Number height);
 		
-		virtual void applyPropActionData(PolycodeEditorPropActionData *data);
-		
 		void handleEvent(Event *event);
 		
 		void setCollapsed(bool val);
@@ -385,55 +244,14 @@
 		
 		bool collapsed;
 		
-		bool customUndoHandler;
-		
 		std::vector<PropProp*> props;
 };
 
-class ShaderOptionsSheet : public PropSheet {
-	public:
-		ShaderOptionsSheet();
-		~ShaderOptionsSheet();
-		
-		void handleEvent(Event *event);
-		void Update();
-		
-		void clearShader();
-		void setOptionsFromParams(std::vector<ProgramParam> &params);
-		void setShader(Shader *shader, Material *material, ShaderBinding *binding);
-				
-	private:
-		Shader *shader;
-		Material *material;
-		ShaderBinding *binding;
-		
-};
-
-class ShaderTexturesSheet : public PropSheet {
-	public:
-		ShaderTexturesSheet();
-		~ShaderTexturesSheet();
-		
-		void handleEvent(Event *event);
-		void Update();
-		
-		void clearShader();
-		void setShader(Shader *shader, Material *material, ShaderBinding *binding);
-				
-	private:
-		Shader *shader;
-		Material *material;
-		ShaderBinding *binding;
-						
-		std::vector<TextureProp*> textureProps;
-		std::vector<ComboProp*> cubemapProps;		
-};
-
 class EntitySheet : public PropSheet {
 	public:
 		EntitySheet();
-		~EntitySheet();	
-	
+		~EntitySheet();
+		
 		void handleEvent(Event *event);
 		void Update();
 				
@@ -446,76 +264,13 @@
 		ComboProp *blendingProp;
 };
 
-class ShaderPassesSheet : public PropSheet {
-	public:
-		ShaderPassesSheet();
-		~ShaderPassesSheet();
-		void handleEvent(Event *event);			
-		void refreshPasses();
-		
-		void Update();
-		
-		void setMaterial(Material *material);
-
-		ShaderBinding *binding;
-		Material *material;
-
-		ShaderPassProp *selectedProp;
-
-		UIButton *addButton;		
-		int removeIndex;		
-};
-
-class TargetBindingsSheet : public PropSheet {
-	public:
-		TargetBindingsSheet();
-		~TargetBindingsSheet();
-		void handleEvent(Event *event);				
-		void setShader(Shader *shader, Material *material, ShaderBinding *binding);
-		
-		void Update();
-		
-		void refreshTargets();
-		
-		ShaderBinding *binding;
-		Material *material;
-		Shader *shader;
-		int shaderIndex;
-		
-		UIButton *addButton;		
-		RenderTargetBinding *bindingToRemove;
-
-};
-
-class RenderTargetsSheet : public PropSheet {
-	public:
-		RenderTargetsSheet();
-		~RenderTargetsSheet();
-		void Update();
-		void handleEvent(Event *event);		
-		
-		void refreshTargets();
-		
-		ShaderBinding *binding;
-		Material *material;
-		Material *lastMaterial;
-		
-		Number normTextureWidth;
-		Number normTextureHeight;
-		
-		UIButton *addButton;		
-		int removeIndex;
-};
-
 class EntityPropSheet : public PropSheet {
 	public:
 		EntityPropSheet();		
 		void handleEvent(Event *event);
 		void Update();
 		void refreshProps();
-
-		void applyPropActionData(PolycodeEditorPropActionData *data);
-
+				
 		UIButton *addButton;
 		
 		Entity *entity;
@@ -523,7 +278,7 @@
 		
 		int lastNumProps;
 		
-		int removeIndex;		
+		int removeIndex;
 		
 };
 
@@ -560,8 +315,7 @@
 		void handleEvent(Event *event);
 		void Update();
 				
-		ScreenLabel *label;
-		ScreenLabel *lastLabel;	
+		ScreenLabel *label;	
 		
 		int lastSize;
 		String lastFont;
@@ -616,20 +370,6 @@
 		ScreenEntityInstanceProp *instanceProp;
 };
 
-class ScreenEntitySheet : public PropSheet {
-	public:
-		ScreenEntitySheet();
-		~ScreenEntitySheet();
-		
-		void handleEvent(Event *event);
-		void Update();
-		
-		NumberProp *widthProp;
-		NumberProp *heightProp;
-		
-		ScreenEntity *entity;
-		ScreenEntity *lastEntity;
-};
 
 class SoundSheet : public PropSheet {
 	public:
@@ -665,7 +405,6 @@
 
 		TextureProp *textureProp;
 		ComboProp *blendingProp;
-		BoolProp *ignoreParentMatrixProp;
 		NumberProp *numParticlesProp;
 		NumberProp *lifespanProp;
 		NumberProp *particleScaleProp;		
@@ -697,7 +436,6 @@
 		bool lastEnableProp;
 		Number lastPerlinSize;
 		Number lastSpeedMod;
-		bool lastIgnoreParentMatrix;
 		bool lastRotationFollowsPath;
 		bool lastUseScaleCurves;
 		bool lastUseColorCurves;		
@@ -748,53 +486,4 @@
 		std::vector<PropSheet*> props;	
 		ScreenShape *bg;
 		ScreenShape *bg2;				
-};
-
-class PolycodeEditorPropActionData : public PolycodeEditorActionData {
-	public:
-		PolycodeEditorPropActionData(){ entity = NULL; }
-		virtual ~PolycodeEditorPropActionData(){
-			delete entity;
-		}
-		
-		bool boolVal;
-		String stringVal;
-		int intVal;
-		Number numVal;
-		Color colorVal;
-		Vector3 vector3Val;
-		Vector2 vector2Val;
-		
-		Entity *entity;
-		
-		PropSheet *sheet;
-		PropProp *prop;
-};
-
-
-PolycodeEditorPropActionData *PropDataBool(bool val);
-PolycodeEditorPropActionData *PropDataInt(int val);
-PolycodeEditorPropActionData *PropDataNumber(Number val);
-PolycodeEditorPropActionData *PropDataString(String val);
-PolycodeEditorPropActionData *PropDataColor(Color val);
-PolycodeEditorPropActionData *PropDataVector3(Vector3 val);
-PolycodeEditorPropActionData *PropDataVector2(Vector2 val);
-PolycodeEditorPropActionData *PropDataEntity(Entity *entity);
-
-class PropEvent : public Event {
-	public:
-		PropEvent(PropProp *prop, PropSheet *sheet, PolycodeEditorPropActionData *beforeData, PolycodeEditorPropActionData *afterData);
-		virtual ~PropEvent();
-		
-		void setSheet(PropSheet *sheet);
-		
-		PropProp *prop;
-		PropSheet *sheet;
-		
-		PolycodeEditorPropActionData *beforeData;
-		PolycodeEditorPropActionData *afterData;
-				
-		static const int EVENTBASE_PROPEVENT = 0xC00;
-		static const int EVENT_PROP_CHANGE = EVENTBASE_PROPEVENT+0;
-
-};
+};
\ No newline at end of file
diff --git a/IDE/Contents/Include/PolycodeScreenEditor.h b/IDE/Contents/Include/PolycodeScreenEditor.h
--- a/IDE/Contents/Include/PolycodeScreenEditor.h
+++ b/IDE/Contents/Include/PolycodeScreenEditor.h
@@ -49,34 +49,6 @@
 		Entity *entity;
 };
 
-class PolycodeScreenEditorActionDataEntry {
-	public:
-		PolycodeScreenEditorActionDataEntry(){
-			entity = NULL;
-			parentEntity = NULL;
-		}
-		PolycodeScreenEditorActionDataEntry(Vector3 vec3, Number number);	
-		PolycodeScreenEditorActionDataEntry(Vector3 vec3);
-		PolycodeScreenEditorActionDataEntry(Number number);
-		PolycodeScreenEditorActionDataEntry(ScreenEntity *entity);
-		Vector3 vec3;
-		Number number;
-		ScreenEntity *entity;
-		ScreenEntity *parentEntity;		
-};
-
-class PolycodeScreenEditorActionData : public PolycodeEditorActionData {
-	public:
-		PolycodeScreenEditorActionData() {
-			reverse = true;
-		}
-		virtual ~PolycodeScreenEditorActionData(){}
-		
-		std::vector<PolycodeScreenEditorActionDataEntry> entries;
-		PolycodeScreenEditorActionDataEntry entry;
-		bool reverse;
-};
-
 class EntityTreeView : public UIElement {
 	public:
 		EntityTreeView(Entity *rootEntity);
@@ -87,8 +59,6 @@
 		
 		void syncNodeToEntity(UITree *node, Entity *entity);
 		
-		void setRootEntity(ScreenEntity *entity);
-		
 		void Refresh();
 
 		Entity *selectedEntity;
@@ -97,11 +67,10 @@
 		UIImageButton *newLayerButton;
 		UIImageButton *targetLayerButton;
 		
+		Entity *rootEntity;
 						
 	protected:	
 	
-		Entity *rootEntity;
-			
 		bool dontSendSelectionEvent;
 	
 		UITreeContainer *treeContainer;
@@ -137,25 +106,22 @@
 class PolycodeScreenEditorMain : public UIElement {
 	public:
 		
-		PolycodeScreenEditorMain(PolycodeEditor *editor);
+		PolycodeScreenEditorMain();
 		virtual ~PolycodeScreenEditorMain();	
 			
 		void Resize(Number width, Number height);	
 		void syncTransformToSelected();	
 		ScreenEntity *addNewLayer(String layerName);	
 		void updateCursor();		
-		void selectEntity(ScreenEntity *entity, bool doAction = true);
+		void selectEntity(ScreenEntity *entity);		
 		void resetSelectedEntityTransforms();
 		void setMode(int newMode);	
 		void handleEvent(Event *event);	
 		void resizePreviewScreen();		
 		void handleDroppedFile(OSFileEntry file, Number x, Number y);		
 		bool hasSelected(ScreenEntity *entity);
-		
-		void deleteEntity(ScreenEntity *entity);
 	
 		void applyEditorOnly(ScreenEntity *entity);
-		void applyEditorOnlyChildren(ScreenEntity *entity);
 		void applyEditorProperties(ScreenEntity *entity);
 			
 		void processEventForEntity(ScreenEntity *childEntity, InputEvent *inputEvent);
@@ -164,11 +130,6 @@
 		void createSoundRef(ScreenSound *target);
 		void createEntityRef(ScreenEntity *entity);
 		
-		void doAction(String actionName, PolycodeEditorActionData *data);
-		
-		void setRefVisibility(bool val);
-		void setEntityRefVisibility(ScreenEntity *entity, bool val);
-		
 		void getCenterAndSizeForSelected(Vector2 *center, Number *width, Number *height);
 	
 		void handleMouseDown(Vector2 position);
@@ -177,11 +138,6 @@
 		
 		void setGrid(int gridSize);
 		
-		void adjustForSnap(Vector2 *position);
-		
-		void setCurrentLayer(ScreenEntity *newLayer, bool doAction = true);
-		ScreenEntity *getCurrentLayer();
-		
 		String Copy(void **data);
 		void Paste(void *data, String clipboardType);
 		void destroyClipboardData(void *data, String type);
@@ -201,11 +157,13 @@
 																
 		std::vector<ScreenEntity*> layers;
 		
+		ScreenEntity *currentLayer;
+		
 		PropList *entityProps;
 		
 		ScreenEntity *layerBaseEntity;		
 						
-//		ScreenEntity *selectedEntity;
+		ScreenEntity *selectedEntity;
 		std::vector<ScreenEntity*> selectedEntities;		
 		
 		Transform2DSheet *transform2dSheet;
@@ -218,25 +176,17 @@
 		ScreenEntityInstanceSheet *instanceSheet;
 		ScreenSpriteSheet *spriteSheet;
 		ScreenParticleSheet *particleSheet;
-		ScreenEntitySheet *screenEntitySheet;
 		
 		EntityTreeView *treeView;
 		
 		ScreenEntity *objectBaseEntity;		
 		ScreenEntity *placingPreviewEntity;												
 		bool multiSelect;
-		
-		PolycodeEditor *editor;	
-		ScreenEntity *baseEntity;			
 	protected:
 	
-		PolycodeScreenEditorActionData *beforeData;
-		ScreenEntity *currentLayer;	
 	
 		int gridSize;
 		bool gridSnap;
-		
-		bool pixelSnap;
 	
 		ScreenShape *previewShape;
 		ScreenImage *previewImage;
@@ -266,7 +216,6 @@
 		bool rotating;
 		bool panning;
 		bool zooming;
-		bool zoomingMoved;
 		
 		bool parenting;
 		ScreenEntity *parentingChild;
@@ -276,10 +225,7 @@
 		int lastMode;
 		
 		Vector2 basePanPosition;
-		Vector2 zoomBasePosition;
-		Vector2 zoomBaseMousePosition;
-		Vector2 baseScaleScreenPosition;
-				
+		
 		Number baseZoomScale;
 		
 		Number baseRotateAngle;
@@ -300,12 +246,12 @@
 		Vector2 placingAnchor;
 		
 		ScreenShape *screenPreviewShape;
-		ScreenShape *sizePreviewShape;
-				
+		
 		Vector2 dragOffset;
 		bool isDraggingEntity;
 		bool isScalingEntity;
 		
+		ScreenEntity *baseEntity;
 
 		
 		ScreenEntity *screenTransform;
@@ -314,8 +260,7 @@
 
 		ScreenImage *transformScalerY;
 		ScreenImage *transformScalerX;		
-		ScreenImage *transformScalerXY;
-							
+					
 		ScreenImage *centerImage;
 		
 		ScreenEntity *properties;
@@ -330,8 +275,6 @@
 		UICheckBox *pixelSnapBox;
 		UICheckBox *gridSnapBox;
 		
-		UICheckBox *showRefsBox;
-		
 		UITextInput *scaleInput;
 		
 		ScreenEntity *toolPalette;
@@ -392,8 +335,6 @@
 		void saveCurveToObject(ObjectEntry *entry, BezierCurve *curve);
 		void saveEntityToObjectEntry(ScreenEntity *entity, ObjectEntry *entry);
 		void saveFile();
-		
-		void doAction(String actionName, PolycodeEditorActionData *data);
 					
 		void handleDroppedFile(OSFileEntry file, Number x, Number y);
 
diff --git a/IDE/Contents/Include/PolycodeTextEditor.h b/IDE/Contents/Include/PolycodeTextEditor.h
--- a/IDE/Contents/Include/PolycodeTextEditor.h
+++ b/IDE/Contents/Include/PolycodeTextEditor.h
@@ -69,15 +69,9 @@
 			
 		std::vector<SyntaxHighlightToken> parseText(String text);		
 		std::vector<SyntaxHighlightToken> parseLua(String text);	
-		std::vector<SyntaxHighlightToken> parseGLSL(String text);
-			
-		static const int MODE_LUA = 0;
-		static const int MODE_GLSL = 1;
-						
+		
 	protected:
 	
-		int mode;
-	
 		std::vector<char> separators;
 		std::vector<String> keywords;		
 };
@@ -111,12 +105,6 @@
 
 class PolycodeTextEditorFactory : public PolycodeEditorFactory {
 public:
-	PolycodeTextEditorFactory() : PolycodeEditorFactory() {
-		extensions.push_back("lua");
-		extensions.push_back("txt");
-		extensions.push_back("xml");
-		extensions.push_back("vert");
-		extensions.push_back("frag");				
-	}
+	PolycodeTextEditorFactory() : PolycodeEditorFactory() { extensions.push_back("lua"); extensions.push_back("txt"); extensions.push_back("xml");}
 	PolycodeEditor *createEditor() { return new PolycodeTextEditor(); }
 };
diff --git a/IDE/Contents/Include/PolycodeToolLauncher.h b/IDE/Contents/Include/PolycodeToolLauncher.h
--- a/IDE/Contents/Include/PolycodeToolLauncher.h
+++ b/IDE/Contents/Include/PolycodeToolLauncher.h
@@ -34,25 +34,13 @@
 		String polyappPath;
 };
 
-class GenericRunner : public Threaded {
-	public:
-		GenericRunner(String app, String file, String inFolder);
-		
-		void runThread();
-		
-		String app;
-		String file;	
-		String inFolder;	
-};
-
 class PolycodeToolLauncher {
 	public: 
 		PolycodeToolLauncher();
 		~PolycodeToolLauncher();		
 		
-		static void openExternalEditor(String app, String file, String inFolder);
 		static String generateTempPath(PolycodeProject *project);
-		static void buildProject(PolycodeProject *project, String destinationPath, bool compileScripts);
+		static void buildProject(PolycodeProject *project, String destinationPath);
 
 		static void runPolyapp(String polyappPath);
 };
\ No newline at end of file
diff --git a/IDE/Contents/Include/SettingsWindow.h b/IDE/Contents/Include/SettingsWindow.h
deleted file mode 100644
--- a/IDE/Contents/Include/SettingsWindow.h
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- Copyright (C) 2013 by Isak Andersson
- 
- Permission is hereby granted, free of charge, to any person obtaining a copy
- of this software and associated documentation files (the "Software"), to deal
- in the Software without restriction, including without limitation the rights
- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- copies of the Software, and to permit persons to whom the Software is
- furnished to do so, subject to the following conditions:
- 
- The above copyright notice and this permission notice shall be included in
- all copies or substantial portions of the Software.
- 
- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
- THE SOFTWARE.
- */
-
-#pragma once
-
-#include "PolycodeGlobals.h"
-#include "PolycodeUI.h"
-#include "Polycode.h"
-#include "OSBasics.h"
-
-#define SETTINGS_WINDOW_WIDTH 400
-#define SETTINGS_WINDOW_HEIGHT 500
-
-using namespace Polycode;
-
-
-class SettingsWindow : public UIWindow {
-	public:
-		SettingsWindow();
-		~SettingsWindow();
-
-		void handleEvent(Event *event);
-		void updateUI();
-
-		UICheckBox *useExternalTextEditorBox;
-		UITextInput *externalTextEditorCommand;
-		UIButton *browseButton;
-		UIComboBox *syntaxThemeBox;
-
-		UIButton *cancelButton;
-		UIButton *okButton;
-};
diff --git a/IDE/Contents/Include/TextureBrowser.h b/IDE/Contents/Include/TextureBrowser.h
--- a/IDE/Contents/Include/TextureBrowser.h
+++ b/IDE/Contents/Include/TextureBrowser.h
@@ -80,8 +80,7 @@
 		~AssetBrowser();
 	
 		String getSelectedAssetPath();
-		String getFullSelectedAssetPath();
-			
+	
 		void parseFolderIntoTree(UITree *tree, OSFileEntry folder);
 
 		String getTemplatePath();
diff --git a/IDE/Contents/Resources/FileTemplates/2D/2D Entity.entity2d b/IDE/Contents/Resources/FileTemplates/2D/2D Entity.entity2d
index f5b431c6973426b4665ed040a7684e535fa44073..f92985b6578eb7ded41e0548e6b17119c05b0fdd
GIT binary patch
literal 652
zc%03U+fD-^5QfJUYHLp(U%}TfHc_vPjo#F&2A5Gu5H>6|**o7{XMmIk@Wx4)|6`cl
z;b*;iyt@Q|5j?j6(Fq9N#|DfR5Y>Axp$oq2MG^r{eWHXfWp_yDLx&@1z4hU#=zY;u
z(VGdpT6FrsYijLVWpPvVWlW=@ipJB>&i9*?soH)Rs{=Zj=?XZ0I31)V8JDyg5K!W<
zqR0*0D>F99pO})MHqnPI-<(g5K=5~LnYUvQGm`ugw=SAEaCyS%`<nA{#c9P^#d#W>
sVo|HhiYKs-(~4&m&+Gj!GA^>$If=$MwX<<+)qvq|#<^qvn}6Z_7w;ihP5=M^

diff --git a/IDE/Contents/Resources/Images/PostPreview/oranges.png b/IDE/Contents/Resources/Images/PostPreview/oranges.png
deleted file mode 100644
index 8ec488c3de28b83d33ee0019b923115b1e7a081c..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/Images/ScreenEditor/transform_base.png b/IDE/Contents/Resources/Images/ScreenEditor/transform_base.png
index 2a5d42d0ddfaea02e713dd453d7a08954c59268a..2972a57a7a5f94feadd0bcac1a5d0fc56c1dc0e0
GIT binary patch
literal 3927
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
D#E{l6

diff --git a/IDE/Contents/Resources/Images/ScreenEditor/transform_rotator.png b/IDE/Contents/Resources/Images/ScreenEditor/transform_rotator.png
index c2b70a7a5d0a4eaee15d523f89ca2472b1e98006..3a52bc302329c583b6996e4cd010a88de08277fc
GIT binary patch
literal 3217
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

diff --git a/IDE/Contents/Resources/Images/ScreenEditor/transform_scaler.png b/IDE/Contents/Resources/Images/ScreenEditor/transform_scaler.png
index 3c366bfd6f2c72cb173765b8a60c549c256bf575..718fc35602970861349082b7e879d3b32bff3d0c
GIT binary patch
literal 1013
zc$|GxJ#5oJ6gDbCRUxVbEHItifuY2IX&Zd1sao41u5cBl5e*BfV_zDpwa?fW;sgW*
ziGdlZLnjuL1tBpZ(SZ&yupkxD0j6%C3c*$wkl>s);YUiJbU*Lu``*2K_uYfS+@;je
z*&&8uQbt}Y()BbQ`N3m!-g~`$mo8_BUMBOnN*Y#(m}v)B5HLJz2^Ep$G_SuwlMFM!
zx}`EHo0p-DJ<dunT<ir*Vv|#GVA;!vfC^f2eTDtD@sb6uqp%C(reFpts=4`Ah~`^!
zCA+n3%MLqr5lqIACh!okK<usf5sVeKlNZu`66RUZfskc|-7l(a7J!OF1jacbZ3`0u
zm=HNJGnUO}&jU#i1zwPNQA&$hn313$fCFRcX`xevMJ;!57WEXiMo0j8zR_rKjSPpw
zC0>+eImsbOX^KckO`lkC+K)!M88j5xp&Jkv`ylbH3a%4{WxH4Kf?irbI%pGZ7#~{!
zFLDC^7tk~hhk9NQ9g!lc9*&Mm%>eO56ybVk(}$~$B;)|9A+iV#OBk<oyI81Uf}<J^
zfI2@8Ov`rt#P8ru6B>R*EZ;_krm!@^xvm2zR9(<=LPnBuvMB13EL{*)NmR2lW1=pr
zdY7wVyY3;Mbh*wS?pR-LB87c63f&vX$%WVhohw7Pe=TDFTK2h4|5~KJT%H!g|M$?{
z5LHjI?a7upJ>estsy(E#e!lbhC;bwxp-q?Kk6*SoQmeuVee38};oY<Q-z&pc7P*@z
zXJ<d9HrvL)i#7k$XgmLK_v=;owg86{t?n#rt~Y-@)?VGN`_)lA_>cWK7u@=QcMI+H
f_fOW^$IaCv%$-(hedF3AIr)f&KBqmMS-kff+=4-u

diff --git a/IDE/Contents/Resources/Images/clear_buffer_icon.png b/IDE/Contents/Resources/Images/clear_buffer_icon.png
deleted file mode 100644
index 7015749d54702b6a06e8338470d09db87876b983..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/Images/console_hide_button.png b/IDE/Contents/Resources/Images/console_hide_button.png
deleted file mode 100644
index 86e6c96ac582585eb72b7996ef90cc3cc5d937cf..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/Images/cubemap_icon.png b/IDE/Contents/Resources/Images/cubemap_icon.png
index 283586aa14143dd5c9aff5b6c0ed8bdf0e57e0eb..9dea60a1c98186d9dcfcc55386fb313d252a8bf5
GIT binary patch
literal 1174
zc%17D@N?(olHy`uVBq!ia0vp^f<P?7!3HF=7hLlMQj#UE5hcO-X(i=}MX3yqDfvmM
z3ZA)%>8U}fi7AzZCsS=07?_nZLn2Bde0{8v^K<nQL2C3Watjzhz{b9!ATc>RwL~E)
zH9a%WR_Xoj{Yna%DYi=CroINg1<t7%nI2U|slio#A<0$Q$(AWf_I3(36;?n4a#KqZ
z6)JLb@`|l0Y?Z*~S^?Q0VSOb9u#%E&TP292B76fBob!uP6-@OEbdwFt3>3@^^$d+o
z%+1Yp6pRcE4fG9+^bL)44b82LjjRj|6rex}Xj@TAnpKdC8`Lf!&sHg;q@=(~U%$M(
zT(8_%FTW^V-_X+15@d#vkuFe$ZgFK^Nn(X=Ua>OF1ees}<f6=ilFa-(1rR?mDZjMD
zR!Irwh1>$Tv3bSNU;+l1ennz|zM-ChK9WLTU;IjQbK$CsOM+6<@T)EksVqp<4@xc0
zFD*(2MqHXQNOOUeb5UwyNq$jCetr%t6azByOY(~|@(UE4gH08D6O%LZKzy)zUtcTF
zyyB9?yyR3*7h5Huh+bx9ij||AvAK&IFoZ1(jSUT5jV#Qa4V+w!oDCeEo!wk4O<;Om
z@{>z*Q}aq-dQ*UUosA3)9bKGFaOwpm1&Hp{qRg_?6t|-MTm`U~tuk@C#n2VETOfK<
zu($=P*A1s$eV}9X(IOfq1WY|3COp{!Iq-y^ng>knMZjdeX8+W91_nkhPZ!6Kid%O=
zbomb%2)v!v>Ged$*I+Ub{9#eC@15V^;^!9@=AgmXIY+wuNv}!lZhjU0ou!`d_uh+L
zKmALszS9od98YgwwUe{%hHX`9IwG#Pi7B#jpMJ;76&w?bqrNe2>Q}$ndgM*`ldSjB
zb7HzmH*}m?_NDlbql3aD=2V5qCCbJT*AFc4t2`z@<Dl;f*36O*$@LShX0u9OUw)L+
zZpMm-!8}YoXNptWxdJ1P-%PNN*sUW}^l*;NgjAjVB}(O;D?Vv9T24Ir!+B!x68&cf
zwwFKK{<-q#o&P&Jtu8IB6VKlBB+tZO>G1(k$==2X0ZkE4eN4OKGCS|+%*yGT;1Uv}
f@5^*?*Irf$hW8oq$7SQg!6k*KtDnm{r-UW|s*IBu

diff --git a/IDE/Contents/Resources/Images/entity_thumb.png b/IDE/Contents/Resources/Images/entity_thumb.png
deleted file mode 100644
index 543041613cbf513eceba13744438571500a32d45..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/Images/material_icon.png b/IDE/Contents/Resources/Images/material_icon.png
index 09dffa0cd51b65913cefa7829000e348c7fe2160..37b4b314e190e132ce25b6718a40ed833e831f4f
GIT binary patch
literal 1106
zc$|GxOK1~87~V9PYMc53pLiJ8i-%@kX`5!-v`Kdx6Lm{S0=6f+*`2m)yF1(6X_FR(
zRuL3DDC$95Q7@t>ilSabtRSLCp*~O#f){TE1!+Oh*|w=7q%+Lp|M|Xu{`u#d)0wV)
zbu~L{D2l2}r{pYIH+W-hfXprLF77AG4&2#|bEpp&RR>ZD9Tgx*n`%GILRB9dehphG
z%1;~lZrrUL6g6Zrs)u1prcHURwY_Ak+91TB0Q(IqM$bKYMgv2S(T5rpPO&98V5G(!
zm>ciPYvY4jRHxh9Kx;`P0ZfQhP%?)sS1iTo#keBbdv2Bnix4~*qnDEERx&_B4g`%1
z7t**U4m9x$A8v?5BK1Jvc#h=+mKQ>NL<|ce$ARTWlhYi%Pt3~6<+F$tqX#gyMV2iV
zi%c=hAg7<@qtU1rLl8m)5pu^Ytd>HSyQdsMhOXuqHa3t2JX<ZG5geoG@)b;bC9LHx
zmx&aNEvYukGaUO5P*GNgn&t}H#aY<5I@-;T*^tdb7mYX?dAPnk9@!Qp2dWr3d4z__
zRm=<^jNAca11Z-C6jd`U&tAkUikP-stXdjO%Q2dG7{k!TL^2$alYBGjVV>_4nj;d|
z(J4q=LXwhlw4uzEkv3vN3zxb2Uv9J_*OS5$8#=}))RPV}!Qz!gqjD}ym2+9*>Xmbe
zROGTG8TP-2F1v_&yzPo?iLoMlXc4tLMAqM@cFvJ6@iHwZ@}-Z3U%!91`-7j4&Bv)!
zl)4|-=yG7D7PMWjzi0c>XC^n@*m3g>m0H7nsRq(ks&2veKKS;V??ubReD&<;x{d&s
zxKi_AxcXI3{HXuPS_b$Yotj*Cq}D&1+&&+lSqOjwJ=Z4vRqNxE+cHhNpPiTp)MjrU
zpU%z1Tfg)cu2Gpg3u`WoAD(Eq3Z$>qnF~VV{H|M%=i)zqRBaA^pp?{JW6FQo3EI&u
pmupb39(*``^4#sSjnAq0gpZml?$3RCdZ5|+<>}5Y`EEz=@jtYGV9Edh

diff --git a/IDE/Contents/Resources/Images/new_cubemap.png b/IDE/Contents/Resources/Images/new_cubemap.png
index d948a53c6e02ae4806a72c4569f1050aa67bb1ac..6ee6b1f7b974fd2663c589a2b1951e6f4b0cf3e4
GIT binary patch
literal 1387
zc%17D@N?(olHy`uVBq!ia0vp^5<o1%!3HF!Z~fa0q$EpRBT9nv(@M${i&7aJQ}UBi
z6+Ckj(^G>|6H_V+Po~;1Ffc1+hD4M^`1)8S=jZArg4F0$<Q6c1fQ@}cL1J=tYKcNp
zYI<g#t<wA5`;`<jQ*4#OO??e~3!GCkGCit_QiH4fLXxYplPyz}?Clh6Dy)D8<ffJ+
zDpcg=<P}?0*eZd|wF0t1!um=IU?nBlwn`93Mfe6NIOi9oDwygS=q4MO87P<;>KPiF
zn46pHC>R+S8t5As=^Gm98k$=f8(A3`C_sS{(6*wKG^-#NH>h1eo~=?wNlAf~zJ7Um
zxn8-kUVc%!zM-Y1CCCgTBVC{h-Qvo;lEez#ykcdT2`;I{$wiq3C7Jno3Lt)BQhsTP
zt&$SV3%LbwWAlok!2}F2{ffi_eM3D1eI$jxzW9~q=E7AMmjtDz;a6Q8Qdy9yACy|0
zUs{w5jJPyqkmdp_=c3falKi5O{QMkPC<bKYm*f{`<QFJ72b(JRCMIX*f%stczP?tT
zdBr7(dC94sF1AWQ5xvaJ6e~+N7c(bgBNsypLnA{&S0f8^X9Fi!BWD9gXJ<DTOB0x0
zm;B_?+|;}hnBEkGURRuYK}i9kJGCgYEH%ZgC_h&L>}9J=EN(G1u`n`pb1^csFfhUH
z7Kq*y+-`Bk=@xyUWAxD?8YToxJs>7L*#bH6grAxROzlO$WW7sg=}iU(#`~Twjv*Dd
z=1e`S#~dhfeEHnWb~8b*nie&$*UDio6E=Kck~?y0b_J_`LTa-9#urT7j=MB2P7>O3
z#69|I-~XxqQ>%=P=N3+iU$%X3@j2V)f6nKg*remTQNW`?M1noAfLG7alRHCE)j`JR
z@=pei&%ebg7|kE>g!~g$V1DMPe<Ai;x5N7fbFTbhkvLY&+QV|@pJ0mP!R+7}rT>`Z
z8RuMgWbP@wrNQLWsI`M>JI}LJe+B-yo7(=yHzET6r>}a__<F~t@4_)3K5JB`{y6F2
zwYi^5imCmK$1IK-ht#tlHRmjM6pmPPNG$d4w8pz7X3-WF%l;+X9MF0Z_Raqm-_4_2
zPv+b<3eaVmc95l6&%$E*OzY4irp#BXR_NV5+8NBy+_7nEPs6QvB_oghpMJB=SSrLC
zX_zrvj<0poy8}GeZ?D-Jzq<7;@5jWn13kXYlg<Rpo5-in5z4#in^<+SmT=tkuk7DH
zZR$4kh}!9TRcL9%cO&+q-qPu6X{r5=M`}b;CbtIpRm!GY_yo4kE|GsCvE$(7+sqxS
zYuc}OEL*kWX!Wu~nsM7xgVHp;ZDwv+c34sBNGV@k7JJ!2rMdGzTv@f(u;bkKRcrp=
zU!Xeq<bBtT5m%;MPPI1q+ws4I)9&*st^KSL3_%N8Rra6OJPIoQJYD@<);T3K0RSEf
B_yzy~

diff --git a/IDE/Contents/Resources/Images/new_material.png b/IDE/Contents/Resources/Images/new_material.png
index 7c1bb4275dea6b7e6377b41d2eea50047532b518..057b2fa5d18ae7b82e9c1550241b7f7b872011bf
GIT binary patch
literal 1350
zc%17D@N?(olHy`uVBq!ia0vp^Vn8gy!3HEdYt9+~DajJoh?3y^w370~qErUQl>DSr
z1<%~X^wgl##FWaylc_cg49rTIArU1JzCKpT`MG+DAT@dwxdjX$U}IlVkeHmETB4AY
znx2_wtMq>NekFy>6kDZmQ(pt$0_W6>OpmIf)Zi+=kmRcDWXlvKdpiZ23M-%ixv3?I
z3Kh9IdBs*0wn|`gt$=Khu)dN4SV>8?trEmh5xxNm&iO^D3Z{Any2%D+1`1||dWOa(
z=H}))3PuKo2Koj@`i4fjhUQkrMpgy}3Q(W~w5=#5%__*n4QdyVXRDM^Qc_^0uU}qX
zu2*iXmtT~wZ)j<02{OaTNEfI=x41H|B(Xv_uUHvof=g;~a#3bMNoIbY0*IfOlwVq6
ztE2?;LT&-v*t}wBFaZNhzap_f-%!s$A4#FFFMg%Dxp39RB|)ia_*EB&R2HP_2c;J0
zmlh=hBQ8xDq`AP#xhOTUB)=#mKR*W+iUAq<CHch}`2`Bj!KMnniOHFHAU;^VudkJ7
zUU5lcUUI6Zi>(q+L@zTl#mdyg!pP9g+1b#-z{Jqd)yTr!*}%!w$l1Wr+1bs-(gdd0
zB|o_|H#M&WrZ)wl*9E6uP*Q;CPA$qTOHFYr%Fk5*d)X=zw_6->y9J^*1-DzAaO%|u
zIz}HYqG3Y7)B|F|lP!<~Pxz^Mz|>v@OxBC~lr}IhFz)hnaSW-rHD{{7KC`35vGQ$e
zv!?tK?sEC7ttiv!GUrZ=Obx&M;feYW-)MWt$jWrIxN$f-FPgZ><L0{OzVjxYOex>}
zcJiM~H_N_N-miQ<cjc$r`-V@NWM(jJUcmmR!Dt7I|AX6|im4LaFIjkhJBWKUvYovr
z@u2B(#Id9e3~4`V%{|!9d_TZ!!8TRn@sb(MOcG4)52ijYov`(p`T>jZLXKC7$MiNw
zvz&j>YC82}sEZTpv@@MXa;$&P9J{LeDC>|)@$`cZQwk@3)e(BxRaxdX#p+;8NN@Yh
zg)Z^Qe}#OFroFq#CV8z={7u8GnHw`FBz-%ncC$~i*h)epd-|eRTl7RftjT#C{ouGs
zG4GV8i%+Z1_u@Oj!6vQ9?v%~B=7VaW{t4-4m*%Nni~jb)r)TN9)o)ltllC0f>sY<(
zG;<->J4s!Smtx-)mX>cj_4z;FGUiRYnVVxK9*;`vxv#oY|J~Gpz-wDI*BX0%s=2v1
zv+uh{@85l?TkddLBqVKmwdwBq(!4{;>(8nfPk3)XbLO>Wi8Z|6c6KguyW#jlA@S3i
z^pl^i^SrToyE1LYYkQ{ib_#D_%n4t^S9Cb&?`!`CMuvq(Il?C%r(6e>Y@V)uF6*2U
Fng9}F@{Irh

diff --git a/IDE/Contents/Resources/Images/new_screenshader.png b/IDE/Contents/Resources/Images/new_screenshader.png
index dc80552518787f84c5f25217b81adbc0641936a5..2c34d617fc02fb8e6089f6ffd25d40a9d334cea8
GIT binary patch
literal 1288
zc%17D@N?(olHy`uVBq!ia0vp^5<o1>!3HF|Hk`EvQj#UE5hcO-X(i=}MX3yqDfvmM
z3ZA)%>8U}fi7AzZCsS=07?_nZLn2Bde0{8v^K<nQL2C3Watjzhz{b9!ATc>RwL~E)
zH9a%WR_Xoj{Yna%DYi=CroINg1<t7%nI2U|slio#A<0$Q$(AWf_I3(36;?n4a#KqZ
z6)JLb@`|l0Y?Z*~S^?Q0VSOb9u#%E&TP292B76fBob!uP6-@OEbdwFt3>3@^^$d+o
z%+1Yp6pRcE4fG9+^bL)44b82LjjRj|6rex}Xj@TAnpKdC8`Lf!&sHg;q@=(~U%$M(
zT(8_%FTW^V-_X+15@d#vkuFe$ZgFK^Nn(X=Ua>OF1ees}<f6=ilFa-(1rR?mDZjMD
zR!Irwh1>$Tv3bSNU;+l1ennz|zM-ChK9WLTU;IjQbK$CsOM+6<@T)EksVqp<4@xc0
zFD*(2MqHXQNOOUeb5UwyNq$jCetr%t6azByOY(~|@(UE4gH08D6O%LZKzy)zUtcTF
zyyB9?yyR3*7h5Huh+bx9ij}3Ci<y(Lv7w=bp^>4XtC5Advw@SVk+XrLv$LCvr3p;0
zOMY@`Zfaf$Om7N8uMtkYprioNom!MxmYU*Ll%J~r_OewbPPZ7j;dTo|ZwhX=7~s^a
z4|I$^T13NyfT;(>geO}d2cGa#^MI+n2$-x5jh<X*U|_8Aba4!+xV2^KZZBp>k+#i+
zrjsN-HZ2ii;S^$#wq}*)4*cNwW^E0h;?k-53&hHr=2pBkncABm7@~5r>f|cxf9!Qn
zE!NzO6lS-(G1EBxTxptZ@)@^f<%_fQQ;h%H)O_7Ld&70*z@8k@9#zQ<HHjHal?9^8
zzY97K$f*{%_iHC~3U*91zAjR_>Y&n$hvmF`E?&MBpRKT%!|mnXfCmd1Z!n(^<5gLu
zY^BA=vtja~`#e0&qFe1)ra8*W1O&d;S)uc#Idj5gwl^Yoo1C+KUu{@FC9N`GPTjSo
zCmK!pCF?p(HI02I>+HxqpzikVsN@8xm}c&8Wv#EjCkU_kxIo<?>E*iO|JIftuLK8%
z#<@%jpV+l-!lKT&$G1#g8Ju5Uqghnv)f#;5!D+*nGaOa(g`JPTvU26;V>?x2^vhyC
z^JlNRGruoA`@8d^V2`y#1q-j~{0&d0C$MkXce$HmSK{eEGPf73_+Ikcp5uzQmSuh7
pzv^#?EyFdlKm2Q{I=q~Lnc-*164Pbt?{b35CQnyCmvv4FO#lvC#P$FH

diff --git a/IDE/Contents/Resources/Images/new_shader.png b/IDE/Contents/Resources/Images/new_shader.png
index 23e2fc60bfe3a1ad8aa656d81528b3a8738ace98..8e396caf1f9aeff78142e29087b6c9549691a2dc
GIT binary patch
literal 1367
zc%17D@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fk|nMYCBgY=CFO}lsSJ)O`AMk?
zp1FzXsX?iUDV2pMQ*9U+n3Xa^B1$5BeXNr6bM+EIYV;~{3m8Da#=fE;F*!T6L?J0P
zJu}Z%>HY5gN(z}Nwo2iqz6QPp&Z!xh9#uuD!Bu`C$yM3OmMKd1b_zBXRzL%CQ%e#R
zDspr3imfVamB8j&0ofp7eI*63l9Fs&C5WRUd;=7m^NUgyO!W+OlMT!a6wD0u42@09
z&CPWbj0_A7^bL&k4UKdS&8>`$tPBhkpg;*|TTx1yRgjAt)Gi>;Rw<*Tq`*pFzr4I$
zuiRKKzbIYb(9+TpWQLKEE>MMTab;dfVufyAu`<jAm(=3qqRfJl%=|nB5I->~zqG_w
zNeSkK+yc0<dBxCR0tT3VMPh-zp`L+0l0si!{7Q3k;i`*Ef>P7)t1b?yEJ)Q4N-fSW
zElLJPT$(aSbAgp}QEFmIeo;t%ehw@Y12XbU@{2R_3lyA#O%;3-lQZ)`e6V_7Un|eN
z;*!L?<Wx@=TP2`~US?*Bm8pq^k)fN5fuV(giJ_sZk%hUlfs?C|vw@?tvzv>h2~4j`
zesXDUYF-IUZwf-MAx^!ZqyW*KT9jFqn&MWJpQ`}&vQ;Kdw>Z1vb_+yr3Qo5;yW!NU
z4|I$^T13NyfT;(>geO}d2cGa#^MI+n2$-yyzUvz^Ffg9>ba4!+xV2=ew>MLuMBDQh
z8Bt2H9WR^&12f$&C@uOg=<;{F*xFm)gl}C@YKn>s$m;Gm<)QsH?cA5T4_(U-zc_P)
zy}#J{x$XU@bNrv~TIc$jSz3X4%GGUZ7VOIpY-EaZ**%}-a@&dsku^<QL=Tlb)W7h;
zU>#pwm1rG<y4=HS2Lz8+3yJlgI$(OtL&ab2Ju`Q-+|RGo@3nP=e;=IE?!n|!aGk}h
z^{tvybAsfVa)BRg;tKq$9Bsw=r|s(KI%=sVt|ofeZjo+xqh#0fNFU7~auP=Dw-ruj
z&*i?kN6W8l$9`G2=@(lTtvSuHV#cAz58C2fEHfMKOT}zB^jk*RWN}!W-0_GBM(X#o
z;;ebX4bSH%ToDK=IdQG3JNt9W(XDHrOSxA|ziCkU?Rx0MORgKN?`!m$m~ZA~?~r6Z
z{@~`~jP(klk0yAun10-JBp}WDO;5;)$?B0Fr_Xb1G`Q*oJlL(qKDW{G+M&c#lWrwF
zdf0w#kIJD*NsIjp^z}Eq45_@O(p1XjJxgxpW#6^-@r|`&_md9q+TwDfoueZ&r?Gl_
zZo9(j+U-kyZ!i`;ld#>Dx#hw&&YY6$*^Y05g$sM1*K@`<Tfg;Ra3bmd#&||HhW)3v
UcO5J60+o~up00i_>zopr0HHPSn*aa+

diff --git a/IDE/Contents/Resources/Images/screenshader_icon.png b/IDE/Contents/Resources/Images/screenshader_icon.png
index a2604a5c56811f3ab8c16d400d834d19ef38a2f9..0b82f79f32d291dbfc532df76cb0a40a50bb1c19
GIT binary patch
literal 1100
zc$|GxOK1~O6rC7bO26O-w2C}N(2C7`lC&{nW1Gw*ChC-!Ml1;8WahOU+xa;2+DxiQ
zDGGizU35`h1rd=hs`y!1G^mI|yKq-r74ZWuEY+0@(Kl^VMTl?l-o2M|?z`{4bFZem
z4>!~{*AfKLkV*;}d^WjuO*P&}b_JvO*pA}8sK@9-dC7uAR55Z8q%^4?W}u`L&b@&h
z1mPvsY%l5+k8!f0QId<H9L*%$)zRsgk~|0z$iaS9kC01Go{>ORBIL<7kr7QE4yegd
z3-*k5XXVjBIjoSKhd_tJ;RG5)5^%I3-R7JKxssQ|wi~8NumVAY5puPtUNH@L!-AlV
zVtg{w&VY87VgtcYDAWr449n1rpJx3&HpB(|9K(RMMdI5mrH{)9iM6}17a<1_GC7*g
z=kruPKp9p)&4$BaH;3Qv!w8>U(2?Z$bbEI>g8*&WQca{9I&gg{XAGkVNtU0Wnd@nF
zd#z2lVYDNeG)pn`UqDg(KUCA!(KgD!zW<}`Y{7(d2HM83CF76l+wGD~j<=wM3@d9G
zL**`}2MlD`1BMCso;Dy#vZ}lO3SJbslx`zQmtjhXkT^oAs=`GRfsl}3dG-JsVA;6;
zK!|5zaX-&Qc|IY8gJrH@$io`cQJJg!;R+SGt`t_;&{9XBlCTU7tUQ@hE7uaOT+1p~
zsa#8}BA3R+(EogNIfT{Yn(MN~&bsiSj@52qS)YI0bOnz@DJ4X+&b!>~_r;4|Z(-3>
zH@WP&cC~5~*l_2^_=DN!o}uZlhb~MIlc&b0>RUJNw|pXUbu9<I$$edFed$uX{`Oms
zQZw<?^KHlEE21^oJ{~N9Hz&GYNY!)kuFt<pX9MZ?8(%LaEpT~%vAMOl?cT%Vv7L99
ztAggv;^|cB%TSBsd0AHs&h44FzGY%zq0Ots8mGL;nef;=Wac+??cKL{R7~IWPB(7Z
o+<E3^LviZEhr-z0qn{p7BF=6-vTW8~`RLAfD&8&3#LkTW29S<p*Z=?k

diff --git a/IDE/Contents/Resources/Images/shader_icon.png b/IDE/Contents/Resources/Images/shader_icon.png
index 349f7eb8ee5b5606e813b40469b03a779edf89a6..989e93fc456210adb9142937bfd0e008e5e64129
GIT binary patch
literal 1117
zc$|GxUq}=|99{^bB+aCVtcPv2qVo3Nou0RN<#~JNl`D20bU_d9?T&Yw?asD4cB>Up
z6e(sTMm`i-k<df=9%0!(O6;M8h$09BBPB7Sr|O|u^(=yGV0Y&C<NJQ|&2PTxYHZk*
zpI4km5JY~oPK@Ds1^!koTZ;cvLFopb)}crOHNh5?ku5-kRG0*0RF_jA24uDU@F=Jv
zh$WO3PoRWUFDOu_Wfwy`x=FaBYNun$N-IEQ5~MUENX_1RK#`gnr1q6dtYn5kTC3}@
zKvPFUT<K_40xGq02U+C^xPT6jOgj1@!xo$%HCI=_Yd6hM<QxRG2B~>b38|3`Lkp1Q
zH0x2=3YM(kXwK{N`~77k&vGoo@(jm&IKSZK1(qcj28DOC)D|Ho)-LRYqac+=$P^eR
zlgZE-FAc2}!vz8Xw+7F9Fv4TE8%TCMhFy}aAOc&lG!tpiAl+C_!ZsA7sO%ARbFr*p
zFSH3ajB#X>;b@lm3n)qdhwAzw+D0+Z@_)1)Z#MxG12$~46nt?lB`(<%!WNJbwBisR
z%673a4H2}{&?Li6<)kDln&HNCcu5kXhK*!H0Z}nX;S8;5st~9ZD{8#na;}o&IWEFi
z`onBZgb%Z!aJW_s__ACPDs4J2P?oFy;a242x>lHH14}ys)LIMb<lK=3Ew>hLZY}d%
zHMbUDPA-GRF#lY1Hig~eE*EW!gGJ*51H0YAwkCEDM(~q(6%|8q=iRxc>jjV4LjCe`
zbyD3_6zCGE-o9hwrA4D#>Z$EpdY?xROl_KdKG?d4X@6_X+#5dnX1efH&6g7T;QE2i
zt;xYBoo7Om%G!y_-qWd*)hC?EWqY1n+4z2c!|rrmUwX!S^me`P!1Tlg&+5&0S57~>
z_AT-D#ifD$<I8WJ2$iP3ju)RTc%2$a)|Jintb18D^nLj8qit93^CJUyhC=5-f7Op$
zcYV#rxsR0>KUF_H|M}V2!ya~|`|5`3%dj-s{j+)R*0#~HzF%vaiS8b*e@Ews3+{uD
MMjFJSn&wl#0dPWkkpKVy

diff --git a/IDE/Contents/Resources/Images/shader_thumb.png b/IDE/Contents/Resources/Images/shader_thumb.png
deleted file mode 100644
index f6c7784d893e15fc2e6c5bf7e1a6daf6e9902aba..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/Images/sprite_thumb.png b/IDE/Contents/Resources/Images/sprite_thumb.png
deleted file mode 100644
index 61aada79517da6762ee0a1644b49aaab0970efef..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/Resources/MyScreen.entity2d b/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/Resources/MyScreen.entity2d
deleted file mode 100755
index e927e219a63d5225d00ce90616ec54fdf39b1bdb..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/Scripts/Main.lua b/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/Scripts/Main.lua
--- a/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/Scripts/Main.lua	
+++ b/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/Scripts/Main.lua	
@@ -1,11 +1,4 @@
 screen = Screen()
-screen:setNormalizedCoordinates(true, 600)
-
-instance = ScreenEntityInstance("Resources/MyScreen.entity2d")
-screen:addChild(instance)
 
-logo = instance:getScreenEntityById("logo", true)
-
-function Update(elapsed)
-	logo:setRotation(logo:getRotation() + (elapsed * 100.0))
-end
\ No newline at end of file
+image = ScreenImage("Resources/polycode_logo.png")
+screen:addChild(image)
\ No newline at end of file
diff --git a/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/template.polyproject b/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/template.polyproject
--- a/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/template.polyproject	
+++ b/IDE/Contents/Resources/ProjectTemplates/Basic/2D Project/template.polyproject	
@@ -1,8 +1,8 @@
-<?xml version="1.0" ?>
-<PolycodeProject defaultWidth="640" defaultHeight="480" antiAliasingLevel="0" entryPoint="Scripts/Main.lua" textureFiltering="linear" vSync="false" anisotropyLevel="0" frameRate="60">
-    <backgroundColor red="0.25" green="0.25" blue="0.25" />
-    <polyarray:packedItems>
-        <item type="folder" path="Resources" />
-        <item type="folder" path="Scripts" />
-    </polyarray:packedItems>
+<?xml version="1.0" encoding="UTF-8"?>
+<PolycodeProject defaultWidth="640" defaultHeight="480" antiAliasingLevel="0">
+	<backgroundColor red="0.25" green="0.25" blue="0.25" />
+	<entryPoint>Scripts/Main.lua</entryPoint>
+	<packedItems>
+		<item path="Resources" type="folder"/>
+	</packedItems>        	
 </PolycodeProject>
diff --git a/IDE/Contents/Resources/UIThemes/default/textfield.png b/IDE/Contents/Resources/UIThemes/default/textfield.png
index 285f4a1fadc6b3026f97b9b520252f2463fe3969..b64942573f7821a7c8728d4e51696e827aa9b5b2
GIT binary patch
literal 2928
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
Nod`sHm0e)se*j#Q^+o^y

diff --git a/IDE/Contents/Source/ExampleBrowserWindow.cpp b/IDE/Contents/Source/ExampleBrowserWindow.cpp
--- a/IDE/Contents/Source/ExampleBrowserWindow.cpp
+++ b/IDE/Contents/Source/ExampleBrowserWindow.cpp
@@ -31,6 +31,7 @@
 	
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");
 	
 	
 	templateContainer = new UITreeContainer("boxIcon.png", L"Examples", 320, 410-topPadding-padding-padding-40);	
@@ -90,9 +91,7 @@
 void ExampleBrowserWindow::handleEvent(Event *event) {
 	if(event->getEventType() == "UIEvent") {
 		if(event->getEventCode() == UIEvent::CLICK_EVENT) {
-			UITree *node = templateContainer->getRootNode()->getSelectedNode();
-			ExampleTemplateUserData *data = (ExampleTemplateUserData*)node->getUserData();
-			if(event->getDispatcher() == okButton && data->type == 1) {
+			if(event->getDispatcher() == okButton) {
 				dispatchEvent(new UIEvent(), UIEvent::OK_EVENT);						
 			}
 			
diff --git a/IDE/Contents/Source/ExportProjectWindow.cpp b/IDE/Contents/Source/ExportProjectWindow.cpp
--- a/IDE/Contents/Source/ExportProjectWindow.cpp
+++ b/IDE/Contents/Source/ExportProjectWindow.cpp
@@ -21,11 +21,8 @@
  */
  
 #include "ExportProjectWindow.h"
-#include "PolycodeFrame.h"
 
-extern PolycodeFrame *globalFrame;
-
-ExportProjectWindow::ExportProjectWindow() : UIWindow(L"Publish Project", 400, 360) {
+ExportProjectWindow::ExportProjectWindow() : UIWindow(L"Publish Project", 400, 300) {
 
 	closeOnEscape = true;
 
@@ -62,25 +59,17 @@
 	addChild(linCheckBox);
 	linCheckBox->setPosition(padding, 225);
 
-	label = new ScreenLabel("OPTIONS", 22, "section", Label::ANTIALIAS_FULL);
-	addChild(label);
-	label->color.a = 0.4;	
-	label->setPosition(padding, 260);
-
-	compileCheckBox = new UICheckBox("Compile Scripts (experimental)", false);
-	addChild(compileCheckBox);
-	compileCheckBox->setPosition(padding, 295);
 
 	cancelButton = new UIButton(L"Cancel", 100);
 	cancelButton->addEventListener(this, UIEvent::CLICK_EVENT);
 	addChild(cancelButton);
-	cancelButton->setPosition(400-75-padding-100-10, 360-15);
+	cancelButton->setPosition(400-75-padding-100-10, 300-15);
 		
 	
 	okButton = new UIButton(L"Publish", 100);
 	okButton->addEventListener(this, UIEvent::CLICK_EVENT);
 	addChild(okButton);
-	okButton->setPosition(400-75-padding, 360-15);
+	okButton->setPosition(400-75-padding, 300-15);
 	
 	projectLocationInput->setText(CoreServices::getInstance()->getCore()->getUserHomeDirectory()+"/Documents/Polycode");
 	
@@ -100,16 +89,8 @@
 }
 
 void ExportProjectWindow::handleEvent(Event *event) {
+
 	if(event->getEventType() == "UIEvent") {
-		if(event->getEventCode() == UIEvent::OK_EVENT && event->getDispatcher() == globalFrame->fileDialog) {
-			String pathName = globalFrame->fileDialog->getSelection();
-			if(pathName != "")
-				projectLocationInput->setText(pathName);
-
-		}
-		
-		if(enabled) {						
-
 		if(event->getEventCode() == UIEvent::CLICK_EVENT) {
 			if(event->getDispatcher() == okButton) {
 				dispatchEvent(new UIEvent(), UIEvent::OK_EVENT);						
@@ -120,21 +101,14 @@
 			}			
 			
 			if(event->getDispatcher() == locationSelectButton) {
-#ifdef USE_POLYCODEUI_FILE_DIALOGS
-				std::vector<String> exts;
-				globalFrame->showFileBrowser(CoreServices::getInstance()->getCore()->getUserHomeDirectory(),  true, exts, false);
-				globalFrame->fileDialog->addEventListener(this, UIEvent::OK_EVENT);
-#else
 				String pathName = CoreServices::getInstance()->getCore()->openFolderPicker();
 				if(pathName != "")
 					projectLocationInput->setText(pathName);
-#endif
 			}			
 			
 		}
-		
-		}
 	}
 	
+	
 	UIWindow::handleEvent(event);	
 }
diff --git a/IDE/Contents/Source/NewFileWindow.cpp b/IDE/Contents/Source/NewFileWindow.cpp
--- a/IDE/Contents/Source/NewFileWindow.cpp
+++ b/IDE/Contents/Source/NewFileWindow.cpp
@@ -22,15 +22,16 @@
  
 #include "NewFileWindow.h"
 
-NewFileWindow::NewFileWindow() : UIWindow(L"Create New File", 580, 280) {
+NewFileWindow::NewFileWindow() : UIWindow(L"Create New File", 480, 280) {
 	defaultTemplateTree = NULL;
 	
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");
 	
 	closeOnEscape = true;	
 	
-	templateContainer = new UITreeContainer("boxIcon.png", L"File Templates", 250, 300-topPadding-padding-padding);	
+	templateContainer = new UITreeContainer("boxIcon.png", L"File Templates", 200, 300-topPadding-padding-padding);	
 	
 	FileTemplateUserData *data = new FileTemplateUserData();
 	data->type = 0;
@@ -63,9 +64,9 @@
 	label2->setText("NEW FILE NAME (NO EXTENSION)");
 		
 	addChild(label2);
-	label2->setPosition(padding+270, templateContainer->getPosition().y-5);			
+	label2->setPosition(padding+220, templateContainer->getPosition().y-5);			
 	
-	fileNameInput = new UITextInput(false, 550-padding-210-padding-padding, 12);	
+	fileNameInput = new UITextInput(false, 500-padding-210-padding-padding, 12);	
 	addChild(fileNameInput);
 	fileNameInput->setPosition(label2->getPosition().x, label2->getPosition().y+30);
 	
@@ -73,12 +74,12 @@
 	cancelButton = new UIButton(L"Cancel", 100);
 	cancelButton->addEventListener(this, UIEvent::CLICK_EVENT);
 	addChild(cancelButton);
-	cancelButton->setPosition(600-100-padding-100-10, 265);
+	cancelButton->setPosition(500-100-padding-100-10, 265);
 			
 	okButton = new UIButton(L"Create File", 100);
 	okButton->addEventListener(this, UIEvent::CLICK_EVENT);
 	addChild(okButton);
-	okButton->setPosition(600-100-padding, 265);	
+	okButton->setPosition(500-100-padding, 265);	
 }
 
 NewFileWindow::~NewFileWindow() {
@@ -99,8 +100,6 @@
 }
 
 void NewFileWindow::handleEvent(Event *event) {
-
-	if(enabled) {
 	if(event->getEventType() == "UIEvent") {
 		if(event->getEventCode() == UIEvent::CLICK_EVENT) {
 			if(event->getDispatcher() == okButton) {
@@ -112,7 +111,6 @@
 			}									
 		}
 	}
-	}
 	
 	if(event->getEventType() == "UITreeEvent" && event->getEventCode() == UITreeEvent::SELECTED_EVENT) {
 		if(event->getDispatcher() == templateContainer->getRootNode()) {
diff --git a/IDE/Contents/Source/NewProjectWindow.cpp b/IDE/Contents/Source/NewProjectWindow.cpp
--- a/IDE/Contents/Source/NewProjectWindow.cpp
+++ b/IDE/Contents/Source/NewProjectWindow.cpp
@@ -34,6 +34,7 @@
 	
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");
 	
 	
 	templateContainer = new UITreeContainer("boxIcon.png", L"Templates", 200, 300-topPadding-padding-padding);	
@@ -130,8 +131,6 @@
 				projectLocationInput->setText(pathName);
 
 		}
-		
-		if(enabled) {						
 
 		if(event->getEventCode() == UIEvent::CLICK_EVENT) {
 			if(event->getDispatcher() == okButton) {
@@ -155,8 +154,6 @@
 			}			
 			
 		}
-		
-		}
 	}
 	
 	if(event->getEventType() == "UITreeEvent" && event->getEventCode() == UITreeEvent::SELECTED_EVENT) {
diff --git a/IDE/Contents/Source/PolycodeConsole.cpp b/IDE/Contents/Source/PolycodeConsole.cpp
--- a/IDE/Contents/Source/PolycodeConsole.cpp
+++ b/IDE/Contents/Source/PolycodeConsole.cpp
@@ -23,11 +23,9 @@
 #include "PolycodeConsole.h"
 #include "PolycodeRemoteDebugger.h"
 #include "PolycodeTextEditor.h"
-#include "PolycodeFrame.h"
 
 PolycodeConsole* PolycodeConsole::instance = NULL;
 extern SyntaxHighlightTheme *globalSyntaxTheme;
-extern PolycodeFrame *globalFrame;
 
 BackTraceEntry::BackTraceEntry(String fileName, int lineNumber, PolycodeProject *project) : UIElement() {
 
@@ -92,6 +90,7 @@
 
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");		
 
 	labelBg = new ScreenShape(ScreenShape::SHAPE_RECT, 20,30);
 	labelBg->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
@@ -175,20 +174,16 @@
 	ScreenLabel *label = new ScreenLabel("CONSOLE", 18, "section");
 	label->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderFontColor"));
 	addChild(label);
-	label->setPosition(35,3);
+	label->setPosition(5,3);
 
 	debugTextInput = new UITextInput(true, 100, 100);
 	consoleTextInput = new UITextInput(false, 100, 100);
 	addChild(consoleTextInput);	
 	addChild(debugTextInput);	
 	
-	clearButton = new UIImageButton("Images/clear_buffer_icon.png");
+	clearButton = new UIButton("Clear", 50);
 	addChild(clearButton);
 	
-	hideConsoleButton = new UIImageButton("Images/console_hide_button.png");
-	addChild(hideConsoleButton);
-	hideConsoleButton->setPosition(7,5);
-	
 }
 
 void ConsoleWindow::Resize(Number width, Number height) {
@@ -197,7 +192,7 @@
 	debugTextInput->Resize(width, height-25-30);
 	debugTextInput->setPosition(0, 30);
 
-	clearButton->setPosition(width - 22, 6);
+	clearButton->setPosition(width - 60, 4);
 
 	consoleTextInput->Resize(width, 25);
 	consoleTextInput->setPosition(0, height-25);	
@@ -220,17 +215,10 @@
 	debugTextInput = consoleWindow->debugTextInput;
 	consoleTextInput = consoleWindow->consoleTextInput;
 	
-	consoleTextInput->addEventListener(this, Event::COMPLETE_EVENT);
-	CoreServices::getInstance()->getCore()->getInput()->addEventListener(this, InputEvent::EVENT_KEYDOWN);
+	consoleTextInput->addEventListener(this, Event::COMPLETE_EVENT);	
 	consoleTextInput->setColor(0.95, 1.0, 0.647, 1.0);
-
-	consoleHistoryPosition = 0;
-	consoleHistoryMaxSize = 15;
 	
 	consoleWindow->clearButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	consoleWindow->hideConsoleButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	
-	CoreServices::getInstance()->getLogger()->addEventListener(this, Event::NOTIFY_EVENT);
 
 	PolycodeConsole::setInstance(this);
 }
@@ -253,22 +241,14 @@
 }
 
 void PolycodeConsole::handleEvent(Event *event) {
-
-	if(event->getDispatcher() == CoreServices::getInstance()->getLogger()) {
-		if(event->getEventCode() == Event::NOTIFY_EVENT) {
-			LoggerEvent *loggerEvent = (LoggerEvent*)event;
-			_print(loggerEvent->message);
-		}
-	} else if(event->getDispatcher() == consoleWindow->clearButton) {
+	if(event->getDispatcher() == consoleWindow->clearButton) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
 			debugTextInput->setText("");
 		}
-	} else if(event->getDispatcher() == consoleWindow->hideConsoleButton) {
-		globalFrame->hideConsole();
 	}
 
 	if(event->getDispatcher() == consoleTextInput) {
-		if(event->getEventCode() == Event::COMPLETE_EVENT && event->getEventType() == "" && consoleTextInput->getText() != "") {
+		if(event->getEventCode() == Event::COMPLETE_EVENT && event->getEventType() == "") {
 			_print(">"+consoleTextInput->getText()+"\n");
 			if(debugger) {
 				if(!debugger->isConnected()) {
@@ -276,39 +256,11 @@
 				} else {
 					debugger->injectCode(consoleTextInput->getText());
 				}
-			}
-			
-			consoleHistory.push_back(consoleTextInput->getText());
-			if (consoleHistory.size() > consoleHistoryMaxSize) { consoleHistory.erase(consoleHistory.begin()); }
-			consoleHistoryPosition = consoleHistory.size();
+			}	
 			
 			consoleTextInput->setText("");
 		}
 	}
-
-	if (event->getDispatcher() == CoreServices::getInstance()->getCore()->getInput()) {
-		if (consoleTextInput->hasFocus && event->getEventCode() == InputEvent::EVENT_KEYDOWN) {
-			InputEvent *inputEvent = (InputEvent*)event;
-			if (inputEvent->keyCode() == KEY_UP) { 
-				consoleHistoryPosition--;
-				if (consoleHistoryPosition >= 0) {
-					consoleTextInput->setText(consoleHistory.at(consoleHistoryPosition));
-				} else {
-					consoleHistoryPosition = -1;
-					consoleTextInput->setText("");
-				}
-			}
-			if (inputEvent->keyCode() == KEY_DOWN) { 
-				consoleHistoryPosition++;
-				if (consoleHistoryPosition < consoleHistory.size()) {
-					consoleTextInput->setText(consoleHistory.at(consoleHistoryPosition));
-				} else {
-					consoleHistoryPosition = consoleHistory.size();
-					consoleTextInput->setText("");
-				}
-			}
-		}
-	}
 }
 
 void PolycodeConsole::setInstance(PolycodeConsole *newInstance) {
diff --git a/IDE/Contents/Source/PolycodeEditor.cpp b/IDE/Contents/Source/PolycodeEditor.cpp
--- a/IDE/Contents/Source/PolycodeEditor.cpp
+++ b/IDE/Contents/Source/PolycodeEditor.cpp
@@ -49,15 +49,11 @@
 	enableScissor = true;	
 	processInputEvents = true;
 	_hasChanges = false;
-	
-	currentUndoPosition = 0;
-	
+
 	Core *core = CoreServices::getInstance()->getCore();
 	
 	core->addEventListener(this, Core::EVENT_COPY);
 	core->addEventListener(this, Core::EVENT_PASTE);
-	core->addEventListener(this, Core::EVENT_UNDO);	
-	core->addEventListener(this, Core::EVENT_REDO);	
 }
 
 void PolycodeEditor::setHasChanges(bool newVal) {
@@ -68,7 +64,7 @@
 }
 
 void PolycodeEditor::handleEvent(Event *event) {
-	if(event->getDispatcher() == CoreServices::getInstance()->getCore() && enabled) {
+	if(event->getDispatcher() == CoreServices::getInstance()->getCore()) {
 		switch(event->getEventCode()) {
 
 			// Only copypaste of more complex IDE entities is handled here.
@@ -90,63 +86,10 @@
 				}
 			}
 			break;
-			case Core::EVENT_UNDO:
-			{
-				if(editorActions.size() > 0) {
-				doAction(editorActions[currentUndoPosition].actionName, editorActions[currentUndoPosition].beforeData);
-				currentUndoPosition--;
-				if(currentUndoPosition < 0) {
-					currentUndoPosition = 0;
-				}
-				}				
-			}
-			break;
-			case Core::EVENT_REDO:
-			{
-				if(editorActions.size() > 0) {			
-				currentUndoPosition++;
-				if(currentUndoPosition > editorActions.size()-1) {
-					currentUndoPosition = editorActions.size()-1;
-				} else {
-					doAction(editorActions[currentUndoPosition].actionName, editorActions[currentUndoPosition].afterData);
-				}
-				}
-			}
-			break;			
 		}
 	}
 }
 
-void PolycodeEditor::didAction(String actionName, PolycodeEditorActionData *beforeData, PolycodeEditorActionData *afterData, bool setFileChanged) {
-
-//	printf("DID ACTION: %s\n", actionName.c_str());
-	
-	if(setFileChanged) {
-		setHasChanges(true);
-	}
-	
-	// if the undo position is not at the end, remove the states after it
-	if(currentUndoPosition < editorActions.size()-1 && editorActions.size() > 0) {
-		for(int i=currentUndoPosition+1; i < editorActions.size(); i++) {
-			editorActions[i].deleteData();		
-		}
-		editorActions.erase(editorActions.begin()+currentUndoPosition+1, editorActions.end());
-	}
-
-	PolycodeEditorAction newAction;
-	newAction.actionName = actionName;
-	newAction.beforeData = beforeData;
-	newAction.afterData = afterData;	
-	editorActions.push_back(newAction);
-	
-	if(editorActions.size() > MAX_EDITOR_UNDO_ACTIONS) {
-		editorActions[0].deleteData();
-		editorActions.erase(editorActions.begin());
-	}
-	
-	currentUndoPosition = editorActions.size()-1;	
-}
-
 void PolycodeEditor::Resize(int x, int y) {
 	editorSize = Vector2(x,y);
 	Vector2 pos = getScreenPosition();
@@ -154,8 +97,7 @@
 }
 
 PolycodeEditor::~PolycodeEditor() {
-	Core *core = CoreServices::getInstance()->getCore();
-	core->removeAllHandlersForListener(this);
+	
 }
 
 
diff --git a/IDE/Contents/Source/PolycodeEditorManager.cpp b/IDE/Contents/Source/PolycodeEditorManager.cpp
--- a/IDE/Contents/Source/PolycodeEditorManager.cpp
+++ b/IDE/Contents/Source/PolycodeEditorManager.cpp
@@ -31,16 +31,6 @@
 	
 }
 
-PolycodeEditorFactory *PolycodeEditorManager::getEditorFactoryForExtension(String extension) {
-	for(int i=0;i < editorFactories.size(); i++) {
-		PolycodeEditorFactory *factory = editorFactories[i];
-		if(factory->canHandleExtension(extension)) {
-			return factory;
-		}
-	}
-	return NULL;
-}
-
 PolycodeEditor *PolycodeEditorManager::createEditorForExtension(String extension) {
 	for(int i=0;i < editorFactories.size(); i++) {
 		PolycodeEditorFactory *factory = editorFactories[i];
@@ -81,13 +71,6 @@
 	}
 }
 
-void PolycodeEditorManager::saveFilesForProject(PolycodeProject *project) {
-	for(int i=0; i < openEditors.size(); i++) {
-		if(openEditors[i]->hasChanges() && openEditors[i]->parentProject == project)
-			openEditors[i]->saveFile();
-	}
-}
-
 bool PolycodeEditorManager::hasUnsavedFilesForProject(PolycodeProject *project) {
 	for(int i=0; i < openEditors.size();i++) {
 		PolycodeEditor *editor = openEditors[i];
diff --git a/IDE/Contents/Source/PolycodeFrame.cpp b/IDE/Contents/Source/PolycodeFrame.cpp
--- a/IDE/Contents/Source/PolycodeFrame.cpp
+++ b/IDE/Contents/Source/PolycodeFrame.cpp
@@ -499,7 +499,7 @@
 	globalFrame = this;
 	processInputEvents = true;
 	willHideModal = false;
-	showingConsole = true;
+
 	modalChild = NULL;
 	
 	welcomeEntity = new ScreenEntity();
@@ -524,8 +524,6 @@
 	mainSizer->setPosition(0, 45);
 	addChild(mainSizer);
 
-	consoleSize = 200;
-
 	consoleSizer = new UIVSizer(100,100,200, false);
 	mainSizer->addRightChild(consoleSizer);	
 				
@@ -564,12 +562,11 @@
 	currentProjectTitle->color.a = 0.4;
 	currentProjectTitle->setPosition(70, 0);
 
-	currentFileSelector = new UIComboBox(globalMenu, 350);
+	currentFileSelector = new UIComboBox(globalMenu, 300);
 	currentFileSelector->addEventListener(this, UIEvent::CHANGE_EVENT);
+	
 	addChild(currentFileSelector);
 
-	closeFileButton = new UIImageButton("Images/remove_icon.png");
-	addChild(closeFileButton);
 	
 	resizer = new ScreenImage("Images/corner_resize.png");	
 	addChild(resizer);
@@ -591,9 +588,6 @@
 	
 	exampleBrowserWindow = new ExampleBrowserWindow();
 	exampleBrowserWindow->visible = false;
-
-	settingsWindow = new SettingsWindow();
-	settingsWindow->visible = false;
 	
 	newFileWindow = new NewFileWindow();
 	newFileWindow->visible = false;
@@ -639,7 +633,6 @@
 		
 	CoreServices::getInstance()->getCore()->getInput()->addEventListener(this, InputEvent::EVENT_MOUSEUP);
 	CoreServices::getInstance()->getCore()->getInput()->addEventListener(this, InputEvent::EVENT_MOUSEMOVE);
-	CoreServices::getInstance()->getCore()->getInput()->addEventListener(this, InputEvent::EVENT_KEYDOWN);
 	
 	curveEditor = new CurveEditor();
 	addChild(curveEditor);
@@ -668,8 +661,6 @@
 	addChild(fileBrowserRoot);
 
 	fileDialog = NULL;
-	
-	displayFilePathInSelector = false;
 }
 
 void PolycodeFrame::showFileBrowser(String baseDir, bool foldersOnly, std::vector<String> extensions, bool allowMultiple) {
@@ -752,30 +743,6 @@
 	modalBlocker->enabled = false;		
 }
 
-void PolycodeFrame::showConsole() {
-	if(!showingConsole)
-		toggleConsole();
-}
-
-void PolycodeFrame::hideConsole() {
-	if(showingConsole)
-		toggleConsole();
-}
-
-void PolycodeFrame::toggleConsole() {
-	if(showingConsole) {
-		consoleSize = consoleSizer->getMainHeight();
-		consoleSizer->setMainHeight(0);
-		console->visible = false;
-		console->enabled = false;
-	} else {
-		consoleSizer->setMainHeight(consoleSize);	
-		console->visible = true;
-		console->enabled = true;		
-	}
-	showingConsole = !showingConsole;
-}
-
 void PolycodeFrame::Update() {
 	if(willHideModal) {
 		hideModal();
@@ -800,15 +767,27 @@
 		showEditor(editor);
 	}
 	
-	if(event->getDispatcher() == editorManager) {
-		updateFileSelector();
+	if(event->getDispatcher() == editorManager) {	
+		currentFileSelector->clearItems();
+		
+		for(int i=0; i < editorManager->openEditors.size(); i++) {
+			OSFileEntry entry(editorManager->openEditors[i]->getFilePath(), OSFileEntry::TYPE_FILE);
+			
+			if(editorManager->openEditors[i]->hasChanges()) {
+				currentFileSelector->addComboItem("* " +entry.name);			
+			} else {
+				currentFileSelector->addComboItem(entry.name);
+			}
+			
+			if(editorManager->getCurrentEditor() == editorManager->openEditors[i]) {
+				currentFileSelector->setSelectedIndex(i);
+			}			
+		}
 	}
 	
 	if(event->getDispatcher() == projectManager) {
         if(projectManager->getActiveProject()) {
             currentProjectTitle->setText(projectManager->getActiveProject()->getProjectName());
-        } else {
-        	if (projectManager->getProjectCount() == 0) { currentProjectTitle->setText(""); }
         }
 	}
 	
@@ -840,32 +819,7 @@
 				if(isDragging) {
 					dragEntity->setPosition(((InputEvent*)event)->mousePosition);
 				}
-			break;
-			// TODO: add in key combos to switch editors in reverse order
-			case InputEvent::EVENT_KEYDOWN:
-				CoreInput *input = CoreServices::getInstance()->getCore()->getInput();
-				
-				if (input->getKeyState(KEY_LSUPER) || input->getKeyState(KEY_RSUPER)) {
-					InputEvent *inEv = (InputEvent*)event;
-					// commenting this out for now until issue with KEY_BACKQUOTE is figured out
-					/*if (inEv->getKey() == KEY_BACKQUOTE) {
-						showNextEditor();
-					}*/
-					if (inEv->getKey() == KEY_SLASH) {
-						displayFilePathInSelector = (displayFilePathInSelector ? false : true);
-						updateFileSelector();
-					}
-				} else if (input->getKeyState(KEY_LCTRL) || input->getKeyState(KEY_RCTRL)) {
-					InputEvent *inEv = (InputEvent*)event;
-					if (inEv->getKey() == KEY_TAB) {
-						showNextEditor();
-					} else if (inEv->getKey() == KEY_SLASH) {
-						displayFilePathInSelector = (displayFilePathInSelector ? false : true);
-						updateFileSelector();
-					}
-				}
-			break;
-				
+			break;	
 		}
 	}
 
@@ -923,8 +877,8 @@
 	modalBlocker->setShapeSize(x, y);
 	fileDialogBlocker->setShapeSize(x, y);
 		
-	currentFileSelector->setPosition(x-400, 11);
-	closeFileButton->setPosition(currentFileSelector->getPosition().x-20, currentFileSelector->getPosition().y+6);
+	currentFileSelector->setPosition(x-350, 11);
+	
 	
 	if(this->modalChild) {
 		modalChild->setPosition((x-modalChild->getWidth())/2.0f, (y-modalChild->getHeight())/2.0f);
@@ -935,47 +889,3 @@
 	
 }
 
-void PolycodeFrame::showNextEditor() {
-	if (currentFileSelector->getSelectedIndex() == currentFileSelector->getNumItems()-1)
-		currentFileSelector->setSelectedIndex(0);
-	else
-		currentFileSelector->setSelectedIndex(currentFileSelector->getSelectedIndex()+1);
-}
-void PolycodeFrame::showPreviousEditor() {
-	if (currentFileSelector->getSelectedIndex() == 0)
-		currentFileSelector->setSelectedIndex(currentFileSelector->getNumItems()-1);
-	else
-		currentFileSelector->setSelectedIndex(currentFileSelector->getSelectedIndex()-1);
-}
-
-void PolycodeFrame::updateFileSelector() {
-	currentFileSelector->clearItems();
-	
-	for(int i=0; i < editorManager->openEditors.size(); i++) {
-		OSFileEntry entry(editorManager->openEditors[i]->getFilePath(), OSFileEntry::TYPE_FILE);
-		
-		String projName = editorManager->openEditors[i]->parentProject->getProjectName();
-		String rootFolder = editorManager->openEditors[i]->parentProject->getRootFolder();
-		String filePath = editorManager->openEditors[i]->getFilePath();
-		
-		String fullEntry = filePath;
-		if(filePath.find(rootFolder) != -1) {
-			fullEntry = projName + filePath.substr(rootFolder.size(), filePath.size()-1);
-		}
-		if(editorManager->openEditors[i]->hasChanges()) {
-			if (displayFilePathInSelector)
-				currentFileSelector->addComboItem("* "+fullEntry);
-			else
-				currentFileSelector->addComboItem("* "+entry.name);
-		} else {
-			if (displayFilePathInSelector)
-				currentFileSelector->addComboItem(fullEntry);
-			else
-				currentFileSelector->addComboItem(entry.name);
-		}
-		
-		if(editorManager->getCurrentEditor() == editorManager->openEditors[i]) {
-			currentFileSelector->setSelectedIndex(i);
-		}
-	}
-}
diff --git a/IDE/Contents/Source/PolycodeIDEApp.cpp b/IDE/Contents/Source/PolycodeIDEApp.cpp
--- a/IDE/Contents/Source/PolycodeIDEApp.cpp
+++ b/IDE/Contents/Source/PolycodeIDEApp.cpp
@@ -31,11 +31,9 @@
 
 
 PolycodeIDEApp::PolycodeIDEApp(PolycodeView *view) : EventDispatcher() {
-	core = new POLYCODE_CORE(view, 1100, 700,false,true, 0, 0,30, -1);	
+	core = new POLYCODE_CORE(view, 900,700,false,true, 0, 0,30, -1);	
 //	core->pauseOnLoseFocus = true;
 	
-	CoreServices::getInstance()->getResourceManager()->reloadResourcesOnModify = true;
-	
 	runNextFrame = false;
 	
 	core->addEventListener(this, Core::EVENT_CORE_RESIZE);
@@ -50,7 +48,7 @@
 	CoreServices::getInstance()->getResourceManager()->addDirResource("default");	
 
 	CoreServices::getInstance()->getResourceManager()->addArchive("hdr.pak");
-	CoreServices::getInstance()->getResourceManager()->addDirResource("hdr");
+	CoreServices::getInstance()->getResourceManager()->addDirResource("hdr");	
 
 
 	CoreServices::getInstance()->getResourceManager()->addArchive("api.pak");
@@ -101,8 +99,6 @@
 	frame->exportProjectWindow->addEventListener(this, UIEvent::OK_EVENT);
 	frame->newFileWindow->addEventListener(this, UIEvent::OK_EVENT);	
 	frame->exampleBrowserWindow->addEventListener(this, UIEvent::OK_EVENT);
-	frame->settingsWindow->addEventListener(this, UIEvent::OK_EVENT);
-	frame->settingsWindow->addEventListener(this, UIEvent::CLOSE_EVENT);
 	
 	frame->playButton->addEventListener(this, UIEvent::CLICK_EVENT);
 	frame->stopButton->addEventListener(this, UIEvent::CLICK_EVENT);
@@ -149,7 +145,6 @@
 	fileEntry->addItem("New Folder", "new_folder", KEY_LSHIFT, KEY_f);
 	fileEntry->addItem("Open Project", "open_project", KEY_LSHIFT, KEY_o);
 	fileEntry->addItem("Close Project", "close_project", KEY_LSHIFT, KEY_w);
-	fileEntry->addItem("Close File", "close_file", KEY_w);
 	fileEntry->addItem("Remove File", "remove_file");
 	fileEntry->addItem("Refresh Project", "refresh_project");
 	fileEntry->addItem("Save File", "save_file", KEY_s);
@@ -161,10 +156,6 @@
 	editEntry->addItem("Redo", "redo");
 	editEntry->addItem("Cut", "cut");
 	editEntry->addItem("Copy", "copy");
-	editEntry->addItem("Settings", "settings");
-
-	UIMenuBarEntry *viewEntry = menuBar->addMenuBarEntry("View");
-	viewEntry->addItem("Toggle Console", "toggle_console", KEY_LSHIFT, KEY_c);
 
 	UIMenuBarEntry *projectEntry = menuBar->addMenuBarEntry("Project");
 	projectEntry->addItem("Run Project", "run_project", KEY_r);
@@ -186,12 +177,6 @@
 
 	needsRedraw = false;
 	lastConnected = false;
-	
-	frame->closeFileButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	
-	quittingApp = false;
-	
-	CoreServices::getInstance()->getCore()->getInput()->addEventListener(this, InputEvent::EVENT_KEYDOWN);
 }
 
 void PolycodeIDEApp::renameFile() {
@@ -207,33 +192,12 @@
 	frame->showModal(frame->aboutWindow);
 }
 
-void PolycodeIDEApp::showSettings() {
-	frame->showModal(frame->settingsWindow);
-}
-
-void PolycodeIDEApp::toggleConsole() {
-	frame->toggleConsole();
-}
-
 void PolycodeIDEApp::doRemoveFile() {
 	if(projectManager->selectedFile != "") {
 		core->removeDiskItem(projectManager->selectedFile);
 		if(projectManager->getActiveProject()) {
 			frame->projectBrowser->refreshProject(projectManager->getActiveProject());
 		}
-		PolycodeEditor *editor;
-		for (int i=0; i < editorManager->openEditors.size(); i++) {
-			if (editorManager->openEditors[i]->getFilePath() == projectManager->selectedFile) {
-				editor = editorManager->openEditors[i];
-				break;
-			}
-		}
-		// have to set changes to false to avoid problems with saving and modal dialogs in removeEditor()
-		// besides, we're removing the file, so saving is not necessary
-		if (editor) {
-			editor->setHasChanges(false);
-			removeEditor(editor);
-		}
 	}
 }
 
@@ -264,80 +228,37 @@
 	}
 }
 
-// check if associated file has changes before invoking this
 void PolycodeIDEApp::removeEditor(PolycodeEditor *editor) {
-	if (!editor)
+	if(!editor)
 		return;
-	
-	frame->removeEditor(editor);
-	editorManager->destroyEditor(editor);
-	if(editorManager->openEditors.size() > 0) {
-		editorManager->setCurrentEditor(editorManager->openEditors[0]);
-		frame->showEditor(editorManager->openEditors[0]);
-	} else {
-		editorManager->setCurrentEditor(NULL);
+		
+	if(editor->hasChanges()) {
+		OSFileEntry entry(editor->getFilePath(), OSFileEntry::TYPE_FILE);	
+		frame->yesNoCancelPopup->setCaption("The file \""+entry.name+"\" has unsaved changes. Save before closing?");
+		frame->yesNoCancelPopup->action = "closeFile";
+		frame->showModal(frame->yesNoCancelPopup);		
+	} else {	
+		frame->removeEditor(editor);
+		editorManager->destroyEditor(editor);
+		if(editorManager->openEditors.size() > 0) {
+			editorManager->setCurrentEditor(editorManager->openEditors[0]);
+			frame->showEditor(editorManager->openEditors[0]);
+		}
 	}
 }
 
 void PolycodeIDEApp::closeFile() {
-	// this will save the file if it has changes and/or close it (in closeFiles())
 	PolycodeEditor *editor = editorManager->getCurrentEditor();
-	if (editor) {
-		std::vector<PolycodeEditor*> editorToSave;
-		editorToSave.push_back(editor);
-		OSFileEntry entry(editor->getFilePath(), OSFileEntry::TYPE_FILE);
-		closeFiles(editorToSave, "'"+entry.name+"' has unsaved changes. Save?");
-	}
-}
-
-void PolycodeIDEApp::closeFiles(std::vector<PolycodeEditor*> editors, String saveMsg) {
-	if (filesHaveChanges(editors)) {
-		if (saveMsg == "")
-			saveMsg = "File(s) have unsaved changes. Save all?";
-		tempEditorStore = editors;
-		frame->yesNoCancelPopup->setCaption(saveMsg);
-		frame->yesNoCancelPopup->action = "closeFiles";
-		frame->showModal(frame->yesNoCancelPopup);
-	} else
-		doCloseFiles(editors);
-}
-
-void PolycodeIDEApp::doCloseFiles(std::vector<PolycodeEditor*> editors) {
-	for (int i=0; i < editors.size(); i++) {
-		if (editors[i])
-			removeEditor(editors[i]);
+	if(editor) {
+		removeEditor(editor);
 	}
 }
 
 void PolycodeIDEApp::closeProject() {
 	if(projectManager->getActiveProject()) {
-		std::vector<PolycodeEditor*> editors;
-		PolycodeEditor *editor;
-		bool hasChanges = false;
-		for (int i=0; i < editorManager->openEditors.size(); i++) {
-			editor = editorManager->openEditors[i];
-			if (editor->hasChanges())
-				hasChanges = true;
-			if (editor->parentProject == projectManager->getActiveProject())
-				editors.push_back(editor);
-		}
-		tempEditorStore = editors; // current project files
-		if (hasChanges) {
-			String name = projectManager->getActiveProject()->getProjectName();
-			frame->yesNoCancelPopup->setCaption("Project '" + name + "' has unsaved changes. Save all?");
-			frame->yesNoCancelPopup->action = "closeProject";
-			frame->showModal(frame->yesNoCancelPopup);
-		} else
-			doCloseProject();
-	} else
-		PolycodeConsole::print("There are no active projects to close.\n");
-}
-
-// private helper function that removes editors and project on project close.
-void PolycodeIDEApp::doCloseProject() {
-	doCloseFiles(tempEditorStore);
-	frame->getProjectBrowser()->removeProject(projectManager->getActiveProject());
-	projectManager->removeProject(projectManager->getActiveProject());
+		frame->getProjectBrowser()->removeProject(projectManager->getActiveProject());
+		projectManager->removeProject(projectManager->getActiveProject());
+	}
 }
 
 void PolycodeIDEApp::newGroup() {
@@ -354,7 +275,7 @@
 #ifdef USE_POLYCODEUI_FILE_DIALOGS
 	std::vector<String> exts;
 	exts.push_back("polyproject");
-	frame->showFileBrowser(CoreServices::getInstance()->getCore()->getUserHomeDirectory(),	false, exts, false);
+	frame->showFileBrowser(CoreServices::getInstance()->getCore()->getUserHomeDirectory(),  false, exts, false);
 	frame->fileDialog->addEventListener(this, UIEvent::OK_EVENT);
 #else
 	vector<CoreFileExtension> extensions;
@@ -371,7 +292,7 @@
 		PolycodeProject *project = projectManager->openProject(paths[0]);
 		if(project) {
 			projectManager->setActiveProject(project);
-			OSFileEntry projectEntry =	OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
+			OSFileEntry projectEntry =  OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
 			openFile(projectEntry);			
 		}
 	}
@@ -402,42 +323,11 @@
 	printf("Running project...\n");
 	stopProject();
 
-	frame->showConsole();
-
 	String outPath = PolycodeToolLauncher::generateTempPath(projectManager->getActiveProject()) + ".polyapp";
-	PolycodeToolLauncher::buildProject(projectManager->getActiveProject(), outPath, false);
+	PolycodeToolLauncher::buildProject(projectManager->getActiveProject(), outPath);
 	PolycodeToolLauncher::runPolyapp(outPath);
 }
 
-bool PolycodeIDEApp::quitApp() {	
-
-	quittingApp = true;
-	
-	while(editorManager->getCurrentEditor()) {
-		PolycodeEditor *editor = editorManager->getCurrentEditor();
-		
-		if(editor->hasChanges()) {
-			OSFileEntry entry(editor->getFilePath(), OSFileEntry::TYPE_FILE);	
-			frame->yesNoCancelPopup->setCaption("The file \""+entry.name+"\" has unsaved changes. Save before quitting?");
-			frame->yesNoCancelPopup->action = "closeQuitFile";
-			frame->showModal(frame->yesNoCancelPopup);
-			return false;
-		} else {	
-			frame->removeEditor(editor);
-			editorManager->destroyEditor(editor);
-			if(editorManager->openEditors.size() > 0) {
-				editorManager->setCurrentEditor(editorManager->openEditors[0]);
-				frame->showEditor(editorManager->openEditors[0]);
-			} else{
-				editorManager->setCurrentEditor(NULL);
-			}
-		}
-		
-	}
-	
-	return true;
-}
-
 void PolycodeIDEApp::runProject() {
 	if(projectManager->getActiveProject()) {
 		if(editorManager->hasUnsavedFilesForProject(projectManager->getActiveProject())) {
@@ -481,21 +371,6 @@
 	}
 }
 
-void PolycodeIDEApp::saveFiles(std::vector<PolycodeEditor*> editors) {
-	for (int i=0; i < editors.size(); i++) {
-		if (editors[i]->hasChanges())
-			editors[i]->saveFile();
-	}
-}
-
-bool PolycodeIDEApp::filesHaveChanges(std::vector<PolycodeEditor*> editors) {
-	for (int i=0; i < editors.size(); i++) {
-		if (editors[i]->hasChanges())
-			return true;
-	}
-	return false;
-}
-
 void PolycodeIDEApp::openProject(String projectFile) {
 	projectManager->openProject(projectFile);
 }
@@ -534,21 +409,8 @@
 }
 
 void PolycodeIDEApp::openFile(OSFileEntry file) {
-
-	PolycodeEditorFactory *factory = editorManager->getEditorFactoryForExtension(file.extension);
-	if(dynamic_cast<PolycodeTextEditorFactory*>(factory)) {
-		CoreServices *core = CoreServices::getInstance();
-		Config *config = core->getConfig();	
-		bool useExternalTextEditor = (config->getStringValue("Polycode", "useExternalTextEditor") == "true") && (config->getStringValue("Polycode", "externalTextEditorCommand") != "");
-		
-		if(useExternalTextEditor) {
-			PolycodeToolLauncher::openExternalEditor(config->getStringValue("Polycode", "externalTextEditorCommand"), file.fullPath, projectManager->getActiveProject()->getRootFolder());
-			return;
-		}	
-	}
-
-	PolycodeEditor *editor = editorManager->getEditorForPath(file.fullPath);
-	
+	PolycodeEditor *editor;
+	editor = editorManager->getEditorForPath(file.fullPath);
 	if(editor) {
 		frame->showEditor(editor);
 	} else {
@@ -580,7 +442,7 @@
 				PolycodeProject *project = projectManager->openProject(path);
 				if(project) {
 					projectManager->setActiveProject(project);
-					OSFileEntry projectEntry =	OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
+					OSFileEntry projectEntry =  OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
 					openFile(projectEntry);			
 				}
 				
@@ -601,8 +463,6 @@
 			openProject();
 		} else if(action == "close_project") {
 			closeProject();
-		} else if(action == "close_file") {
-			closeFile();
 		} else if(action == "remove_file") {
 			removeFile();
 		} else if(action == "refresh_project") {
@@ -621,10 +481,6 @@
 			openDocs();
 		} else if(action == "show_about") {
 			showAbout();
-		} else if(action == "toggle_console") {
-			toggleConsole();
-		} else if(action == "settings") {
-			showSettings();
 		}
 	}
 
@@ -690,8 +546,7 @@
 		}
 		
 		if(event->getEventCode() == Event::CHANGE_EVENT) {
-			PolycodeProjectBrowser *pb = frame->getProjectBrowser();
-			BrowserUserData *selectedData = pb->getSelectedData();
+			BrowserUserData *selectedData = frame->getProjectBrowser()->getSelectedData();
 						
 			if(selectedData->type == 3) {
 				projectManager->activeFolder = selectedData->parentProject->getRootFolder();
@@ -714,8 +569,7 @@
 			if(selectedData->type == 0)
 				return;			
 			
-			// don't open the editor if the selection was made by UITreeContainer arrow-key navigation
-			if (selectedData && pb->treeContainer->getRootNode()->getSelectedNode()->isSelectedByKey() == false) {
+			if(selectedData) {
 				openFile(selectedData->fileEntry);
 			}
 		}
@@ -761,71 +615,7 @@
 				case UIEvent::CANCEL_EVENT:
 				break;
 			}
-		} else if(frame->yesNoCancelPopup->action == "closeQuitFile") {
-			switch(event->getEventCode()) {
-				case UIEvent::YES_EVENT:
-				{
-					PolycodeEditor *editor = editorManager->getCurrentEditor();
-					if(editor) {
-						editor->saveFile();
-						closeFile();
-					}
-					frame->yesNoCancelPopup->action = "";
-					frame->hideModal();
-					if(quitApp()) {
-						core->Shutdown();
-					}
-				}
-				break;
-				case UIEvent::NO_EVENT:
-				{
-					PolycodeEditor *editor = editorManager->getCurrentEditor();
-					if(editor) {
-						editor->setHasChanges(false);
-						closeFile();
-					}
-					frame->yesNoCancelPopup->action = "";					
-					frame->hideModal();
-					if(quitApp()) {
-						core->Shutdown();
-					}					
-				}
-				break;
-				case UIEvent::CANCEL_EVENT:
-					quittingApp = false;
-				break;
-			}					
-		} else if (frame->yesNoCancelPopup->action == "closeProject") {
-			switch (event->getEventCode()) {
-				case UIEvent::YES_EVENT:
-					saveFiles(tempEditorStore);
-					doCloseProject();
-					break;
-				case UIEvent::NO_EVENT:
-					doCloseProject();
-					break;
-				case UIEvent::CANCEL_EVENT:
-					break;
-			}
-			frame->yesNoCancelPopup->action = "";
-			frame->hideModal();
-		}
-		
-		else if (frame->yesNoCancelPopup->action == "closeFiles") {
-			switch (event->getEventCode()) {
-				case UIEvent::YES_EVENT:
-					saveFiles(tempEditorStore);
-					doCloseFiles(tempEditorStore);
-					break;
-				case UIEvent::NO_EVENT:
-					doCloseFiles(tempEditorStore);
-					break;
-				case UIEvent::CANCEL_EVENT:
-					break;
-			}
-			frame->yesNoCancelPopup->action = "";
-			frame->hideModal();
-		}
+		}			
 	} else if(event->getDispatcher() == frame->yesNoPopup) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CANCEL_EVENT) {
 			if(frame->yesNoPopup->action == "saveAndRun") {
@@ -842,7 +632,7 @@
 			}
 			
 			if(frame->yesNoPopup->action == "saveAndRun") {
-				editorManager->saveFilesForProject(projectManager->getActiveProject());
+				editorManager->saveAll();
 				runNextFrame = true;
 			}
 			
@@ -880,26 +670,9 @@
 		}
 	}	
 
-	if(event->getDispatcher() == frame->settingsWindow) {
-		if(event->getEventType() == "UIEvent") {
-			Config *config = CoreServices::getInstance()->getConfig();
-			SettingsWindow *settingsWindow = frame->settingsWindow;
-
-			if(event->getEventCode() == UIEvent::OK_EVENT) {
-				config->setStringValue("Polycode", "useExternalTextEditor", settingsWindow->useExternalTextEditorBox->isChecked() ? "true" : "false");
-				config->setStringValue("Polycode", "externalTextEditorCommand", settingsWindow->externalTextEditorCommand->getText());
-			
-				frame->hideModal();
-			}
-			if(event->getEventCode() == UIEvent::CLOSE_EVENT) {
-				settingsWindow->updateUI();
-			}
-		}
-	}
-
 	if(event->getDispatcher() == frame->exportProjectWindow) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::OK_EVENT) {
-			projectManager->exportProject(projectManager->getActiveProject(), frame->exportProjectWindow->projectLocationInput->getText(), frame->exportProjectWindow->macCheckBox->isChecked(), frame->exportProjectWindow->winCheckBox->isChecked(), frame->exportProjectWindow->linCheckBox->isChecked(), frame->exportProjectWindow->compileCheckBox->isChecked());
+			projectManager->exportProject(projectManager->getActiveProject(), frame->exportProjectWindow->projectLocationInput->getText(), frame->exportProjectWindow->macCheckBox->isChecked(), frame->exportProjectWindow->winCheckBox->isChecked(), frame->exportProjectWindow->linCheckBox->isChecked());
 			frame->hideModal();			
 		}
 	}
@@ -927,39 +700,16 @@
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::OK_EVENT) {
 			String fullPath = String(core->getDefaultWorkingDirectory()+"/"+frame->exampleBrowserWindow->getExamplePath());
 			PolycodeProject* project = projectManager->openProject(fullPath);
-			OSFileEntry projectEntry =	OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
+			OSFileEntry projectEntry =  OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
 			projectManager->setActiveProject(project);
 			openFile(projectEntry);			
 			
 			frame->hideModal();			
 		}
-	}
-	
-	// close files and editors after the close file button is pressed
-	if (event->getDispatcher() == frame->closeFileButton) {
-		if (event->getEventCode() == UIEvent::CLICK_EVENT) {
-			if (core->getInput()->getKeyState(KEY_RSHIFT) || core->getInput()->getKeyState(KEY_LSHIFT))
-				closeFiles(editorManager->openEditors);
-			else
-				closeFile();
-		}
-	}
-	
-	// open an editor/file if project browser has focus and user hits enter or right-arrow key
-	if (event->getDispatcher() == CoreServices::getInstance()->getCore()->getInput()) {
-		if (event->getEventCode() == InputEvent::EVENT_KEYDOWN && frame->getProjectBrowser()->treeContainer->hasFocus) {
-			InputEvent *inEvent = (InputEvent*)event;
-			if (inEvent->keyCode() == KEY_RETURN || inEvent->keyCode() == KEY_RIGHT) {
-				BrowserUserData *selectedData = frame->getProjectBrowser()->getSelectedData();
-				if (selectedData)
-					openFile(selectedData->fileEntry);
-			}
-		}
-	}
+	}	
 }
 
 void PolycodeIDEApp::saveConfigFile() {
-	Config *config = CoreServices::getInstance()->getConfig();
 	Object configFile;
 	configFile.root.name = "config";
 	configFile.root.addChild("open_projects");
@@ -971,11 +721,6 @@
 		projectEntry->addChild("path", project->getProjectFile());
 	}
 
-	configFile.root.addChild("settings");
-	ObjectEntry *textEditorEntry = configFile.root["settings"]->addChild("text_editor");
-	textEditorEntry->addChild("use_external", config->getStringValue("Polycode", "useExternalTextEditor"));
-	textEditorEntry->addChild("command", config->getStringValue("Polycode", "externalTextEditorCommand"));
-
 #if defined(__APPLE__) && defined(__MACH__)
 	core->createFolder(core->getUserHomeDirectory()+"/Library/Application Support/Polycode");
 	configFile.saveToXML(core->getUserHomeDirectory()+"/Library/Application Support/Polycode/config.xml");	
@@ -995,53 +740,30 @@
 	configFile.loadFromXML(core->getUserHomeDirectory()+"/.polycode/config.xml");
 #endif	
 	globalSyntaxTheme = new SyntaxHighlightTheme();
-	String themeName = "monokai";
+	String themeName = "default";
 	ObjectEntry *syntaxTheme = configFile.root["syntax_theme"];
 	if(syntaxTheme) {
 		themeName = syntaxTheme->stringVal;
 	}
+	themeName = "monokai";	
 	globalSyntaxTheme->loadFromFile(themeName);
 	
 	if(configFile.root["open_projects"]) {
 		ObjectEntry *projects = configFile.root["open_projects"];
 		if(projects) {
-			for(int i=0; i < projects->length; i++) {
-				ObjectEntry *entry = (*(*projects)[i])["path"];
-				if(entry) {
-					PolycodeProject* project = projectManager->openProject(entry->stringVal);
-					if(project) {
-						OSFileEntry projectEntry =	OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
-						projectManager->setActiveProject(project);
-						openFile(projectEntry);
-					}
+		for(int i=0; i < projects->length; i++) {
+			ObjectEntry *entry = (*(*projects)[i])["path"];
+			if(entry) {
+				PolycodeProject* project = projectManager->openProject(entry->stringVal);
+				if(project) {
+					OSFileEntry projectEntry =  OSFileEntry(project->getProjectFile(), OSFileEntry::TYPE_FILE);
+					projectManager->setActiveProject(project);
+					openFile(projectEntry);
 				}
 			}
 		}
+		}
 	}
-	
-	Config *config = CoreServices::getInstance()->getConfig();
-
-	if(configFile.root["settings"]) {
-		ObjectEntry *settings = configFile.root["settings"];
-		ObjectEntry *textEditor = (*settings)["text_editor"];
-		if(textEditor) {
-			if((*textEditor)["use_external"]) {
-				config->setStringValue("Polycode", "useExternalTextEditor", (*textEditor)["use_external"]->stringVal);
-			} else {
-				config->setStringValue("Polycode", "useExternalTextEditor", "false");
-			}
-
-			if((*textEditor)["command"]) {
-				config->setStringValue("Polycode", "externalTextEditorCommand", (*textEditor)["command"]->stringVal);
-			} else {
-				config->setStringValue("Polycode", "externalTextEditorCommand", "");
-			}
-		}
-	} else {
-		config->setStringValue("Polycode","useExternalTextEditor", "false");
-		config->setStringValue("Polycode", "externalTextEditorCommand", "");
-	}
-	frame->settingsWindow->updateUI();
 }
 
 
@@ -1100,6 +822,6 @@
 	}
 
 
-	return core->updateAndRender();
+	return core->Update();
 }
 
diff --git a/IDE/Contents/Source/PolycodeImageEditor.cpp b/IDE/Contents/Source/PolycodeImageEditor.cpp
--- a/IDE/Contents/Source/PolycodeImageEditor.cpp
+++ b/IDE/Contents/Source/PolycodeImageEditor.cpp
@@ -69,14 +69,17 @@
 		
 	editorImage = new ScreenShape(ScreenShape::SHAPE_RECT, 10,10);
 	
-	Texture *newTexture = CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(filePath.fullPath);
-	newTexture->reloadOnFileModify = true;
+	Image *image = new Image(filePath.fullPath);
+	
+	Texture *newTexture = CoreServices::getInstance()->getMaterialManager()->createTextureFromImage(image);
+	
 	editorImage->setTexture(newTexture);
 	
 	editorImage->strokeEnabled = true;
 	editorImage->setStrokeColor(1.0, 1.0, 1.0, 0.2);
 	
-	aspectRatio = ((Number)newTexture->getWidth()) / ((Number)newTexture->getHeight());
+	aspectRatio = ((Number)image->getWidth()) / ((Number)image->getHeight());
+	delete image;
 	
 	addChild(editorImage);
 	
diff --git a/IDE/Contents/Source/PolycodeMaterialEditor.cpp b/IDE/Contents/Source/PolycodeMaterialEditor.cpp
--- a/IDE/Contents/Source/PolycodeMaterialEditor.cpp
+++ b/IDE/Contents/Source/PolycodeMaterialEditor.cpp
@@ -21,676 +21,21 @@
  */
  
 #include "PolycodeMaterialEditor.h"
-#include "PolycodeFrame.h"
-#include "PolyCubemap.h"
 
 extern UIColorPicker *globalColorPicker;
 extern UIGlobalMenu *globalMenu;
-extern PolycodeFrame *globalFrame;
 
-PostEditorPane::PostEditorPane() : UIElement() {
-	currentMaterial = NULL;
-	
-	bottomElement = new UIElement();
-	
-	headerBgBottom = new ScreenShape(ScreenShape::SHAPE_RECT,10,10);
-	bottomElement->addChild(headerBgBottom);
-	headerBgBottom->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	headerBgBottom->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderBgColor"));	
-	
-	propList = new PropList("POST EFFECT EDITOR");
-	bottomElement->addChild(propList);
-	
-	baseProps = new PropSheet("EFFECT OPTIONS", "");
-	propList->addPropSheet(baseProps);
-
-	nameProp = new StringProp("Name");
-	baseProps->addProp(nameProp);
-	nameProp->addEventListener(this, Event::CHANGE_EVENT);
-	
-	fp16Prop = new BoolProp("HDR targets");
-	fp16Prop->set(false);
-	baseProps->addProp(fp16Prop);
-	fp16Prop->addEventListener(this, Event::CHANGE_EVENT);
-		
-	baseProps->propHeight = 100;	
-
-	targetsProps = new RenderTargetsSheet();
-	propList->addPropSheet(targetsProps);
-		
-	passProps = new ShaderPassesSheet();
-	propList->addPropSheet(passProps);
-	passProps->addEventListener(this, Event::CHANGE_EVENT);
-	passProps->addEventListener(this, Event::REMOVE_EVENT);
-	passProps->addEventListener(this, Event::SELECT_EVENT);
-
-	optionsPropList = new PropList("SHADER PASS OPTIONS");
-	bottomElement->addChild(optionsPropList);
-	optionsPropList->setPosition(400, 0);
-
-	targetBindingProps = new TargetBindingsSheet();
-	optionsPropList->addPropSheet(targetBindingProps);
-	targetBindingProps->addEventListener(this, Event::CHANGE_EVENT);
-		
-	shaderTextureSheet = new ShaderTexturesSheet();
-	optionsPropList->addPropSheet(shaderTextureSheet);
-
-	shaderOptionsSheet = new ShaderOptionsSheet();
-	optionsPropList->addPropSheet(shaderOptionsSheet);
+MaterialEditorPane::MaterialEditorPane() : UIWindow("Material", 670, 250) {
 
 	
-	topElement = new UIElement();	
-	postPreview = new PostPreviewBox();
-	topElement->addChild(postPreview);
-	postPreview->setPosition(0, 0);
-		
-	mainSizer = new UIVSizer(100, 100, 300, true);
-	mainSizer->setPosition(0, 0);
-	mainSizer->addTopChild(topElement);
-	mainSizer->addBottomChild(bottomElement);
-	mainSizer->addEventListener(this, UIEvent::CHANGE_EVENT);
-	addChild(mainSizer);
-	enabled = false;
-		
-}
-
-PostEditorPane::~PostEditorPane() {
-
-}
-
-void PostEditorPane::Resize(Number width, Number height) {
-	mainSizer->Resize(width, height);
-	headerBgBottom->setShapeSize(width, 30);	
-	propList->Resize(width/2.0, height- mainSizer->getMainHeight());
-	
-	propList->updateProps();
-	optionsPropList->Resize(width/2.0, height- mainSizer->getMainHeight());
-	optionsPropList->setPosition(floor(width/2.0), optionsPropList->getPosition().y);
-	optionsPropList->updateProps();	
-	UIElement::Resize(width, height);
-	adjustPreview();
-}
-
-void PostEditorPane::adjustPreview() {
-	targetsProps->normTextureWidth = getWidth();
-	targetsProps->normTextureHeight = mainSizer->getMainHeight()-30;
-	postPreview->Resize(getWidth(), mainSizer->getMainHeight());
-}
-
-
-void PostEditorPane::setMaterial(Material *material) {
-	enabled = true;
-	currentMaterial = material;		
-		
-	nameProp->set(material->getName());
-	
-	if(currentMaterial->fp16RenderTargets) {
-		fp16Prop->set(true);
-	} else {
-		fp16Prop->set(false);
-	}
-	
-	targetsProps->material = material;
-	passProps->setMaterial(material);	
-	postPreview->setMaterial(material);
-	
-	optionsPropList->visible = false;
-	optionsPropList->enabled = false;
-	
-	adjustPreview();
-	
-	for(int i=0; i < currentMaterial->getNumShaderRenderTargets(); i++) {
-		ShaderRenderTarget *target = currentMaterial->getShaderRenderTarget(i);
-		if(target->sizeMode == ShaderRenderTarget::SIZE_MODE_NORMALIZED) {
-			target->normalizedWidth = targetsProps->normTextureWidth;
-			target->normalizedHeight = targetsProps->normTextureHeight;
-			currentMaterial->recreateRenderTarget(target);
-		}
-	}
-				
-}
-
-void PostEditorPane::handleEvent(Event *event) {
-	if(event->getDispatcher() == nameProp) {
-		currentMaterial->setName(nameProp->get());
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);					
-	} else if(event->getDispatcher() == mainSizer && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-			propList->Resize(propList->getWidth(), height-mainSizer->getMainHeight());
-			propList->updateProps();
-			adjustPreview();
-	} else if(event->getDispatcher() == passProps || event->getDispatcher() == targetBindingProps) {
-		if(event->getEventCode() == Event::REMOVE_EVENT) {
-				optionsPropList->visible = false;
-				optionsPropList->enabled = false;	
-		} else if(event->getEventCode() == Event::CHANGE_EVENT) {
-			postPreview->clearMaterial();
-			postPreview->setMaterial(currentMaterial);
-		} else if(event->getEventCode() == Event::SELECT_EVENT) {
-			if(passProps->selectedProp) {
-				int shaderIndex = passProps->selectedProp->shaderIndex;
-				Material *material = passProps->selectedProp->material;
-				ShaderBinding *binding = material->getShaderBinding(shaderIndex);
-				targetBindingProps->setShader(currentMaterial->getShader(shaderIndex), material, binding);
-				shaderTextureSheet->setShader(currentMaterial->getShader(shaderIndex), material, binding);
-				shaderOptionsSheet->setShader(currentMaterial->getShader(shaderIndex), material, binding);		
-				optionsPropList->visible = true;
-				optionsPropList->enabled = true;	
-				
-			}
-		}
-	} else if(event->getDispatcher() == fp16Prop && event->getEventCode() == Event::CHANGE_EVENT) {
-		currentMaterial->fp16RenderTargets = fp16Prop->get();
-		currentMaterial->recreateRenderTargets();
-	}
-}
-
-
-
-CubemapEditorPane::CubemapEditorPane() : UIElement() {
-	currentCubemap = NULL;
-
-	headerBg = new ScreenShape(ScreenShape::SHAPE_RECT,10,10);
-	addChild(headerBg);
-	headerBg->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	headerBg->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderBgColor"));	
-	
-	propList = new PropList("CUBEMAP EDITOR");
-	addChild(propList);
-	propList->setPosition(0, 0);
-
-	PropSheet *baseProps1 = new PropSheet("CUBEMAP OPTIONS", "");
-	propList->addPropSheet(baseProps1);
-
-	nameProp = new StringProp("Name");
-	baseProps1->addProp(nameProp);
-	
-	baseProps1->propHeight = 70;
-	
-	PropSheet *baseProps = new PropSheet("CUBEMAP TEXTURES", "");
-	propList->addPropSheet(baseProps);
-
-	xPosTexture = new TextureProp("X+");
-	baseProps->addProp(xPosTexture);
-	xNegTexture = new TextureProp("X-");
-	baseProps->addProp(xNegTexture);	
-	yPosTexture = new TextureProp("Y+");
-	baseProps->addProp(yPosTexture);		
-	yNegTexture = new TextureProp("Y-");
-	baseProps->addProp(yNegTexture);
-	zPosTexture = new TextureProp("Z+");
-	baseProps->addProp(zPosTexture);
-	zNegTexture = new TextureProp("Z-");
-	baseProps->addProp(zNegTexture);
-
-	nameProp->addEventListener(this, Event::CHANGE_EVENT);	
-	yPosTexture->addEventListener(this, Event::CHANGE_EVENT);
-	yNegTexture->addEventListener(this, Event::CHANGE_EVENT);
-	xPosTexture->addEventListener(this, Event::CHANGE_EVENT);
-	xNegTexture->addEventListener(this, Event::CHANGE_EVENT);
-	zPosTexture->addEventListener(this, Event::CHANGE_EVENT);
-	zNegTexture->addEventListener(this, Event::CHANGE_EVENT);						
-	
-	baseProps->propHeight = 220;
-	propList->updateProps();
-	
-	cubemapPreview = new MaterialPreviewBox();
-	addChild(cubemapPreview);
-	cubemapPreview->setPosition(400, 0);
-	
-	Material *previewMaterial = CoreServices::getInstance()->getMaterialManager()->createMaterial("CubemapPreview", "LightCube");
-	cubemapPreview->setMaterial(previewMaterial);
-	enabled = false;
-	
-}
-
-void CubemapEditorPane::setCubemap(Cubemap *cubemap) {
-	enabled = true;
-	currentCubemap = cubemap;
-	
-	nameProp->set(cubemap->getResourceName());
-	
-	cubemapPreview->previewPrimitive->getLocalShaderOptions()->clearCubemap("lightCube");
-	cubemapPreview->previewPrimitive->getLocalShaderOptions()->addCubemap("lightCube", cubemap);	
-	
-	yPosTexture->set(cubemap->getTexture(Cubemap::CUBEMAP_YPOS));
-	yNegTexture->set(cubemap->getTexture(Cubemap::CUBEMAP_YNEG));
-	xPosTexture->set(cubemap->getTexture(Cubemap::CUBEMAP_XPOS));
-	xNegTexture->set(cubemap->getTexture(Cubemap::CUBEMAP_XNEG));
-	zPosTexture->set(cubemap->getTexture(Cubemap::CUBEMAP_ZPOS));
-	zNegTexture->set(cubemap->getTexture(Cubemap::CUBEMAP_ZNEG));				
-	
-}
-
-void CubemapEditorPane::handleEvent(Event *event) {
-
-	if(event->getDispatcher() == nameProp) {
-		currentCubemap->setResourceName(nameProp->get());
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);					
-	}
-
-	if(event->getDispatcher() == yPosTexture) {
-		currentCubemap->setTexture(yPosTexture->get(), Cubemap::CUBEMAP_YPOS);
-		currentCubemap->recreateFromTextures();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-	}	
-	
-	if(event->getDispatcher() == yNegTexture) {
-		currentCubemap->setTexture(yNegTexture->get(), Cubemap::CUBEMAP_YNEG);
-		currentCubemap->recreateFromTextures();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-	}	
-
-	if(event->getDispatcher() == xPosTexture) {
-		currentCubemap->setTexture(xPosTexture->get(), Cubemap::CUBEMAP_XPOS);
-		currentCubemap->recreateFromTextures();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-	}	
-
-	if(event->getDispatcher() == xNegTexture) {
-		currentCubemap->setTexture(xNegTexture->get(), Cubemap::CUBEMAP_XNEG);
-		currentCubemap->recreateFromTextures();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-	}	
-
-	if(event->getDispatcher() == zPosTexture) {
-		currentCubemap->setTexture(zPosTexture->get(), Cubemap::CUBEMAP_ZPOS);
-		currentCubemap->recreateFromTextures();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-	}	
-
-	if(event->getDispatcher() == zNegTexture) {
-		currentCubemap->setTexture(zNegTexture->get(), Cubemap::CUBEMAP_ZNEG);
-		currentCubemap->recreateFromTextures();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-	}	
-	
-}
-
-CubemapEditorPane::~CubemapEditorPane() {
-
-}
-
-void CubemapEditorPane::Resize(Number width, Number height) {
-	headerBg->setShapeSize(width, 30);	
-	propList->Resize(370, height);
-	propList->updateProps();
-}
-
-
-ShaderEditorPane::ShaderEditorPane() : UIElement() {	
-
-	changingShader = false;
-	currentShader = NULL;
-
-	headerBg = new ScreenShape(ScreenShape::SHAPE_RECT,10,10);
-	addChild(headerBg);
-	headerBg->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	headerBg->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderBgColor"));	
-	
-	propList = new PropList("SHADER EDITOR");
-	addChild(propList);
-	propList->setPosition(0, 0);
-	
-	PropSheet *baseProps = new PropSheet("SHADER SETTINGS", "");
-	propList->addPropSheet(baseProps);
-	
-	nameProp = new StringProp("Name");
-	baseProps->addProp(nameProp);	
-	nameProp->addEventListener(this, Event::CHANGE_EVENT);	
-	
-	screenShaderProp = new BoolProp("Screen shader");
-	baseProps->addProp(screenShaderProp);	
-	screenShaderProp->addEventListener(this, Event::CHANGE_EVENT);	
-	
-	
-	vertexProgramProp = new ComboProp("Vertex prog.");
-	baseProps->addProp(vertexProgramProp);	
-	vertexProgramProp->addEventListener(this, Event::CHANGE_EVENT);	
-
-	fragmentProgramProp = new ComboProp("Fragment prog.");
-	baseProps->addProp(fragmentProgramProp);	
-	fragmentProgramProp->addEventListener(this, Event::CHANGE_EVENT);	
-	
-	areaLightsProp = new NumberProp("Num area lights");
-	baseProps->addProp(areaLightsProp);	
-	areaLightsProp->addEventListener(this, Event::CHANGE_EVENT);
-
-	spotLightsProp = new NumberProp("Num spotlights");
-	baseProps->addProp(spotLightsProp);	
-	spotLightsProp->addEventListener(this, Event::CHANGE_EVENT);
-
-	baseProps->propHeight = 220;
-	
-	propList->updateProps();
-	
-	enabled = false;
-}
-
-ShaderEditorPane::~ShaderEditorPane() {
-
-}
-
-void ShaderEditorPane::handleEvent(Event *event) {
-	if(!changingShader) {
-	
-		if(event->getDispatcher() == nameProp) {
-			currentShader->setName(nameProp->get());
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-		}
-	
-		if(event->getDispatcher() == screenShaderProp) {
-			currentShader->screenShader = screenShaderProp->get();
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);			
-		}
-				
-		if(event->getDispatcher() == areaLightsProp) {
-			currentShader->numAreaLights = floor(areaLightsProp->get());
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		}
-
-		if(event->getDispatcher() == spotLightsProp) {
-			currentShader->numSpotLights = floor(spotLightsProp->get());
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		}		
-		
-		if(event->getDispatcher() == vertexProgramProp) {
-			ShaderProgram* vpProgram = (ShaderProgram*)vertexProgramProp->comboEntry->getSelectedItem()->data;
-			if(vpProgram) {			
-				currentShader->setVertexProgram(vpProgram);
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-			} else {
-				globalFrame->assetBrowser->addEventListener(this, UIEvent::OK_EVENT);
-				std::vector<String> extensions;
-				extensions.push_back("vert");
-				choosingVertexProgram = true;
-				globalFrame->showAssetBrowser(extensions);				
-			}
-		}		
-
-		if(event->getDispatcher() == fragmentProgramProp) {
-			ShaderProgram* fpProgram = (ShaderProgram*)fragmentProgramProp->comboEntry->getSelectedItem()->data;
-			if(fpProgram) {			
-				currentShader->setFragmentProgram(fpProgram);
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-			} else {
-				globalFrame->assetBrowser->addEventListener(this, UIEvent::OK_EVENT);
-				std::vector<String> extensions;
-				extensions.push_back("frag");
-				choosingVertexProgram = false;
-				globalFrame->showAssetBrowser(extensions);			
-			}
-		}
-	}
-	
-	if(event->getDispatcher() == globalFrame->assetBrowser && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::OK_EVENT) {
-		String newProgramPath = globalFrame->assetBrowser->getFullSelectedAssetPath();
-		globalFrame->assetBrowser->removeAllHandlersForListener(this);
-		
-
-		OSFileEntry entry(newProgramPath, OSFileEntry::TYPE_FILE);
-		ShaderProgram *newProgram = CoreServices::getInstance()->getMaterialManager()->createProgramFromFile(newProgramPath);
-		newProgram->reloadOnFileModify = true;
-		if(newProgram) {
-			newProgram->setResourceName(entry.name);
-			newProgram->setResourcePath(newProgramPath);
-			CoreServices::getInstance()->getResourceManager()->addResource(newProgram);
-		}
-
-		if(choosingVertexProgram) {
-			currentShader->setVertexProgram(newProgram);			
-		} else {
-			currentShader->setFragmentProgram(newProgram);		
-		}
-		
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
-		globalFrame->hideModal();
-		
-		reloadPrograms();
-	}	
-}
-
-void ShaderEditorPane::reloadPrograms() {
-	vertexProgramProp->comboEntry->clearItems();
-	fragmentProgramProp->comboEntry->clearItems();
-		
-	vertexProgramProp->comboEntry->addComboItem("Custom...", NULL);
-	fragmentProgramProp->comboEntry->addComboItem("Custom...", NULL);	
-		
-	std::vector<Resource*> programs = CoreServices::getInstance()->getResourceManager()->getResources(Resource::RESOURCE_PROGRAM);
-	
-	for(int i=0; i < programs.size(); i++) {
-		ShaderProgram* program = (ShaderProgram*) programs[i];
-		if(program->type == ShaderProgram::TYPE_VERT) {
-			vertexProgramProp->comboEntry->addComboItem(program->getResourceName(), (void*)program);
-			if(program == currentShader->vp) {
-				vertexProgramProp->comboEntry->setSelectedIndex(vertexProgramProp->comboEntry->getNumItems()-1);
-			}
-		} else if(program->type == ShaderProgram::TYPE_FRAG) {
-			fragmentProgramProp->comboEntry->addComboItem(program->getResourceName(), (void*)program);		
-			if(program == currentShader->fp) {
-				fragmentProgramProp->comboEntry->setSelectedIndex(fragmentProgramProp->comboEntry->getNumItems()-1);
-			}			
-		}
-	}	
-}
-
-void ShaderEditorPane::setShader(Shader *shader) {
-	changingShader = true;
-	
-	currentShader = shader;
-	
-	reloadPrograms();
-		
-	nameProp->set(shader->getName());
-	
-	for(int i=0; i < vertexProgramProp->comboEntry->getNumItems(); i++) {
-		ShaderProgram* program = (ShaderProgram*) vertexProgramProp->comboEntry->getItemAtIndex(i)->data;
-		if(program == shader->vp) {
-			vertexProgramProp->comboEntry->setSelectedIndex(i);
-		}
-	}
-
-	for(int i=0; i < fragmentProgramProp->comboEntry->getNumItems(); i++) {
-		ShaderProgram* program = (ShaderProgram*) fragmentProgramProp->comboEntry->getItemAtIndex(i)->data;
-		if(program == shader->fp) {
-			fragmentProgramProp->comboEntry->setSelectedIndex(i);
-		}
-	}
-	
-	screenShaderProp->set(shader->screenShader);
-	
-	areaLightsProp->set(shader->numAreaLights);
-	spotLightsProp->set(shader->numSpotLights);
-	
-	enabled = true;
-	
-	changingShader = false;	
-}
-
-void ShaderEditorPane::Resize(Number width, Number height) {
-	headerBg->setShapeSize(width, 30);	
-	propList->Resize(370, height);
-	propList->updateProps();
-}
-
-PostPreviewBox::PostPreviewBox() : UIElement() {
-
-	headerBg = new ScreenShape(ScreenShape::SHAPE_RECT,10,10);
-	addChild(headerBg);
-	headerBg->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	headerBg->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderBgColor"));	
-
-	ScreenLabel *label = new ScreenLabel("POST PREVIEW", 18, "section", Label::ANTIALIAS_FULL);
-	label->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderFontColor"));
-	addChild(label);
-	label->setPosition(10, 3);
-
-	currentMaterial = NULL;
 	previewScene = new Scene(true);	
 	
-	renderTexture = new SceneRenderTexture(previewScene, previewScene->getDefaultCamera(), 512, 512, true);
-	
-
-	CoreServices::getInstance()->getRenderer()->setClippingPlanes(0.1, 100.0);
-
-	previewScene->clearColor.setColor(0.0, 0.0, 0.0, 1.0);	
-	previewScene->ambientColor.setColor(0.0, 0.0, 0.0, 1.0);
-
-	mainLight = new SceneLight(SceneLight::AREA_LIGHT, previewScene, 90.0);
-	mainLight->setPosition(-6,6,6);
-	previewScene->addLight(mainLight);
-
-	secondLight = new SceneLight(SceneLight::AREA_LIGHT, previewScene, 90.0);
-	secondLight->setPosition(6,-6,6);
-	previewScene->addLight(secondLight);
-
-	previewPrimitive = new ScenePrimitive(ScenePrimitive::TYPE_PLANE, 10.0, 10.0);
-	previewScene->addChild(previewPrimitive);
-	previewPrimitive->setMaterialByName("DefaultHDR");
-	previewPrimitive->setColorInt(198, 192, 166, 255);	
-	
-	if(previewPrimitive->getMaterial()) {
-		previewPrimitive->getMaterial()->getShaderBinding(0)->getLocalParamByName("shininess")->setNumber(90);
-	}
-	
-	previewPrimitive = new ScenePrimitive(ScenePrimitive::TYPE_TORUS, 0.9, 0.45, 26, 16);
-	previewScene->addChild(previewPrimitive);
-	previewPrimitive->setMaterialByName("DefaultHDR");
-	previewPrimitive->setColorInt(255, 0, 0, 255);	
-	previewPrimitive->setPosition(1.5, 0.4, 1.0);
-
-	previewPrimitive = new ScenePrimitive(ScenePrimitive::TYPE_SPHERE, 1.0, 16, 16);
-	previewScene->addChild(previewPrimitive);
-	previewPrimitive->setMaterialByName("DefaultHDR");
-	previewPrimitive->setColorInt(0, 255, 0, 255);
-	previewPrimitive->setPosition(-0.8, 1.0, 0.8);
-
-	previewPrimitive = new ScenePrimitive(ScenePrimitive::TYPE_BOX, 2,  2, 2);
-	previewPrimitive->getMesh()->calculateNormals(false);	
-	previewScene->addChild(previewPrimitive);
-	previewPrimitive->setMaterialByName("DefaultHDR");
-	previewPrimitive->setColorInt(0, 0, 255, 255);
-	previewPrimitive->rotation.yaw = 20;
-	previewPrimitive->setPosition(1.0, 1.0, -2.5);
-	
-	previewScene->getDefaultCamera()->setPosition(0,3.0,5);
-	previewScene->getDefaultCamera()->lookAt(Vector3(0.0, 0.5, 0.0));
-
-	
-	previewBase = new ScreenEntity();
-	previewBase->processInputEvents = true;
-	previewBase->setPosition(0, 30);
-	addChild(previewBase);
-	
-	previewShape = new ScreenShape(ScreenShape::SHAPE_RECT, 256, 256);
-	previewShape->setPositionMode(ScreenEntity::POSITION_TOPLEFT);	
-	previewShape->setTexture(renderTexture->getTargetTexture());
-//	previewShape->strokeEnabled = true;
-//	previewShape->strokeColor = Color(1.0, 1.0, 1.0, 0.2);
-//	previewShape->setStrokeWidth(1.0);
-	previewBase->addChild(previewShape);
-
-	spinValue = 0.0;
-	
-	rotateCheckBox = new UICheckBox("Auto-rotate", false);
-	addChild(rotateCheckBox);
-	rotateCheckBox->setPosition(150, 2);
-
-	label = new ScreenLabel("EXPOSURE", 18, "section", Label::ANTIALIAS_FULL);
-	label->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderFontColor"));
-	addChild(label);
-	label->setPosition(270, 3);
-	
-	cameraExposureInput = new UITextInput(false, 40, 12);
-	addChild(cameraExposureInput);
-	cameraExposureInput->setPosition(370, 2);
-	cameraExposureInput->setText(String::NumberToString(previewScene->getDefaultCamera()->getExposureLevel()));	
-	cameraExposureInput->addEventListener(this, UIEvent::CHANGE_EVENT);
-
-	label = new ScreenLabel("LIGHT INT.", 18, "section", Label::ANTIALIAS_FULL);
-	label->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderFontColor"));
-	addChild(label);
-	label->setPosition(430, 3);
-
-	lightStrength = new UITextInput(false, 40, 12);
-	addChild(lightStrength);
-	lightStrength->setPosition(530, 2);
-	lightStrength->setText("90.0");
-	lightStrength->addEventListener(this, UIEvent::CHANGE_EVENT);
-	
-}
-
-void PostPreviewBox::Update() {
-	spinValue += CoreServices::getInstance()->getCore()->getElapsed();
-	
-	if(rotateCheckBox->isChecked()) {
-		previewScene->getDefaultCamera()->setPosition(sin(spinValue) * 5.0,3.0, cos(spinValue) * 5.0);
-	} else {
-		previewScene->getDefaultCamera()->setPosition(0,3.0,5);
-	}	
-	previewScene->getDefaultCamera()->lookAt(Vector3(0.0, 0.5, 0.0));		
-
-}
-
-void PostPreviewBox::Resize(Number width, Number height) {
-	previewShape->setShapeSize(width, height-30);
-	headerBg->setShapeSize(width, 30);
-	
-	int textureWidth = (int)width;
-	int textureHeight = (int) (height-30);
-	renderTexture->resizeRenderTexture(textureWidth, textureHeight);
-	previewShape->setTexture(renderTexture->getTargetTexture());	
-	UIElement::Resize(width, height);
-	
-	if(currentMaterial) {
-		for(int i=0; i < currentMaterial->getNumShaderRenderTargets(); i++) {
-			currentMaterial->getShaderRenderTarget(i)->normalizedWidth = textureWidth;
-			currentMaterial->getShaderRenderTarget(i)->normalizedHeight = textureHeight;
-			currentMaterial->recreateRenderTarget(currentMaterial->getShaderRenderTarget(i));
-		}
-	}
-}
-
-PostPreviewBox::~PostPreviewBox() {
-
-}
-
-void PostPreviewBox::setMaterial(Material *material) {
-	previewScene->getDefaultCamera()->setPostFilter(material);
-}
-
-void PostPreviewBox::clearMaterial() {
-	previewScene->getDefaultCamera()->removePostFilter();
-}
-
-void PostPreviewBox::handleEvent(Event *event) {
-	if(event->getDispatcher() == cameraExposureInput && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-		Number newExposure = atof(cameraExposureInput->getText().c_str());
-		previewScene->getDefaultCamera()->setExposureLevel(newExposure);
-	} else if(event->getDispatcher() == lightStrength && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-		Number newStrength = atof(lightStrength->getText().c_str());
-		mainLight->setIntensity(newStrength);
-		secondLight->setIntensity(newStrength);		
-	}
-}
-
-MaterialPreviewBox::MaterialPreviewBox() : UIElement() {
-	currentMaterial = NULL;
-	previewScene = new Scene(true);	
-	
-	renderTexture = new SceneRenderTexture(previewScene, previewScene->getDefaultCamera(), 512, 512);
+	renderTexture = new SceneRenderTexture(previewScene, previewScene->getDefaultCamera(), 256, 256);
 	
 	ScenePrimitive *previewBg = new ScenePrimitive(ScenePrimitive::TYPE_BOX, 15.0, 15.0, 15.0);
 	previewBg->Yaw(45.0);
 	previewBg->backfaceCulled = false;
-	
-	Material *bgMaterial = CoreServices::getInstance()->getMaterialManager()->createMaterial("MaterialEditorBg", "Unlit");
-	
-	previewBg->setMaterial(bgMaterial);
-	Texture *tex = CoreServices::getInstance()->getMaterialManager()->createTextureFromFile("Images/material_grid.png");
-	if(previewBg->getLocalShaderOptions()) {
-	previewBg->getLocalShaderOptions()->addTexture("diffuse", tex);
-	}
+	previewBg->loadTexture("Images/material_grid.png");
 	previewScene->addChild(previewBg);
 	
 	previewScene->clearColor.setColor(0.1, 0.1, 0.1, 0.0);	
@@ -732,22 +77,98 @@
 	previewScene->getDefaultCamera()->setPosition(0,7,9);
 	previewScene->getDefaultCamera()->lookAt(Vector3());
 	
-	previewBase = new ScreenEntity();
-	previewBase->processInputEvents = true;
-	previewBase->setPosition(0, 0);
-	addChild(previewBase);
-	
-	previewShape = new ScreenShape(ScreenShape::SHAPE_RECT, 256, 256);
+	previewShape = new ScreenShape(ScreenShape::SHAPE_RECT, 128, 128);
 	previewShape->setPositionMode(ScreenEntity::POSITION_TOPLEFT);	
 	previewShape->setTexture(renderTexture->getTargetTexture());
 	previewShape->setPosition(20,40);
 	previewShape->strokeEnabled = true;
 	previewShape->strokeColor = Color(1.0, 1.0, 1.0, 0.2);
 	previewShape->setStrokeWidth(1.0);
-	previewBase->addChild(previewShape);
+	addChild(previewShape);
+	
+	Config *conf = CoreServices::getInstance()->getConfig();	
+	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");	
+	Number padding = conf->getNumericValue("Polycode", "uiWindowSkinPadding");	
+	
+	Number xPos = 165;
+	
+	ScreenLabel *label = new ScreenLabel("SHADER", 22, "section", Label::ANTIALIAS_FULL);
+	label->color.a = 0.4;
+	addChild(label);
+	label->setPosition(xPos,90);
+
+	label = new ScreenLabel("BLEND MODE", 22, "section", Label::ANTIALIAS_FULL);
+	label->color.a = 0.4;
+	addChild(label);
+	label->setPosition(xPos,150);
+
+
+	label = new ScreenLabel("NAME", 22, "section", Label::ANTIALIAS_FULL);
+	label->color.a = 0.4;		
+	addChild(label);
+	label->setPosition(xPos,30);
+
+	nameInput = new UITextInput(false, 210, 30);
+	nameInput->addEventListener(this, UIEvent::CHANGE_EVENT);
+	addChild(nameInput);
+	nameInput->setPosition(xPos, 60);
+	
+	Number yPos = 145;
+	
+	
+	yPos += 50;
+	label = new ScreenLabel("TEXTURES", 22, "section", Label::ANTIALIAS_FULL);
+	addChild(label);
+	label->color.a = 0.4;	
+	label->setPosition(xPos+230, 30);
+	label->getLabel()->setColorForRange(Color(), 0, 8);
+	label->getLabel()->setColorForRange(Color(0.5,0.5,0.5,1.0), 8, 35);
+	label->setText("TEXTURES (DRAG FROM PROJECT TO SET)");
+
+	paramsEntity = new UIElement();
+	addChild(paramsEntity);
+
+	label = new ScreenLabel("SHADER PROPERTIES", 22, "section", Label::ANTIALIAS_FULL);
+	label->color.a = 0.4;
+	paramsEntity->addChild(label);
+	paramsEntity->setPositionX(xPos+230);
+
+	textureSlotBase = new ScreenEntity();
+	addChild(textureSlotBase);
+	
+	textureSlotBase->setPosition(xPos+230, 60);
+
+	shaderSelector = new UIComboBox(globalMenu, 210);	
+	shaderSelector->addEventListener(this, UIEvent::CHANGE_EVENT);
+
+	
+	blendSelector = new UIComboBox(globalMenu, 210);	
+	blendSelector->addEventListener(this, UIEvent::CHANGE_EVENT);
+	
+	addChild(blendSelector);
+	blendSelector->setPosition(xPos, 180);
+		
+	blendSelector->addComboItem("Normal");
+	blendSelector->addComboItem("Lighten");
+	blendSelector->addComboItem("Color");
+	blendSelector->addComboItem("Premultiplied");
+	blendSelector->addComboItem("Multiply");
+	
+//	blendSelector->setSelectedIndex(0);
+							
+	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
+	for(int i=0; i < materialManager->getNumShaders(); i++) {
+		if(!materialManager->getShaderByIndex(i)->screenShader) {
+			shaderSelector->addComboItem(materialManager->getShaderByIndex(i)->getName(), (void*)materialManager->getShaderByIndex(i));
+		}
+	}
+	
+	shaderSelector->setPosition(xPos, 120);
+	addChild(shaderSelector);
 	
 	shapeSelector = new ScreenImage("Images/small_selector.png");
-	previewBase->addChild(shapeSelector);
+	addChild(shapeSelector);
 	shapeSelector->color.a = 0.4;
 	
 	shapeSwitches.push_back(new UIImageButton("Images/torus_icon.png"));
@@ -756,42 +177,32 @@
 	shapeSwitches.push_back(new UIImageButton("Images/plane_icon.png"));
 
 	for(int i=0; i < shapeSwitches.size(); i++) {
-		previewBase->addChild(shapeSwitches[i]);
-		shapeSwitches[i]->setPosition(105 + (25 * i), 300);
+		addChild(shapeSwitches[i]);
+		shapeSwitches[i]->setPosition(40 + (25 * i), 180);
 		shapeSwitches[i]->addEventListener(this, UIEvent::CLICK_EVENT);
 	}
-
+				
+	currentMaterial = NULL;
+	
 	showPrimitive(0);
-}
-
-void MaterialPreviewBox::clearMaterial() {
-	previewPrimitive->clearMaterial();
+	
+	enabled = false;
 }
 
-MaterialPreviewBox::~MaterialPreviewBox() {
-
-}
-
-void MaterialPreviewBox::setMaterial(Material *material) {
-	currentMaterial = material;
-	previewPrimitive->setMaterial(material);	
-	
-}
-
-void MaterialPreviewBox::showPrimitive(unsigned int index) {
+void MaterialEditorPane::showPrimitive(unsigned int index) {
 	for(int i=0; i < shapePrimitives.size(); i++) {
 		shapePrimitives[i]->visible = false;	
 	}
 	shapePrimitives[index]->visible = true;	
-	shapeSelector->setPosition(105 - 2 + (25 * index), 298);
+	shapeSelector->setPosition(38 + (25 * index), 178);
 	if(currentMaterial) {
 		shapePrimitives[index]->setMaterial(currentMaterial);
 	}
 	previewPrimitive = shapePrimitives[index];
-
 }
 
-void MaterialPreviewBox::handleEvent(Event *event) {
+void MaterialEditorPane::handleEvent(Event *event) {
+	
 	for(int i=0; i < shapeSwitches.size(); i++) {
 		if(event->getDispatcher() == shapeSwitches[i]) {
 			if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
@@ -799,171 +210,326 @@
 			}
 		}
 	}
+	
+	if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT && currentMaterial) {		
+	
+		if(event->getDispatcher() == nameInput) {
+			currentMaterial->setName(nameInput->getText());
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
+		}
+	
+		if(event->getDispatcher() ==blendSelector) {			
+			currentMaterial->blendingMode = blendSelector->getSelectedIndex();
+		}
+		if(event->getDispatcher() == shaderSelector) {
+			Shader *selectedShader = (Shader*)shaderSelector->getSelectedItem()->data;
+			
+			clearAll();
+			if(selectedShader) {	
+				for(int i=0; i < selectedShader->expectedTextures.size(); i++) {
+					MaterialTextureSlot *textureSlot = new MaterialTextureSlot(selectedShader->expectedTextures[i]);
+					textureSlotBase->addChild(textureSlot);
+					textureSlot->setPosition(0, (40*i));
+					textureSlots.push_back(textureSlot);
+					
+					if(currentMaterial->getShaderBinding(0)) {
+						Texture *currentTexture = currentMaterial->getShaderBinding(0)->getTexture(selectedShader->expectedTextures[i]);
+						if(currentTexture) {
+							textureSlot->imageShape->setTexture(currentTexture);
+							std::vector<String> parts = currentTexture->getResourcePath().split("/");
+							if(parts.size() > 1) {
+								textureSlot->textureFileName->setText(parts[parts.size()-1]);
+							} else {
+								textureSlot->textureFileName->setText(currentTexture->getResourcePath());			
+							}
+						}
+					}
+				}
+
+			}
+			
+			paramsEntity->setPositionY(70 + (selectedShader->expectedTextures.size()*40));
+
+			bool replacingShader = false;
+			if(currentMaterial->getShader(0) != selectedShader) {
+				currentMaterial->clearShaders();
+				previewPrimitive->clearMaterial();
+				replacingShader = true;
+			}
+			
+			if(selectedShader) {
+				if(replacingShader) {			
+					ShaderBinding *newShaderBinding = selectedShader->createBinding();				
+					currentMaterial->addShader(selectedShader, newShaderBinding);
+					previewPrimitive->setMaterial(currentMaterial);	
+				}
+				
+				for(int i=0; i < textureSlots.size(); i++) {
+					if(textureSlots[i]->textureFileName->getText() != "None") {
+						currentMaterial->getShaderBinding(0)->clearTexture(textureSlots[i]->textureString);			
+						currentMaterial->getShaderBinding(0)->addTexture(textureSlots[i]->textureString, textureSlots[i]->imageShape->getTexture());
+					}
+				}								
+					
+				if(currentMaterial->getShaderBinding(0)) {
+				
+				int yOffset = 30;
+				
+				for(int i=0; i < selectedShader->expectedFragmentParams.size(); i++) {
+					if(!selectedShader->expectedFragmentParams[i].isAuto) {
+					MaterialPropertySlot *propertySlot = new MaterialPropertySlot(currentMaterial->getShaderBinding(0), selectedShader->expectedFragmentParams[i]);
+					paramsEntity->addChild(propertySlot);
+					propertySlot->setPosition(0, yOffset);
+					fragmentPropertySlots.push_back(propertySlot);					
+					yOffset += 45;
+				}
+				}
+								
+				for(int i=0; i < selectedShader->expectedVertexParams.size(); i++) {
+					if(!selectedShader->expectedVertexParams[i].isAuto) {
+					MaterialPropertySlot *propertySlot = new MaterialPropertySlot(currentMaterial->getShaderBinding(0), selectedShader->expectedVertexParams[i]);
+					paramsEntity->addChild(propertySlot);
+					propertySlot->setPosition(0, yOffset);
+					fragmentPropertySlots.push_back(propertySlot);					
+					yOffset += 45;					
+				}
+				}
+								
+
+				}
+			}
+			
+			int winHeight = (fragmentPropertySlots.size() * 45) + (textureSlots.size() * 40) + 100;
+
+			if(winHeight < 250)
+				winHeight = 250;
+	
+			setWindowSize(670, winHeight);			
+		}			
+	}
+	
+	
+	UIWindow::handleEvent(event);
 }
 
-MaterialEditorPane::MaterialEditorPane() : UIElement() {	
-
-	changingMaterial = false;
-	
-	headerBg = new ScreenShape(ScreenShape::SHAPE_RECT,10,10);
-	addChild(headerBg);
-	headerBg->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	headerBg->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderBgColor"));	
-	
-	propList = new PropList("MATERIAL EDITOR");
-	addChild(propList);
-	propList->setPosition(0, 0);
-
-	PropSheet *baseProps = new PropSheet("MATERIAL SETTINGS", "");
-	propList->addPropSheet(baseProps);
-	
-	nameProp = new StringProp("Name");
-	baseProps->addProp(nameProp);	
-	nameProp->addEventListener(this, Event::CHANGE_EVENT);
-		
-	shaderProp = new ComboProp("Shader");
-	baseProps->addProp(shaderProp);
-	shaderProp->addEventListener(this, Event::CHANGE_EVENT);
+void MaterialEditorPane::clearAll() {
+	for(int i=0; i < textureSlots.size(); i++) {
+		textureSlotBase->removeChild(textureSlots[i]);
+		delete textureSlots[i];
+	}
+	textureSlots.clear();
 	
-	blendModeProp = new ComboProp("Blend mode");
-	baseProps->addProp(blendModeProp);
-	blendModeProp->addEventListener(this, Event::CHANGE_EVENT);
-		
-	blendModeProp->comboEntry->addComboItem("Normal");
-	blendModeProp->comboEntry->addComboItem("Lighten");
-	blendModeProp->comboEntry->addComboItem("Color");
-	blendModeProp->comboEntry->addComboItem("Premultiplied");
-	blendModeProp->comboEntry->addComboItem("Multiply");	
-	
-	baseProps->propHeight = 130;	
-	
-	shaderTextureSheet = new ShaderTexturesSheet();
-	propList->addPropSheet(shaderTextureSheet);			
-	shaderTextureSheet->addEventListener(this, Event::CHANGE_EVENT);
-		
-	shaderOptionsSheet = new ShaderOptionsSheet();
-	propList->addPropSheet(shaderOptionsSheet);
-	shaderOptionsSheet->addEventListener(this, Event::CHANGE_EVENT);
-		
-	propList->updateProps();
-							
-	
-	materialPreview = new MaterialPreviewBox();
-	addChild(materialPreview);
-	materialPreview->setPosition(400, 0);
-	
-	Config *conf = CoreServices::getInstance()->getConfig();	
-	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");	
-				
-	currentMaterial = NULL;	
-	
-	reloadShaders();
-	
-	enabled = false;
+	for(int i=0; i < fragmentPropertySlots.size(); i++) {
+		paramsEntity->removeChild(fragmentPropertySlots[i]);
+		delete fragmentPropertySlots[i];
+	}
+	fragmentPropertySlots.clear();									
 }
 
-void MaterialEditorPane::reloadShaders() {
-
-	shaderProp->comboEntry->clearItems();
-
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-	for(int i=0; i < materialManager->getNumShaders(); i++) {
-		if(!materialManager->getShaderByIndex(i)->screenShader) {
-			shaderProp->comboEntry->addComboItem(materialManager->getShaderByIndex(i)->getName(), (void*)materialManager->getShaderByIndex(i));
+void MaterialEditorPane::handleDroppedFile(OSFileEntry file, Number x, Number y) {
+	Vector2 screenPos = textureSlotBase->getScreenPosition();
+	
+	x = x - screenPos.x;
+	y = y - screenPos.y;
+		
+	for(int i=0; i < textureSlots.size(); i++) {
+		if(x > textureSlots[i]->getPosition().x && x < textureSlots[i]->getPosition().x + textureSlots[i]->getWidth() && 
+		y > textureSlots[i]->getPosition().y && y < textureSlots[i]->getPosition().y + textureSlots[i]->getHeight()) {
+			Texture *newTexture = CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(file.fullPath);
+			textureSlots[i]->imageShape->setTexture(newTexture);
+			textureSlots[i]->textureFileName->setText(file.name);
+			currentMaterial->getShaderBinding(0)->clearTexture(textureSlots[i]->textureString);			
+			currentMaterial->getShaderBinding(0)->addTexture(textureSlots[i]->textureString, newTexture);
+			
 		}
 	}	
 }
 
-void MaterialEditorPane::Resize(Number width, Number height) {
-	headerBg->setShapeSize(width, 30);	
-	propList->Resize(370, height);
-	propList->updateProps();
-}
-
-void MaterialEditorPane::handleEvent(Event *event) {
-
-	if(event->getDispatcher() == currentMaterial) {
-		shaderTextureSheet->setShader(currentMaterial->getShader(0), currentMaterial, currentMaterial->getShaderBinding(0));
-		shaderOptionsSheet->setShader(currentMaterial->getShader(0), currentMaterial, currentMaterial->getShaderBinding(0));		
-	}
-
-	if(event->getDispatcher() == shaderTextureSheet || event->getDispatcher() == shaderOptionsSheet) {
-		if(!changingMaterial) {
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		}		
+void MaterialEditorPane::setMaterial(Material *material) {
+	currentMaterial = material;
+	previewPrimitive->setMaterial(material);
 		
-	} else if(event->getDispatcher() == blendModeProp) {
-		currentMaterial->blendingMode = blendModeProp->get();
-		if(!changingMaterial) {
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		}
-	} else if(event->getDispatcher() == nameProp) {
-		currentMaterial->setName(nameProp->get());
-		if(!changingMaterial) {
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		}
-	} else if(event->getDispatcher() == shaderProp) {
-		Shader *selectedShader = (Shader*)shaderProp->comboEntry->getSelectedItem()->data;
-		if(selectedShader) {			
-			if(currentMaterial->getShader(0) != selectedShader) {
-				currentMaterial->clearShaders();
-				materialPreview->clearMaterial();
-				
-				ShaderBinding *newShaderBinding = selectedShader->createBinding();				
-				currentMaterial->addShader(selectedShader, newShaderBinding);
-				materialPreview->setMaterial(currentMaterial);					
-			}
-			
-			shaderTextureSheet->setShader(selectedShader, currentMaterial, currentMaterial->getShaderBinding(0));
-			shaderOptionsSheet->setShader(selectedShader, currentMaterial, currentMaterial->getShaderBinding(0));
-		}
-		
-		if(!changingMaterial) {
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		}		
-	}
-}
-
-void MaterialEditorPane::setMaterial(Material *material) {
-	changingMaterial = true;
+	clearAll();	
+	
+	if(!currentMaterial) // ???
+		return;		
+	
+	enabled = true;
 	
-	if(currentMaterial) {
-		currentMaterial->removeAllHandlersForListener(this);
-	}
-	
-	currentMaterial = material;
-	materialPreview->setMaterial(material);		
-	
-	material->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);
+	blendSelector->setSelectedIndex(currentMaterial->blendingMode);
+					
+	if(currentMaterial->getShader(0)) {		
 	
-	reloadShaders();
-	
-	if(!currentMaterial)
-		return;
-	
-	blendModeProp->set(currentMaterial->blendingMode);
-	
-	if(currentMaterial->getShader(0)) {	
-	for(int i=0; i < shaderProp->comboEntry->getNumItems(); i++) {
-		Shader *shader = (Shader*)shaderProp->comboEntry->getItemAtIndex(i)->data;
+	for(int i=0; i < shaderSelector->getNumItems(); i++) {
+		Shader *shader = (Shader*)shaderSelector->getItemAtIndex(i)->data;
 		if(shader) {
 			if(currentMaterial->getShader(0)->getName() == shader->getName()) {
-				shaderProp->set(i);
-				shaderProp->dispatchEvent(new Event(), Event::CHANGE_EVENT);
+				shaderSelector->setSelectedIndex(i);
 				break;
 			}
 		}
 	}
 	} else {
-		shaderProp->set(0);
-		shaderProp->dispatchEvent(new Event(), Event::CHANGE_EVENT);		
-	}	
+		shaderSelector->setSelectedIndex(0);	
+	}
+	
+	nameInput->setText(currentMaterial->getName());
+}
+
+MaterialPropertySlot::MaterialPropertySlot(ShaderBinding *binding, ProgramParam param) : UIElement() {
+
+	setWidth(280);
+	setHeight(43);
+
+	this->param = param;
+	this->binding = binding;
+	
+	std::vector<String> stringParts = param.name.split("_");
+	
+	if(stringParts.size() > 0) {
+		for(int i=0; i < stringParts.size(); i++) {
+			finalName += stringParts[i].substr(0,1).toUpperCase() + stringParts[i].substr(1) + " ";	
+		}
+	} else {
+		finalName = param.name.substr(0,1).toUpperCase() + param.name.substr(1);
+	}
+	
+	Config *conf = CoreServices::getInstance()->getConfig();	
+	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");	
+	Number padding = conf->getNumericValue("Polycode", "uiWindowSkinPadding");		
+
+	propertyName = new ScreenLabel(finalName, fontSize, fontName, Label::ANTIALIAS_FULL);
+	propertyName->setColor(1.0, 1.0, 1.0, 0.7);		
+	addChild(propertyName);
+	
+	numberSlider = NULL;	
+	colorBox = NULL;
+	
+	minLabel = NULL;
+	maxLabel = NULL;
 	
-	nameProp->set(currentMaterial->getName());
+	switch(param.paramType) {
+		case ProgramParam::PARAM_Number:
+		{
+			
+			Number minVal = (*(Number*)param.minValue);
+			minLabel = new ScreenLabel(String::NumberToString(minVal), fontSize, fontName, Label::ANTIALIAS_FULL);
+			minLabel->setColor(1.0, 1.0, 1.0, 0.3);		
+			addChild(minLabel);			
+			minLabel->setPosition(0.0, 18);
+
+			Number maxVal = (*(Number*)param.maxValue);
+			maxLabel = new ScreenLabel(String::NumberToString(maxVal), fontSize, fontName, Label::ANTIALIAS_FULL);
+			maxLabel->setColor(1.0, 1.0, 1.0, 0.3);		
+			addChild(maxLabel);			
+			maxLabel->setPosition(240, 18);
+
+			numberSlider = new UIHSlider(minVal, maxVal, 180);
+			addChild(numberSlider);
+			numberSlider->setPosition(50, 23);
+			numberSlider->addEventListener(this, UIEvent::CHANGE_EVENT);
+//			binding->addLocalParam(param.name, &numberValue);
+
+			Number numberValue = (*(Number*)binding->getLocalParamByName(param.name)->data);
+			numberSlider->setSliderValue(numberValue);
+					
+			propertyName->setText(finalName+"("+String::NumberToString(numberValue)+")");
+
+		}
+		break;
+		case ProgramParam::PARAM_Color:
+			Color colorValue = ((*(Color*)binding->getLocalParamByName(param.name)->data));
+			colorBox = new UIColorBox(globalColorPicker, colorValue, 30, 23);
+			colorBox->addEventListener(this, UIEvent::CHANGE_EVENT);			
+			colorBox->setPosition(0.0, 18);
+//			binding->addLocalParam(param.name, &colorValue);			
+			addChild(colorBox);
+		break;
+	}
+}
+
+void MaterialPropertySlot::handleEvent(Event *event) {
+	if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {
+		if(event->getDispatcher() == numberSlider) {
+			propertyName->setText(finalName+"("+String::NumberToString(numberSlider->getSliderValue())+")");
+			(*(Number*)binding->getLocalParamByName(param.name)->data) = numberSlider->getSliderValue();
+		}
+		
+		if(event->getDispatcher() == colorBox) {
+			(*(Color*)binding->getLocalParamByName(param.name)->data) = colorBox->getSelectedColor();
+		}
+	}
+}
+
+MaterialPropertySlot::~MaterialPropertySlot() {
+	
+	delete propertyName;
 	
-	enabled = true;
-	changingMaterial = false;
-					
+	if(minLabel)
+		delete minLabel;
+	if(maxLabel)
+		delete maxLabel;
+
+	if(colorBox) {
+		delete colorBox;
+	}
+	
+	if(numberSlider)
+		delete numberSlider;
+}
+
+MaterialTextureSlot::MaterialTextureSlot(String textureNameString) : UIElement() {
+
+	setWidth(280);
+	setHeight(38);
+	
+	textureString = textureNameString;
+	
+	bgShape  = new ScreenShape(ScreenShape::SHAPE_RECT, 280,38);
+	bgShape->setColor(0.0, 0.0, 0.0, 0.4);
+	bgShape->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
+	addChild(bgShape);
+
+	imageShape = new ScreenShape(ScreenShape::SHAPE_RECT, 32,32);
+	imageShape->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
+	imageShape->setPosition(3,3);
+	addChild(imageShape);
+	
+	Config *conf = CoreServices::getInstance()->getConfig();	
+	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");	
+	Number padding = conf->getNumericValue("Polycode", "uiWindowSkinPadding");	
+	
+	std::vector<String> stringParts = textureNameString.split("_");
+	
+	String finalName;
+	if(stringParts.size() > 0) {
+		for(int i=0; i < stringParts.size(); i++) {
+			finalName += stringParts[i].substr(0,1).toUpperCase() + stringParts[i].substr(1) + " ";	
+		}
+	} else {
+		finalName = textureNameString.substr(0,1).toUpperCase() + textureNameString.substr(1);
+	}
+	
+	textureName = new ScreenLabel(finalName, fontSize, fontName, Label::ANTIALIAS_FULL);
+	textureName->setPosition(40, 3);
+	textureName->setColor(1.0, 1.0, 1.0, 0.5);		
+	addChild(textureName);
+
+	textureFileName = new ScreenLabel("None", fontSize, fontName, Label::ANTIALIAS_FULL);
+	textureFileName->setPosition(40, 20);
+	textureFileName->setColor(1.0, 1.0, 1.0, 0.8);		
+	addChild(textureFileName);
+
+}
+
+MaterialTextureSlot::~MaterialTextureSlot() {
+	delete bgShape;
+	delete imageShape;
+		
+	delete textureName;
+	delete textureFileName;		
 }
 
 MaterialEditorPane::~MaterialEditorPane() {
@@ -973,24 +539,16 @@
 MaterialMainWindow::MaterialMainWindow() : UIElement() {
 
 	materialPane = new MaterialEditorPane();
-	shaderPane = new ShaderEditorPane();
-	cubemapPane = new CubemapEditorPane();
-	postPane = new PostEditorPane();
-		
 	addChild(materialPane);
-	addChild(shaderPane);	
-	addChild(cubemapPane);
-	addChild(postPane);	
+	
 	enableScissor = true;
 }
 	
-void MaterialMainWindow::Resize(Number width, Number height) {	
+void MaterialMainWindow::Resize(Number width, Number height) {
+	materialPane->setPosition((width-materialPane->getWidth())/2.0, (height-materialPane->getHeight())/2.0);
+	
 	Vector2 pos = getScreenPosition();	
 	scissorBox.setRect(pos.x,pos.y,width, height);
-	materialPane->Resize(width, height);
-	shaderPane->Resize(width, height);
-	cubemapPane->Resize(width, height);
-	postPane->Resize(width, height);
 }
 
 MaterialBrowser::MaterialBrowser() : UIElement() {
@@ -999,10 +557,10 @@
 	treeContainer->getRootNode()->addEventListener(this, UITreeEvent::SELECTED_EVENT);
 	treeContainer->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
 		
-	shadersNode = treeContainer->getRootNode()->addTreeChild("Images/shader_icon.png", "Shaders", NULL);
-	materialsNode = treeContainer->getRootNode()->addTreeChild("Images/material_icon.png", "Materials", NULL);
-	cubemapsNode = treeContainer->getRootNode()->addTreeChild("Images/cubemap_icon.png", "Cubemaps", NULL);
-	postEffectsNode = treeContainer->getRootNode()->addTreeChild("Images/screenshader_icon.png", "Post Effects", NULL);
+	shadersNode = treeContainer->getRootNode()->addTreeChild("folder.png", "Shaders", NULL);
+	materialsNode = treeContainer->getRootNode()->addTreeChild("folder.png", "Materials", NULL);
+	cubemapsNode = treeContainer->getRootNode()->addTreeChild("folder.png", "Cubemaps", NULL);
+	cubemapsNode = treeContainer->getRootNode()->addTreeChild("folder.png", "Post Effects", NULL);
 				
 	addChild(treeContainer);		
 	selectedData = NULL;
@@ -1010,35 +568,16 @@
 	headerBg = new ScreenShape(ScreenShape::SHAPE_RECT,10,10);
 	addChild(headerBg);
 	headerBg->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	headerBg->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderBgColor"));	
-
-	newShaderButton = new UIImageButton("Images/new_shader.png");
-	addChild(newShaderButton);
-	newShaderButton->setPosition(5,4);
+	headerBg->setColor(0.1, 0.1, 0.1, 1.0);
 	
 	newMaterialButton = new UIImageButton("Images/new_material.png");
 	addChild(newMaterialButton);
-	newMaterialButton->setPosition(32,4);
-
-	newCubemapButton = new UIImageButton("Images/new_cubemap.png");
-	addChild(newCubemapButton);
-	newCubemapButton->setPosition(59,4);
-		
-	newPostButton = new UIImageButton("Images/new_screenshader.png");
-	addChild(newPostButton);
-	newPostButton->setPosition(86,4);
-
-	removeButton = new UIImageButton("Images/remove_icon.png");
-	addChild(removeButton);
-	removeButton->setPosition(0,4);
+	newMaterialButton->setPosition(5,5);
 	
 	selectedNode = NULL;
 
 }
 
-void MaterialBrowser::removeSelected() {
-	selectedNode->getParent()->removeTreeChild(selectedNode);
-}
 
 void MaterialBrowser::handleEvent(Event *event) {
 
@@ -1049,7 +588,8 @@
 			selectedData =  data;
 			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 		}
-	}	
+	}
+	
 	ScreenEntity::handleEvent(event);
 }
 
@@ -1060,33 +600,15 @@
 	return materialsNode->addTreeChild("material_icon.png", material->getName(), (void*)data);
 }
 
-UITree *MaterialBrowser::addShader(Shader *shader) {
-	MaterialBrowserData *data = new MaterialBrowserData();
-	data->shader = shader;
-	return shadersNode->addTreeChild("shader_icon.png", shader->getName(), (void*)data);
-}
-
-UITree *MaterialBrowser::addCubemap(Cubemap *cubemap) {
-	MaterialBrowserData *data = new MaterialBrowserData();
-	data->cubemap = cubemap;
-	return cubemapsNode->addTreeChild("cubemap_icon.png", cubemap->getResourceName(), (void*)data);	
-}
-
-UITree *MaterialBrowser::addPostMaterial(Material *material) {
-	MaterialBrowserData *data = new MaterialBrowserData();
-	data->postMaterial = material;
-	return postEffectsNode->addTreeChild("screenshader_icon.png", material->getName(), (void*)data);
-}
-
 MaterialBrowser::~MaterialBrowser() {
 
 }
 
 void MaterialBrowser::Resize(Number width, Number height) {
-	treeContainer->Resize(width, height-30);
-	treeContainer->setPosition(0, 30);	
-	headerBg->setShapeSize(width, 30);	
-	removeButton->setPosition(width - 24, 8);
+	treeContainer->Resize(width, height-32);
+	treeContainer->setPosition(0, 32);
+	
+	headerBg->setShapeSize(width, 32);	
 }
 
 PolycodeMaterialEditor::PolycodeMaterialEditor() : PolycodeEditor(true){
@@ -1099,7 +621,14 @@
 
 bool PolycodeMaterialEditor::openFile(OSFileEntry filePath) {
 	
-		
+	
+	grid = new ScreenImage("Images/editorGrid.png");
+	
+	addChild(grid);
+	grid->snapToPixels = true;	
+	grid->getTexture()->clamp = false;
+	grid->getTexture()->recreateFromImageData();	
+	
 	mainSizer = new UIHSizer(100,100,200,false);
 	addChild(mainSizer);	
 	
@@ -1108,82 +637,47 @@
 	
 	materialBrowser->addEventListener(this, Event::CHANGE_EVENT);
 	
-	
-	shaders = CoreServices::getInstance()->getMaterialManager()->loadShadersFromFile(filePath.fullPath);
-	for(int i=0; i < shaders.size(); i++) {
-		materialBrowser->addShader(shaders[i]);		
-		CoreServices::getInstance()->getMaterialManager()->addShader(shaders[i]);
-		CoreServices::getInstance()->getResourceManager()->addResource(shaders[i]);
-	}	
-
-	cubemaps = CoreServices::getInstance()->getMaterialManager()->loadCubemapsFromFile(filePath.fullPath);
-	for(int i=0; i < cubemaps.size(); i++) {
-		materialBrowser->addCubemap(cubemaps[i]);
-		CoreServices::getInstance()->getResourceManager()->addResource(cubemaps[i]);
-	}	
-
-	
-	std::vector<Material*> mats = CoreServices::getInstance()->getMaterialManager()->loadMaterialsFromFile(filePath.fullPath);
-	
-	materials.clear();
-	for(int i=0; i < mats.size(); i++) {
-		if(mats[i]->screenMaterial) {
-			postMaterials.push_back(mats[i]);
-		} else {
-			materials.push_back(mats[i]);		
-		}
-	}
+	materials = CoreServices::getInstance()->getMaterialManager()->loadMaterialsFromFile(filePath.fullPath);
 	
 	for(int i=0; i < materials.size(); i++) {
 		materialBrowser->addMaterial(materials[i]);
 	}
-
-	for(int i=0; i < postMaterials.size(); i++) {
-		materialBrowser->addPostMaterial(postMaterials[i]);
-	}
 	
 	mainWindow = new MaterialMainWindow();
 	mainSizer->addLeftChild(mainWindow);
 	
 	mainWindow->materialPane->addEventListener(this, Event::CHANGE_EVENT);
-	mainWindow->shaderPane->addEventListener(this, Event::CHANGE_EVENT);
-	mainWindow->cubemapPane->addEventListener(this, Event::CHANGE_EVENT);
-	mainWindow->postPane->addEventListener(this, Event::CHANGE_EVENT);
-			
-	mainWindow->shaderPane->parentProject = parentProject;
 	
 	materialBrowser->newMaterialButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	materialBrowser->newShaderButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	materialBrowser->newCubemapButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	materialBrowser->newPostButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	materialBrowser->removeButton->addEventListener(this, UIEvent::CLICK_EVENT);
-					
-	mainWindow->materialPane->addEventListener(this, Event::CHANGE_EVENT);
 	
 	PolycodeEditor::openFile(filePath);
 	return true;
 }
 
+void PolycodeMaterialEditor::handleDroppedFile(OSFileEntry file, Number x, Number y) {		
+	mainWindow->materialPane->handleDroppedFile(file, x,y);
+}
+
 String PolycodeMaterialEditor::createStringValue(unsigned int type, void *value) {
 	String retString;
 	
 	switch(type) {
-		case ProgramParam::PARAM_NUMBER:
+		case ProgramParam::PARAM_Number:
 			retString = String::NumberToString(*((Number*)value));
 		break;
-		case ProgramParam::PARAM_COLOR:
+		case ProgramParam::PARAM_Color:
 		{
 			Color color = *((Color*)value);
 			retString = String::NumberToString(color.r) + " " + String::NumberToString(color.g) + " " + String::NumberToString(color.b) + " " + String::NumberToString(color.a);
 		}
 		break;
-		case ProgramParam::PARAM_VECTOR2:
+		case ProgramParam::PARAM_Vector2:
 		{
 			Vector2 vec = *((Vector2*)value);
 			retString = String::NumberToString(vec.x) + " " + String::NumberToString(vec.y);
 		}
 		break;
-		case ProgramParam::PARAM_VECTOR3:
+		case ProgramParam::PARAM_Vector3:
 		{
 			Vector3 vec = *((Vector3*)value);
 			retString = String::NumberToString(vec.x) + " " + String::NumberToString(vec.y) + " " + String::NumberToString(vec.z);
@@ -1194,7 +688,13 @@
 	return retString;
 }
 
-void PolycodeMaterialEditor::saveMaterials(ObjectEntry *materialsEntry, std::vector<Material*> materials) {
+void PolycodeMaterialEditor::saveFile() {
+
+	Object fileData;
+	fileData.root.name = "polycode_material_library";
+	
+	ObjectEntry *materialsEntry = fileData.root.addChild("materials");
+	
 	for(int i=0; i < materials.size(); i++) {
 		Material *material = materials[i];				
 		
@@ -1202,169 +702,53 @@
 		materialEntry->addChild("name", material->getName());
 		materialEntry->addChild("blendingMode", material->blendingMode);
 		
-		if(material->screenMaterial) {
-			materialEntry->addChild("screen", true);
-		}
+		if(material->getShader(0) && material->getShaderBinding(0)) {
+				
+		Shader *shader = material->getShader(0);
+		
+		ObjectEntry *shaderEntry = materialEntry->addChild("shader");
+		shaderEntry->addChild("name", shader->getName());		
+		ObjectEntry *texturesEntry = shaderEntry->addChild("textures");
 		
-		if(material->screenMaterial) {		
-		if(material->getNumShaderRenderTargets() > 0) {		
-			ObjectEntry *targetsEntry = materialEntry->addChild("rendertargets");
-			if(material->fp16RenderTargets) {
-				targetsEntry->addChild("type", String("rgba_fp16"));
-			} else {
-				targetsEntry->addChild("type", String("rgba"));			
-			}
-			
-			for(int j=0; j < material->getNumShaderRenderTargets(); j++) {
-				ObjectEntry *targetEntry = targetsEntry->addChild("rendertarget");
+		ShaderBinding *shaderBinding = material->getShaderBinding(0);
+		for(int j=0; j < shader->expectedTextures.size(); j++) {
+			Texture *texture = shaderBinding->getTexture(shader->expectedTextures[j]);
+			if(texture) {
+				String texturePath = texture->getResourcePath();
+				texturePath = texturePath.replace(parentProject->getRootFolder()+"/", "");
 				
-				ShaderRenderTarget *target = material->getShaderRenderTarget(j);
-				
-				targetEntry->addChild("id", target->id);
-				if(target->sizeMode == ShaderRenderTarget::SIZE_MODE_NORMALIZED) {
-					targetEntry->addChild("sizeMode", "normalized");
-				} else {
-					targetEntry->addChild("sizeMode", "pixels");
-				}
-				
-				targetEntry->addChild("width", target->width);
-				targetEntry->addChild("height", target->height);								
-			}
-			
+				ObjectEntry *textureEntry = texturesEntry->addChild("texture", texturePath);
+				textureEntry->addChild("name", shader->expectedTextures[j]);
 			}
 		}
-		
-		if(material->getNumShaders() > 0) {
-			for(int s=0; s < material->getNumShaders(); s++) { 
-				Shader *shader = material->getShader(s);
-				
-				ObjectEntry *shaderEntry = materialEntry->addChild("shader");
-				shaderEntry->addChild("name", shader->getName());		
-				ObjectEntry *texturesEntry = shaderEntry->addChild("textures");
-				
-				ShaderBinding *shaderBinding = material->getShaderBinding(s);
-				
-				if(material->screenMaterial) {
-					if(shaderBinding->getNumRenderTargetBindings() > 0) {
-						ObjectEntry *targetsEntry = shaderEntry->addChild("targettextures");
-						for(int j=0; j < shaderBinding->getNumRenderTargetBindings(); j++) {
-							RenderTargetBinding *binding = shaderBinding->getRenderTargetBinding(j);
-							ObjectEntry *targetEntry = targetsEntry->addChild("targettexture");
-							switch(binding->mode) {
-								case RenderTargetBinding::MODE_IN:
-									targetEntry->addChild("mode", "in");								
-									targetEntry->addChild("name", binding->name);
-									targetEntry->addChild("id", binding->id);									
-								break;
-								case RenderTargetBinding::MODE_OUT:
-									targetEntry->addChild("mode", "out");								
-									targetEntry->addChild("name", binding->name);
-									targetEntry->addChild("id", binding->id);								
-								break;
-								case RenderTargetBinding::MODE_COLOR:
-									targetEntry->addChild("mode", "color");
-									targetEntry->addChild("name", binding->name);		
-								break;
-								case RenderTargetBinding::MODE_DEPTH:
-									targetEntry->addChild("mode", "depth");
-									targetEntry->addChild("name", binding->name);
-								break;																								
-							}
-						}
-					}
-				}
-				
-				for(int j=0; j < shader->expectedTextures.size(); j++) {
-					Texture *texture = shaderBinding->getTexture(shader->expectedTextures[j]);
-					
-					bool inRenderBinding = false;
-					
-					for(int b=0; b < shaderBinding->getNumRenderTargetBindings(); b++) {
-						RenderTargetBinding *_binding = shaderBinding->getRenderTargetBinding(b);
-						if(_binding->name == shader->expectedTextures[j]) {
-							inRenderBinding = true;
-						}
-					}
-					
-					if(texture && !inRenderBinding) {
-						String texturePath = texture->getResourcePath();
-						texturePath = texturePath.replace(parentProject->getRootFolder()+"/", "");				
-						ObjectEntry *textureEntry = texturesEntry->addChild("texture", texturePath);
-						textureEntry->addChild("name", shader->expectedTextures[j]);
-					}
-				}
-				
-				for(int j=0; j < shader->expectedCubemaps.size(); j++) {
-					Cubemap *cubemap = shaderBinding->getCubemap(shader->expectedCubemaps[j]);
-					if(cubemap) {
-						String cubemapName = cubemap->getResourceName();
-						ObjectEntry *cubemapEntry = texturesEntry->addChild("cubemap", cubemapName);
-						cubemapEntry->addChild("name", shader->expectedCubemaps[j]);
-					}
-				}
-				
-				
-				if(shader->expectedParams.size() > 0 || shader->expectedParams.size() > 0) {
-					ObjectEntry *paramsEntry = shaderEntry->addChild("params");
-					
-					for(int j=0; j < shader->expectedParams.size(); j++) {
-						if(shaderBinding->getLocalParamByName(shader->expectedParams[j].name)) {
-							ObjectEntry *paramEntry = paramsEntry->addChild("param");
-							paramEntry->addChild("name", shader->expectedParams[j].name);
-							paramEntry->addChild("value", createStringValue(shader->expectedParams[j].type, shaderBinding->getLocalParamByName(shader->expectedParams[j].name)->data));
-						}
-					}
+
+		if(shader->expectedFragmentParams.size() > 0 || shader->expectedVertexParams.size() > 0) {
+			ObjectEntry *paramsEntry = shaderEntry->addChild("params");
+			
+			for(int j=0; j < shader->expectedFragmentParams.size(); j++) {
+				if(shaderBinding->getLocalParamByName(shader->expectedFragmentParams[j].name) && !shader->expectedFragmentParams[j].isAuto) {
+				ObjectEntry *paramEntry = paramsEntry->addChild("param");
+				paramEntry->addChild("name", shader->expectedFragmentParams[j].name);
+				paramEntry->addChild("type", shader->expectedFragmentParams[j].typeString);
+				paramEntry->addChild("value", createStringValue(shader->expectedFragmentParams[j].paramType, shaderBinding->getLocalParamByName(shader->expectedFragmentParams[j].name)->data));
 				}
 			}
+
+			for(int j=0; j < shader->expectedVertexParams.size(); j++) {
+				if(shaderBinding->getLocalParamByName(shader->expectedVertexParams[j].name) && !shader->expectedVertexParams[j].isAuto) {
+				ObjectEntry *paramEntry = paramsEntry->addChild("param");
+				paramEntry->addChild("name", shader->expectedVertexParams[j].name);
+				paramEntry->addChild("type", shader->expectedVertexParams[j].typeString);
+				paramEntry->addChild("value", createStringValue(shader->expectedVertexParams[j].paramType, shaderBinding->getLocalParamByName(shader->expectedVertexParams[j].name)->data));
+				}
+			}
+			}
+			
 		}
 	}
-}
-
-void PolycodeMaterialEditor::saveFile() {
-
-	Object fileData;
-	fileData.root.name = "polycode_material_library";
-
-	ObjectEntry *shadersEntry = fileData.root.addChild("shaders");
-	for(int i=0; i < shaders.size(); i++) {
-		ObjectEntry *shaderEntry = shadersEntry->addChild("shader");
-		shaderEntry->addChild("type", String("glsl"));
-		shaderEntry->addChild("name", shaders[i]->getName());
-		shaderEntry->addChild("numAreaLights", shaders[i]->numAreaLights);
-		shaderEntry->addChild("numSpotLights", shaders[i]->numSpotLights);
-		shaderEntry->addChild("screen", shaders[i]->screenShader);
+	
+	fileData.saveToXML(filePath);
 
-		ObjectEntry *vpEntry = shaderEntry->addChild("vp");
-		String sourcePath = shaders[i]->vp->getResourcePath();
-		sourcePath = sourcePath.replace(parentProject->getRootFolder()+"/", "");
-		vpEntry->addChild("source", sourcePath);
-				
-		ObjectEntry *fpEntry = shaderEntry->addChild("fp");
-		sourcePath = shaders[i]->fp->getResourcePath();
-		sourcePath = sourcePath.replace(parentProject->getRootFolder()+"/", "");		
-		fpEntry->addChild("source", sourcePath);
-	}
-
-	ObjectEntry *cubemapsEntry = fileData.root.addChild("cubemaps");
-	
-	for(int i=0; i < cubemaps.size(); i++) {
-		ObjectEntry *cubemapEntry = cubemapsEntry->addChild("cubemap");
-		cubemapEntry->addChild("name", cubemaps[i]->getResourceName());
-		
-		cubemapEntry->addChild("xPos", cubemaps[i]->getTexture(Cubemap::CUBEMAP_XPOS)->getResourcePath());
-		cubemapEntry->addChild("xNeg", cubemaps[i]->getTexture(Cubemap::CUBEMAP_XNEG)->getResourcePath());
-		cubemapEntry->addChild("yPos", cubemaps[i]->getTexture(Cubemap::CUBEMAP_YPOS)->getResourcePath());
-		cubemapEntry->addChild("yNeg", cubemaps[i]->getTexture(Cubemap::CUBEMAP_YNEG)->getResourcePath());
-		cubemapEntry->addChild("zPos", cubemaps[i]->getTexture(Cubemap::CUBEMAP_ZPOS)->getResourcePath());
-		cubemapEntry->addChild("zNeg", cubemaps[i]->getTexture(Cubemap::CUBEMAP_ZNEG)->getResourcePath());										
-	}
-	
-	ObjectEntry *materialsEntry = fileData.root.addChild("materials");
-	saveMaterials(materialsEntry, materials);
-	saveMaterials(materialsEntry, postMaterials);
-			
-	fileData.saveToXML(filePath);
-	setHasChanges(false);
 }
 
 void PolycodeMaterialEditor::handleEvent(Event *event) {
@@ -1373,146 +757,29 @@
 		if(selectedMaterialNode && mainWindow->materialPane->currentMaterial) {
 			selectedMaterialNode->setLabelText(mainWindow->materialPane->currentMaterial->getName());
 		}
-		setHasChanges(true);
 	}
-
-	if(event->getDispatcher() == mainWindow->shaderPane && event->getEventType() == "" && event->getEventCode() == Event::CHANGE_EVENT) {
-		if(selectedMaterialNode && mainWindow->shaderPane->currentShader) {
-			selectedMaterialNode->setLabelText(mainWindow->shaderPane->currentShader->getName());
-		}
-		setHasChanges(true);
-	}
-
-	if(event->getDispatcher() == mainWindow->cubemapPane && event->getEventType() == "" && event->getEventCode() == Event::CHANGE_EVENT) {
-		if(selectedMaterialNode && mainWindow->cubemapPane->currentCubemap) {
-			selectedMaterialNode->setLabelText(mainWindow->cubemapPane->currentCubemap->getResourceName());
-		}
-		setHasChanges(true);
-	}
-
-	if(event->getDispatcher() == mainWindow->postPane && event->getEventType() == "" && event->getEventCode() == Event::CHANGE_EVENT) {
-		if(selectedMaterialNode && mainWindow->postPane->currentMaterial) {
-			selectedMaterialNode->setLabelText(mainWindow->postPane->currentMaterial->getName());
-		}
-		setHasChanges(true);
-	}
-
-	if(event->getDispatcher() == materialBrowser->newPostButton && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
-	
-		Material *newMaterial = CoreServices::getInstance()->getMaterialManager()->createMaterial("PostEffect"+String::IntToString(postMaterials.size()), "PassThrough");
-			newMaterial->screenMaterial = true;
-			materialBrowser->addPostMaterial(newMaterial)->setSelected();
-			postMaterials.push_back(newMaterial);
-			setHasChanges(true);			
-	}	
-
+		
 	if(event->getDispatcher() == materialBrowser->newMaterialButton && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
 		Material *newMaterial = CoreServices::getInstance()->getMaterialManager()->createMaterial("Untitled", "DefaultShader");
 			materialBrowser->addMaterial(newMaterial)->setSelected();
 			materials.push_back(newMaterial);
-			setHasChanges(true);			
-	}	
-
-	if(event->getDispatcher() == materialBrowser->newShaderButton && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
-			Shader *newShader = CoreServices::getInstance()->getMaterialManager()->createShader("glsl", "Untitled", "default/Unlit.vert", "default/Unlit.frag", false);
-			if(newShader) {
-				materialBrowser->addShader(newShader);
-				shaders.push_back(newShader);
-				CoreServices::getInstance()->getMaterialManager()->addShader(newShader);
-				setHasChanges(true);	
-			} else {
-				printf("Error creating shader!\n");
-			}
-	}	
-
-	if(event->getDispatcher() == materialBrowser->newCubemapButton && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {	
-		Cubemap *cubemap = CoreServices::getInstance()->getRenderer()->createCubemap(
-							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, "default.png"),
-							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, "default.png"),
-							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, "default.png"),
-							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, "default.png"),
-							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, "default.png"),
-							 (Texture*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_TEXTURE, "default.png"));
-		cubemap->setResourceName("Cubemap"+String::IntToString(cubemaps.size()));
-		cubemaps.push_back(cubemap);
-		materialBrowser->addCubemap(cubemap);
-		setHasChanges(true);
-		CoreServices::getInstance()->getResourceManager()->addResource(cubemap);
 	}	
 		
-	if(event->getDispatcher() == materialBrowser->removeButton && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
-
-				mainWindow->materialPane->enabled = false;
-				mainWindow->shaderPane->enabled = false;
-				mainWindow->cubemapPane->enabled = false;
-				mainWindow->postPane->enabled = false;
-				
-				if(materialBrowser->selectedData) {
-				if(materialBrowser->selectedData->material) {
-					for(int i=0; i < materials.size(); i++) {
-						if(materials[i] == materialBrowser->selectedData->material) {
-							materials.erase(materials.begin()+i);
-							materialBrowser->removeSelected();
-							break;							
-						}
-					}
-				} else if(materialBrowser->selectedData->shader) {
-					for(int i=0; i < shaders.size(); i++) {
-						if(shaders[i] == materialBrowser->selectedData->shader) {
-							shaders.erase(shaders.begin()+i);
-							materialBrowser->removeSelected();							
-							break;
-						}
-					}				
-				} else if(materialBrowser->selectedData->cubemap) {
-					for(int i=0; i < cubemaps.size(); i++) {
-						if(cubemaps[i] == materialBrowser->selectedData->cubemap) {
-							cubemaps.erase(cubemaps.begin()+i);
-							materialBrowser->removeSelected();							
-							break;
-						}
-					}								
-				} else if(materialBrowser->selectedData->postMaterial) {
-					for(int i=0; i < postMaterials.size(); i++) {
-						if(postMaterials[i] == materialBrowser->selectedData->postMaterial) {
-							postMaterials.erase(postMaterials.begin()+i);
-							materialBrowser->removeSelected();							
-							break;
-						}
-					}												
-				}	
-				}			
-		
-	}
 
 	if(event->getDispatcher() == materialBrowser) {
 		if(event->getEventType() == "" && event->getEventCode() == Event::CHANGE_EVENT) {
 			if(materialBrowser->selectedData)  {
-				mainWindow->materialPane->enabled = false;
-				mainWindow->shaderPane->enabled = false;
-				mainWindow->cubemapPane->enabled = false;
-				mainWindow->postPane->enabled = false;
-																
 				if(materialBrowser->selectedData->material) {
-					selectedMaterialNode = materialBrowser->selectedNode;				
-					mainWindow->materialPane->setMaterial(materialBrowser->selectedData->material);					
-				} else if(materialBrowser->selectedData->shader) {
-					selectedMaterialNode = materialBrowser->selectedNode;				
-					mainWindow->shaderPane->setShader(materialBrowser->selectedData->shader);
-				} else if(materialBrowser->selectedData->cubemap) {
-					selectedMaterialNode = materialBrowser->selectedNode;				
-					mainWindow->cubemapPane->setCubemap(materialBrowser->selectedData->cubemap);
-				} else if(materialBrowser->selectedData->postMaterial) {
-					selectedMaterialNode = materialBrowser->selectedNode;				
-					mainWindow->postPane->setMaterial(materialBrowser->selectedData->postMaterial);
+					mainWindow->materialPane->setMaterial(materialBrowser->selectedData->material);
+					selectedMaterialNode = materialBrowser->selectedNode;
 				}
-
 			}			
 		}
 	}
 }
 
 void PolycodeMaterialEditor::Resize(int x, int y) {
+	grid->setImageCoordinates(0,0,x,y);	
 	mainSizer->Resize(x,y);
 	PolycodeEditor::Resize(x,y);
 }
diff --git a/IDE/Contents/Source/PolycodeProject.cpp b/IDE/Contents/Source/PolycodeProject.cpp
--- a/IDE/Contents/Source/PolycodeProject.cpp
+++ b/IDE/Contents/Source/PolycodeProject.cpp
@@ -40,45 +40,61 @@
 		return false;
 	}
 	
-	if(!configFile.root.readString("entryPoint", &(data.entryPoint))) {
+	if(configFile.root["entryPoint"]) {	
+		data.entryPoint = configFile.root["entryPoint"]->stringVal;
+	} else {
 		data.entryPoint = "Source/Main.lua";
 		configFile.root.addChild("entryPoint", "Source/Main.lua");
 	}
 	
-	if(!configFile.root.readInt("defaultWidth", &(data.defaultWidth))) {
+	if(configFile.root["defaultWidth"]) {	
+		data.defaultWidth = configFile.root["defaultWidth"]->intVal;
+	} else {
 		data.defaultWidth = 640;	
 		configFile.root.addChild("defaultWidth", 640);			
 	}
 	
-	if(!configFile.root.readInt("defaultHeight", &(data.defaultHeight))) {
+	if(configFile.root["defaultHeight"]) {	
+		data.defaultHeight = configFile.root["defaultHeight"]->intVal;
+	} else {
 		data.defaultHeight = 480;	
 		configFile.root.addChild("defaultHeight", 480);		
 	}
 	
-	if(!configFile.root.readString("textureFiltering", &(data.filteringMode))) {
+	if(configFile.root["textureFiltering"]) {	
+		data.filteringMode = configFile.root["textureFiltering"]->stringVal;
+	} else {
 		data.filteringMode = "linear";
 		configFile.root.addChild("textureFiltering", String("linear"));	
 	}
 	
 
-	if(!configFile.root.readBool("vSync", &(data.vSync))) {
+	if(configFile.root["vSync"]) {	
+		data.vSync = configFile.root["vSync"]->boolVal;
+	} else {
 		data.vSync = false;
 		configFile.root.addChild("vSync", false);		
 	}
 
 
-	if(!configFile.root.readInt("antiAliasingLevel", &(data.aaLevel))) {
+	if(configFile.root["antiAliasingLevel"]) {
+		data.aaLevel = configFile.root["antiAliasingLevel"]->intVal;
+	} else {
 		data.aaLevel = 0;
 		configFile.root.addChild("antiAliasingLevel", 0);		
 	}
 
 
-	if(!configFile.root.readInt("anisotropyLevel", &(data.anisotropy))) {
+	if(configFile.root["anisotropyLevel"]) {
+		data.anisotropy = configFile.root["anisotropyLevel"]->intVal;
+	} else {
 		data.anisotropy = 0;
 		configFile.root.addChild("anisotropyLevel", 0);		
 	}
 
-	if(!configFile.root.readInt("frameRate", &(data.frameRate))) {
+	if(configFile.root["frameRate"]) {
+		data.frameRate = configFile.root["frameRate"]->intVal;	
+	} else {
 		data.frameRate = 60;
 		configFile.root.addChild("frameRate", 60);
 	}
@@ -87,9 +103,6 @@
 	if(configFile.root["modules"]) {
 		for(int i=0; i < configFile.root["modules"]->length; i++) {
 			ObjectEntry *module = (*configFile.root["modules"])[i];
-
-			if(module->type != ObjectEntry::STRING_ENTRY) continue;
-			
 			data.modules.push_back(module->stringVal);
 			CoreServices::getInstance()->getResourceManager()->addArchive("Standalone/Modules/"+module->stringVal+"/API");
 			
@@ -100,10 +113,11 @@
 	if(configFile.root["fonts"]) {
 		for(int i=0; i < configFile.root["fonts"]->length; i++) {
 			ObjectEntry *font = (*configFile.root["fonts"])[i];
+			ObjectEntry *fontName = (*font)["name"];
+			ObjectEntry *fontPath = (*font)["path"];
 			
-			String fontName, fontPath;
-			if(font->readString("name", &fontName) && font->readString("path", &fontPath)) {
-				ProjectFontData fontData = ProjectFontData(fontName, fontPath);
+			if(fontName && fontPath) {
+				ProjectFontData fontData = ProjectFontData(fontName->stringVal, fontPath->stringVal);
 				data.fonts.push_back(fontData);
 			}
 		}
@@ -111,18 +125,16 @@
 
 	if(configFile.root["backgroundColor"]) {
 		ObjectEntry *color = configFile.root["backgroundColor"];
-		
-		bool haveAllColors = 1;
-		haveAllColors &= color->readNumber("red", &(data.backgroundColorR));
-		haveAllColors &= color->readNumber("green", &(data.backgroundColorG));
-		haveAllColors &= color->readNumber("blue", &(data.backgroundColorB));
-
-		if(!haveAllColors) {
+		if((*color)["red"] && (*color)["green"] && (*color)["blue"]) {
+			data.backgroundColorR = (*color)["red"]->NumberVal;
+			data.backgroundColorG = (*color)["green"]->NumberVal;
+			data.backgroundColorB = (*color)["blue"]->NumberVal;
+		} else {
 			data.backgroundColorR = 0.0;
 			data.backgroundColorG = 0.0;
 			data.backgroundColorB = 0.0;
 			
-			if(!color) color = configFile.root.addChild("backgroundColor");			
+			ObjectEntry *color = configFile.root.addChild("backgroundColor");			
 			color->addChild("red", 0.0);
 			color->addChild("green", 0.0);
 			color->addChild("blue", 0.0);						
@@ -215,6 +227,9 @@
 	}
 
 	
+	unsigned int afMap[6] = {0,1,2,4,8,16};
+	unsigned int aaMap[4] = {0,2,4,6};
+		
 	configFile.root["antiAliasingLevel"]->intVal = data.aaLevel;
 	configFile.root["anisotropyLevel"]->intVal = data.anisotropy;
 	configFile.root["vSync"]->boolVal = data.vSync;
diff --git a/IDE/Contents/Source/PolycodeProjectBrowser.cpp b/IDE/Contents/Source/PolycodeProjectBrowser.cpp
--- a/IDE/Contents/Source/PolycodeProjectBrowser.cpp
+++ b/IDE/Contents/Source/PolycodeProjectBrowser.cpp
@@ -102,7 +102,7 @@
 
 	if(event->getDispatcher() == contextMenu) {
 		UIMenuItem *item = contextMenu->getSelectedItem();
-
+		
 		PolycodeProjectBrowserEvent *bEvent = new PolycodeProjectBrowserEvent();			
 		bEvent->command = item->_id;
 		dispatchEvent(bEvent, PolycodeProjectBrowserEvent::HANDLE_MENU_COMMAND);
@@ -119,16 +119,14 @@
 
 			contextMenu->addOption("New File", "add_new_file");
 			contextMenu->addOption("New Project", "add_new_project");
-			contextMenu->addOption("New Folder", "add_new_folder");
-			contextMenu->addDivider();
+			contextMenu->addOption("New Folder", "add_new_folder");			
+			contextMenu->addOption("----------------", "");			
 			contextMenu->addOption("Add external files", "add_files");			
-			contextMenu->addDivider();
+			contextMenu->addOption("----------------", "");
 			contextMenu->addOption("Refresh", "refresh");
 			contextMenu->addOption("Rename", "rename");						
-			contextMenu->addDivider();
-			contextMenu->addOption("Remove", "remove");
-
-			contextMenu->fitToScreenVertical();
+			contextMenu->addOption("----------------", "");		
+			contextMenu->addOption("Remove", "remove");	
 			
 			contextMenu->addEventListener(this, UIEvent::OK_EVENT);
 											
@@ -197,7 +195,7 @@
 				data->fileEntry = entry;
 				data->type = 1;
 				data->parentProject = parentProject;			
-				node->addTreeChild("file.png", entry.name, (void*) data);
+				UITree *newChild = node->addTreeChild("file.png", entry.name, (void*) data);
 			}
 		}
 	}		
diff --git a/IDE/Contents/Source/PolycodeProjectManager.cpp b/IDE/Contents/Source/PolycodeProjectManager.cpp
--- a/IDE/Contents/Source/PolycodeProjectManager.cpp
+++ b/IDE/Contents/Source/PolycodeProjectManager.cpp
@@ -78,7 +78,7 @@
 	}	
 	
 	if(activeProject == project) {
-		this->setActiveProject(NULL);
+		activeProject = NULL;
 	}
 	
 	delete project;
@@ -137,14 +137,14 @@
 	openProject(projectLocation+"/"+projectName+"/"+projectName+".polyproject");	
 }
 
-void PolycodeProjectManager::exportProject(PolycodeProject *project, String exportPath, bool macOS, bool windows, bool linux_, bool compileScripts) {
+void PolycodeProjectManager::exportProject(PolycodeProject *project, String exportPath, bool macOS, bool windows, bool linux_) {
 
 	String polycodeBasePath = CoreServices::getInstance()->getCore()->getDefaultWorkingDirectory();
 
 	String publishPath = polycodeBasePath+"/Standalone/Publish";
 	
 	String polyappPath = PolycodeToolLauncher::generateTempPath(project) + ".polyapp";
-	PolycodeToolLauncher::buildProject(project, polyappPath, compileScripts);	
+	PolycodeToolLauncher::buildProject(project, polyappPath);	
 	
 	if(macOS) {
 		PolycodeConsole::print("Exporting Mac version to "+exportPath+"/Mac \n");
diff --git a/IDE/Contents/Source/PolycodeProps.cpp b/IDE/Contents/Source/PolycodeProps.cpp
--- a/IDE/Contents/Source/PolycodeProps.cpp
+++ b/IDE/Contents/Source/PolycodeProps.cpp
@@ -22,97 +22,11 @@
  
 #include "PolycodeProps.h"
 #include "PolycodeFrame.h"
-#include "PolyCubemap.h"
 
 extern UIColorPicker *globalColorPicker;
 extern PolycodeFrame *globalFrame;
 extern UIGlobalMenu *globalMenu;
 
-PolycodeEditorPropActionData *PropDataBool(bool val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->boolVal = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataInt(int val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->intVal = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataNumber(Number val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->numVal = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataString(String val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->stringVal = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataColor(Color val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->colorVal = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataVector3(Vector3 val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->vector3Val = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataVector2(Vector2 val) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->vector2Val = val;
-	return data;
-}
-
-PolycodeEditorPropActionData *PropDataEntity(Entity *entity) {
-	PolycodeEditorPropActionData *data = new PolycodeEditorPropActionData();
-	data->entity = entity->Clone(false, true);
-	data->entity->ownsChildren = false;
-	for(int i=0; i < data->entity->getNumChildren(); i++) {
-		data->entity->removeChild(data->entity->getChildAtIndex(i));
-	}
-	return data;
-}
-
-PropEvent::PropEvent(PropProp *prop, PropSheet *sheet, PolycodeEditorPropActionData *beforeData, PolycodeEditorPropActionData *afterData) : Event() {
-	this->prop = prop;
-	this->sheet = sheet;
-	this->beforeData = beforeData;
-	this->afterData = afterData;	
-	this->eventType = "PropEvent";
-	
-	if(this->beforeData) {
-		this->beforeData->sheet = sheet;
-		this->beforeData->prop = prop;
-	}
-
-	if(this->afterData) {
-		this->afterData->sheet = sheet;
-		this->afterData->prop = prop;
-	}
-		
-}
-
-void PropEvent::setSheet(PropSheet *sheet) {
-	if(this->beforeData) {
-		this->beforeData->sheet = sheet;
-	}
-
-	if(this->afterData) {
-		this->afterData->sheet = sheet;
-	}
-}
-
-PropEvent::~PropEvent() {
-
-}
-
 PropList::PropList(String caption) : UIElement() {
 
 	setPositionMode(ScreenEntity::POSITION_TOPLEFT);
@@ -165,7 +79,7 @@
 void PropList::Resize(Number width, Number height) {
 	setWidth(width);
 	setHeight(height);
-		
+	
 	scrollContainer->Resize(width, height-30);
 	
 	bg->setShapeSize(width, height);
@@ -192,9 +106,7 @@
 void PropList::handleEvent(Event *event) {
 	if(event->getEventType() == "" && event->getEventCode() == Event::COMPLETE_EVENT) {
 		Resize(width, height);
-	} else if(event->getEventCode() == Event::CHANGE_EVENT) {
-	
-	}
+	}	
 }
 
 void PropList::addPropSheet(PropSheet *sheet) {
@@ -202,15 +114,12 @@
 	props.push_back(sheet);
 	Resize(width, height);
 	sheet->addEventListener(this, Event::COMPLETE_EVENT);
-	sheet->addEventListener(this, Event::CHANGE_EVENT);	
 }
 
 PropSheet::PropSheet(String caption, String type) : UIElement() {
 	this->caption = caption;
 	this->type = type;
 	
-	customUndoHandler = false;
-	
 	bg = new ScreenShape(ScreenShape::SHAPE_RECT, 30,30);
 	addChild(bg);
 	bg->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiSmallHeaderBgColor"));
@@ -248,13 +157,11 @@
 		if(collapsed) {
 			collapseButton->enabled = false;
 			expandButton->enabled = true;	
-			contents->enabled = false;	
-			contents->visible = false;	
+			contents->enabled = false;		
 		} else {
 			collapseButton->enabled = true;
 			expandButton->enabled = false;				
 			contents->enabled = true;			
-			contents->visible = true;			
 		}
 	}
 	dispatchEvent(new Event(), Event::COMPLETE_EVENT);	
@@ -270,14 +177,7 @@
 		if(event->getDispatcher() == expandButton) {
 			setCollapsed(false);
 		}
-	}
-	
-	if(!customUndoHandler) {
-	if(event->getEventCode() == PropEvent::EVENT_PROP_CHANGE ) {
-		PropEvent *propEvent = (PropEvent*) event;
-		PropEvent *newEvent = new PropEvent(propEvent->prop, this, propEvent->beforeData, propEvent->afterData);		
-		dispatchEvent(newEvent, PropEvent::EVENT_PROP_CHANGE);
-	}
+
 	}
 }
 
@@ -295,7 +195,6 @@
 	
 	for(int i=0; i < props.size(); i++) {
 		props[i]->setPosition(0, yOffset);
-		props[i]->setPropWidth(width);
 		yOffset += props[i]->getHeight();
 	}
 }
@@ -304,20 +203,10 @@
 	contents->addChild(prop);
 	props.push_back(prop);
 	prop->addEventListener(this, Event::CHANGE_EVENT);
-	prop->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);	
 	Resize(width, height);
 }
 
-
-void PropSheet::applyPropActionData(PolycodeEditorPropActionData *data) {
-	data->prop->setPropData(data);
-}
-
-
-PropProp::PropProp(String caption, String type) : UIElement() {
-
-	suppressChangeEvent = false;
-	propType = type;
+PropProp::PropProp(String caption) : UIElement() {
 	label = new ScreenLabel(caption, 12);
 	label->color.a = 0.4;
 	label->setPosition(0, 5);
@@ -335,20 +224,17 @@
 
 }
 
-Vector2Prop::Vector2Prop(String caption) : PropProp(caption, "Vector2") {
-
-	labelX = new ScreenLabel("X:", 11);
-	labelX->color.a = 0.4;
-	propContents->addChild(labelX);
-	labelX->setPosition(-20, 6);	
+Vector2Prop::Vector2Prop(String caption) : PropProp(caption) {
 
-	labelY = new ScreenLabel("Y:", 11);
-	labelY->color.a = 0.4;
-	propContents->addChild(labelY);
-	labelY->setPosition(60, 6);	
-	
-	positionX = NULL;
-	positionY = NULL;
+	ScreenLabel *label = new ScreenLabel("X:", 11);
+	label->color.a = 0.4;
+	propContents->addChild(label);
+	label->setPosition(-20, 6);	
+
+	label = new ScreenLabel("Y:", 11);
+	label->color.a = 0.4;
+	propContents->addChild(label);
+	label->setPosition(60, 6);	
 
 	positionX = new UITextInput(false, 50, 12);
 	positionX->addEventListener(this, UIEvent::CHANGE_EVENT);
@@ -368,45 +254,17 @@
 
 }
 
-void Vector2Prop::setPropWidth(Number width) {
-	labelX->setPosition(0, 6);
-	labelY->setPosition(((width-propContents->position.x-PROP_PADDING)/2.0), 6);	
-	
-	positionX->position.x = labelX->position.x + 20;
-	positionX->Resize(floor(((width-propContents->position.x-PROP_PADDING)/2.0)-25), positionX->getHeight());
-
-	positionY->position.x = labelY->position.x + 20;
-	positionY->Resize(floor(((width-propContents->position.x-PROP_PADDING)/2.0)-25), positionY->getHeight());
-
-}
-
 void Vector2Prop::handleEvent(Event *event) {
 	if(event->getDispatcher() == positionX || event->getDispatcher() == positionY) {
-		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-		
-			if(positionX && positionY) {
-				lastData = currentData;
-				currentData = Vector2(atof(positionX->getText().c_str()), atof(positionY->getText().c_str()));
-			}
-			if(!suppressChangeEvent) {
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				dispatchEvent(new PropEvent(this, NULL, PropDataVector2(lastData), PropDataVector2(currentData)), PropEvent::EVENT_PROP_CHANGE);
-
-			}
+		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 		}
 	}
 }
 
-void Vector2Prop::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->vector2Val);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);
-}
-
 void Vector2Prop::set(Vector2 position) {
-	suppressChangeEvent = true;
-	positionX->setText(String::NumberToString(position.x, 5));
-	positionY->setText(String::NumberToString(position.y, 5));
-	suppressChangeEvent = false;	
+	positionX->setText(String::NumberToString(position.x));
+	positionY->setText(String::NumberToString(position.y));
 }
 
 Vector2 Vector2Prop::get() {
@@ -417,7 +275,7 @@
 
 }
 
-CustomProp::CustomProp(String key, String value) : PropProp("", "Custom") {
+CustomProp::CustomProp(String key, String value) : PropProp("") {
 	keyEntry = new UITextInput(false, 120, 12);
 	keyEntry->setText(key);
 	keyEntry->addEventListener(this, UIEvent::CHANGE_EVENT);
@@ -440,12 +298,7 @@
 }
 
 CustomProp::~CustomProp() {
-	keyEntry->removeAllHandlersForListener(this);
-	valueEntry->removeAllHandlersForListener(this);
-	removeButton->removeAllHandlersForListener(this);
-	delete removeButton;
-	delete keyEntry;
-	delete valueEntry;
+
 }
 
 void CustomProp::handleEvent(Event *event) {
@@ -474,7 +327,7 @@
 }
 
 
-StringProp::StringProp(String caption) : PropProp(caption, "String") {
+StringProp::StringProp(String caption) : PropProp(caption) {
 
 	stringEntry = new UITextInput(false, 150, 12);
 	stringEntry->addEventListener(this, UIEvent::CHANGE_EVENT);
@@ -482,40 +335,23 @@
 	propContents->addChild(stringEntry);
 	stringEntry->setPosition(0, 0);
 	setHeight(30);
-}
 
-void StringProp::setPropWidth(Number width) {
-	stringEntry->Resize(floor((width - PROP_PADDING) * 0.5), stringEntry->getHeight());	
-	stringEntry->setPosition(width-105-PROP_PADDING-stringEntry->getWidth(), 2);
-	
 }
 
 void StringProp::handleEvent(Event *event) {
 	if(event->getDispatcher() == stringEntry) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
-			lastValue = currentValue;
-			currentValue = stringEntry->getText();
-			if(!suppressChangeEvent) {
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				dispatchEvent(new PropEvent(this, NULL, PropDataString(lastValue), PropDataString(currentValue)), PropEvent::EVENT_PROP_CHANGE);
-			}
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 		}
 	}
 }
 
-void StringProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->stringVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
-}
-
 void StringProp::set(String str) {
-	suppressChangeEvent = true;
 	stringEntry->setText(str);
-	suppressChangeEvent = false;	
 }
 
 String StringProp::get() {
-	return currentValue;
+	return stringEntry->getText();
 }
 	
 		
@@ -523,8 +359,8 @@
 
 }
 
-SliderProp::SliderProp(String caption, Number min, Number max) : PropProp(caption, "Slider") {
-	
+SliderProp::SliderProp(String caption, Number min, Number max) : PropProp(caption) {
+
 	slider = new UIHSlider(min, max, 100);
 	slider->addEventListener(this, UIEvent::CHANGE_EVENT);
 	slider->setPosition(5, 8);
@@ -533,47 +369,28 @@
 	valueLabel = new ScreenLabel("0.0", 10);
 	propContents->addChild(valueLabel);
 	valueLabel->setPosition(120, 5);
-	valueLabel->color.a = 0.6;
+	valueLabel->color.a = 0.5;
+	
 	setHeight(30);
-}
 
-void SliderProp::setPropWidth(Number width) {
-	slider->Resize(width - propContents->position.x - PROP_PADDING - 50, slider->getHeight());
-	valueLabel->setPosition(width - propContents->position.x - PROP_PADDING - 30, 5);	
 }
 
 void SliderProp::handleEvent(Event *event) {
 	if(event->getDispatcher() == slider) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
-			lastValue = currentValue;
-			currentValue = slider->getSliderValue();		
-			if(!suppressChangeEvent) {
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				dispatchEvent(new PropEvent(this, NULL, PropDataNumber(lastValue), PropDataNumber(currentValue)), PropEvent::EVENT_PROP_CHANGE);
-			}
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 			valueLabel->setText(String::NumberToString(slider->getSliderValue()));
 		}
 	}
 }
 
-void SliderProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->numVal);
-	lastValue = currentValue;
-	currentValue = slider->getSliderValue();			
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
-}
-
 void SliderProp::set(Number number) {
-	suppressChangeEvent = true;
 	slider->setSliderValue(number);
-	lastValue = currentValue;
-	currentValue = slider->getSliderValue();	
 	valueLabel->setText(String::NumberToString(slider->getSliderValue()));	
-	suppressChangeEvent = false;	
 }
 
 Number SliderProp::get() {
-	return currentValue;
+	return slider->getSliderValue();
 }
 	
 		
@@ -581,7 +398,7 @@
 
 }
 
-NumberProp::NumberProp(String caption) : PropProp(caption, "Number") {
+NumberProp::NumberProp(String caption) : PropProp(caption) {
 
 	numberEntry = new UITextInput(false, 50, 12);
 	numberEntry->addEventListener(this, UIEvent::CHANGE_EVENT);
@@ -594,38 +411,20 @@
 
 }
 
-void NumberProp::setPropWidth(Number width) {
-	numberEntry->Resize(floor((width - PROP_PADDING) * 0.5), numberEntry->getHeight());	
-	numberEntry->setPosition(width-105-PROP_PADDING-numberEntry->getWidth(), 2);
-}
-
-void NumberProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->numVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
-}
-
 void NumberProp::handleEvent(Event *event) {
 	if(event->getDispatcher() == numberEntry) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
-			lastValue = currentValue;
-			currentValue = atof(numberEntry->getText().c_str());
-			if(!suppressChangeEvent) {
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				dispatchEvent(new PropEvent(this, NULL, PropDataNumber(lastValue), PropDataNumber(currentValue)), PropEvent::EVENT_PROP_CHANGE);
-				
-			}
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 		}
 	}
 }
 
 void NumberProp::set(Number number) {
-	suppressChangeEvent = true;
-	numberEntry->setText(String::NumberToString(number), 5);
-	suppressChangeEvent = false;	
+	numberEntry->setText(String::NumberToString(number));
 }
 
 Number NumberProp::get() {
-	return currentValue;
+	return atof(numberEntry->getText().c_str());
 }
 	
 		
@@ -633,7 +432,7 @@
 
 }
 
-ColorProp::ColorProp(String caption) : PropProp(caption, "Color") {
+ColorProp::ColorProp(String caption) : PropProp(caption) {
 
 	colorEntry = new UIColorBox(globalColorPicker, Color(), 45, 25);
 	colorEntry->addEventListener(this, UIEvent::CHANGE_EVENT);
@@ -645,34 +444,18 @@
 
 void ColorProp::handleEvent(Event *event) {
 	if(event->getDispatcher() == colorEntry) {
-		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-			lastColor = currentColor;
-			currentColor = colorEntry->getSelectedColor();
-			if(!suppressChangeEvent) {
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				dispatchEvent(new PropEvent(this, NULL, PropDataColor(lastColor), PropDataColor(currentColor)), PropEvent::EVENT_PROP_CHANGE);
-			}
+		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 		}
 	}
 }
 
-
-void ColorProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->colorVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);
-}
-
-
 void ColorProp::set(Color color) {
-	suppressChangeEvent = true;
 	colorEntry->setBoxColor(color);
-	lastColor = currentColor;
-	currentColor = colorEntry->getSelectedColor();	
-	suppressChangeEvent = false;	
 }
 
 Color ColorProp::get() {
-	return currentColor;
+	return colorEntry->getSelectedColor();
 }
 	
 		
@@ -680,44 +463,30 @@
 
 }
 
-ComboProp::ComboProp(String caption) : PropProp(caption, "Combo") {
+ComboProp::ComboProp(String caption) : PropProp(caption) {
+
 	comboEntry = new UIComboBox(globalMenu, 150);
 	comboEntry->addEventListener(this, UIEvent::CHANGE_EVENT);
 	propContents->addChild(comboEntry);
 	comboEntry->setPosition(-3, 0);
 	setHeight(30);
-}
 
-void ComboProp::setPropWidth(Number width) {
-	comboEntry->Resize(width - propContents->position.x - PROP_PADDING, comboEntry->getHeight());
-}
-
-void ComboProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->intVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
 }
 
 void ComboProp::handleEvent(Event *event) {
 	if(event->getDispatcher() == comboEntry) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
-			lastValue = currentValue;
-			currentValue = comboEntry->getSelectedIndex();
-			if(!suppressChangeEvent) {
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				dispatchEvent(new PropEvent(this, NULL, PropDataInt(lastValue), PropDataInt(currentValue)), PropEvent::EVENT_PROP_CHANGE);
-			}
+			dispatchEvent(new Event(), Event::CHANGE_EVENT);
 		}
 	}
 }
 
 void ComboProp::set(unsigned int index) {
-	suppressChangeEvent = true;
 	comboEntry->setSelectedIndex(index);
-	suppressChangeEvent = false;	
 }
 
 unsigned int ComboProp::get() {
-	return currentValue;
+	return comboEntry->getSelectedIndex();
 }
 	
 		
@@ -725,7 +494,7 @@
 
 }
 
-BoolProp::BoolProp(String caption) : PropProp(caption, "Bool") {
+BoolProp::BoolProp(String caption) : PropProp(caption) {
 
 	checkEntry = new UICheckBox("", false);
 	checkEntry->addEventListener(this, UIEvent::CHANGE_EVENT);
@@ -735,30 +504,20 @@
 
 }
 
-void BoolProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->boolVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
-}
-
 void BoolProp::handleEvent(Event *event) {
 	if(event->getDispatcher() == checkEntry) {
 		if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CHANGE_EVENT) {		
-			lastData = currentData;
-			currentData = checkEntry->isChecked();
 			dispatchEvent(new Event(), Event::CHANGE_EVENT);
-			dispatchEvent(new PropEvent(this, NULL, PropDataBool(lastData), PropDataBool(currentData)), PropEvent::EVENT_PROP_CHANGE);
 		}
 	}
 }
 
 void BoolProp::set(bool val) {
 	checkEntry->setChecked(val);
-	lastData = currentData;
-	currentData = checkEntry->isChecked();	
 }
 
 bool BoolProp::get() {
-	return currentData;
+	return checkEntry->isChecked();
 }
 	
 		
@@ -767,7 +526,7 @@
 }
 
 
-SoundProp::SoundProp(String caption) : PropProp(caption, "Sound"){
+SoundProp::SoundProp(String caption) : PropProp(caption){
 
 	soundFile = new ScreenLabel("", 11);
 	soundFile->setPosition(0, 5);
@@ -803,8 +562,7 @@
 		set(newSoundPath);
 		
 		globalFrame->assetBrowser->removeAllHandlersForListener(this);
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		dispatchEvent(new PropEvent(this, NULL, PropDataString(lastData), PropDataString(currentData)), PropEvent::EVENT_PROP_CHANGE);
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
 		globalFrame->hideModal();
 		
 	}
@@ -826,19 +584,10 @@
 
 }
 
-void SoundProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->stringVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
-}
-
 void SoundProp::set(String soundPath) {
 	if(previewSound) {
 		delete previewSound;
 	}	
-	
-	lastData = currentData;
-	currentData = soundPath;
-	
 	previewSound = new Sound(soundPath);	
 	soundFile->setText(soundPath);
 }
@@ -850,7 +599,7 @@
 	return "";
 }
 
-BezierRGBACurveProp::BezierRGBACurveProp(String caption) : PropProp(caption, "BezierRGBA") {
+BezierRGBACurveProp::BezierRGBACurveProp(String caption) : PropProp(caption) {
 
 
 	changeButton = new UIButton("Edit", 120);
@@ -883,7 +632,7 @@
 	}
 }
 
-BezierCurveProp::BezierCurveProp(String caption, String curveName) : PropProp(caption, "BezierCurve") {
+BezierCurveProp::BezierCurveProp(String caption, String curveName) : PropProp(caption) {
 
 	this->curveName = curveName;
 
@@ -911,7 +660,7 @@
 	}
 }
 
-TextureProp::TextureProp(String caption) : PropProp(caption, "Texture"){
+TextureProp::TextureProp(String caption) : PropProp(caption){
 	previewShape = new ScreenShape(ScreenShape::SHAPE_RECT, 48, 48);
 	previewShape->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 	previewShape->setPosition(2, 1);
@@ -921,37 +670,24 @@
 	propContents->addChild(changeButton);
 	changeButton->setPosition(60, 5);
 	changeButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	
-	textureLabel = new ScreenLabel("", 12, "sans");
-	propContents->addChild(textureLabel);
-	textureLabel->setPosition(-100, 32);
-	textureLabel->color.a = 0.3;
-		
-	setHeight(60);	
-}
-
-void TextureProp::setPropWidth(Number width) {
-	changeButton->setPosition(width-changeButton->getWidth()-PROP_PADDING-100, 5);
-	previewShape->setPosition(changeButton->getPosition().x-48-10, 1);	
+	setHeight(60);
 }
 
 TextureProp::~TextureProp() {
 
 }
 
-void TextureProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(data->stringVal));
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);
-}
 
 void TextureProp::handleEvent(Event *event) {
 
 	if(event->getDispatcher() == globalFrame->assetBrowser && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::OK_EVENT) {
-		String texturePath = globalFrame->assetBrowser->getSelectedAssetPath();				
-		set(CoreServices::getInstance()->getMaterialManager()->createTextureFromFile(texturePath));		
+		String texturePath = globalFrame->assetBrowser->getSelectedAssetPath();
+		
+		previewShape->loadTexture(texturePath);
+		
 		globalFrame->assetBrowser->removeAllHandlersForListener(this);
 		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		dispatchEvent(new PropEvent(this, NULL, PropDataString(lastData), PropDataString(currentData)), PropEvent::EVENT_PROP_CHANGE);
+		
 		globalFrame->hideModal();
 		
 	}
@@ -967,20 +703,12 @@
 
 void TextureProp::set(Texture *texture) {
 	previewShape->setTexture(texture);
-	
-	lastData = currentData;
-	currentData = texture->getResourcePath();
-	
-	OSFileEntry entry = OSFileEntry(texture->getResourcePath(), OSFileEntry::TYPE_FILE);		
-	textureLabel->setText(entry.name);		
-	
 }
 
 Texture* TextureProp::get() {
 	return previewShape->getTexture();
 }
-
-ScreenSpriteProp::ScreenSpriteProp(String caption) : PropProp(caption, "ScreenSprite"){
+ScreenSpriteProp::ScreenSpriteProp(String caption) : PropProp(caption){
 
 		previewSprite = new ScreenSprite("default/default.sprite");
 		previewSprite->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
@@ -1000,16 +728,26 @@
 
 }
 
+
 void ScreenSpriteProp::handleEvent(Event *event) {
 
 	if(event->getDispatcher() == globalFrame->assetBrowser && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::OK_EVENT) {
 		String filePath = globalFrame->assetBrowser->getSelectedAssetPath();
 		
-		set(filePath);
+		if(previewSprite) {
+			propContents->removeChild(previewSprite);
+			delete previewSprite;
+		}
+		
+		previewSprite = new ScreenSprite(filePath);
+		previewSprite->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
+		previewSprite->setPosition(2, 1);
+		previewSprite->setShapeSize(48,48);		
+		propContents->addChild(previewSprite);	
 		
 		globalFrame->assetBrowser->removeAllHandlersForListener(this);
 		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		dispatchEvent(new PropEvent(this, NULL, PropDataString(lastData), PropDataString(currentData)), PropEvent::EVENT_PROP_CHANGE);
+		
 		globalFrame->hideModal();
 	}
 
@@ -1022,11 +760,6 @@
 	}
 }
 
-void ScreenSpriteProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->stringVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);	
-}
-
 void ScreenSpriteProp::set(String fileName) {
 
 	if(fileName != previewSprite->getFileName()) {
@@ -1035,9 +768,6 @@
 			propContents->removeChild(previewSprite);
 			delete previewSprite;
 		}
-		lastData = currentData;
-		currentData = fileName;
-		
 		previewSprite = new ScreenSprite(fileName);
 		previewSprite->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 		previewSprite->setPosition(2, 1);
@@ -1050,7 +780,7 @@
 	return previewSprite->getFileName();
 }
 
-ScreenEntityInstanceProp::ScreenEntityInstanceProp(String caption) : PropProp(caption, "ScreenEntityInstance"){
+ScreenEntityInstanceProp::ScreenEntityInstanceProp(String caption) : PropProp(caption){
 	previewInstance = new ScreenEntityInstance("default/default.entity2d");
 	previewInstance->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 	previewInstance->setPosition(2, 1);
@@ -1073,11 +803,19 @@
 	if(event->getDispatcher() == globalFrame->assetBrowser && event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::OK_EVENT) {
 		String filePath = globalFrame->assetBrowser->getSelectedAssetPath();
 		
-		set(filePath);
+		propContents->removeChild(previewInstance);
+		delete previewInstance;
+		previewInstance = new ScreenEntityInstance(filePath);
+		previewInstance->setPosition(24, 24);
+		
+		Number radius = previewInstance->getCompoundBBoxRadius();
+		previewInstance->setScale(48.0/(radius*2.0), 48.0/(radius*2.0));
+		
+		propContents->addChild(previewInstance);
 		
 		globalFrame->assetBrowser->removeAllHandlersForListener(this);
 		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-		dispatchEvent(new PropEvent(this, NULL, PropDataString(lastData), PropDataString(currentData)), PropEvent::EVENT_PROP_CHANGE);
+		
 		globalFrame->hideModal();
 	}
 
@@ -1090,11 +828,6 @@
 	}
 }
 
-void ScreenEntityInstanceProp::setPropData(PolycodeEditorPropActionData* data) {
-	set(data->stringVal);
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);
-}
-
 void ScreenEntityInstanceProp::set(String fileName) {
 
 	if(fileName != previewInstance->getFileName()) {
@@ -1104,9 +837,6 @@
 		previewInstance->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 		previewInstance->setPosition(2, 1);
 		
-		lastData = currentData;
-		currentData = fileName;
-		
 		Number radius = previewInstance->getCompoundBBoxRadius();
 		if(radius > 48) {
 			previewInstance->setScale(48.0/(radius*2.0), 48.0/(radius*2.0));		
@@ -1155,6 +885,7 @@
 	if(!shape)
 		return;
 
+
 	if(event->getDispatcher() == strokeProp  && event->getEventCode() == Event::CHANGE_EVENT) {
 		lastStrokeVal = strokeProp->get();
 		shape->strokeEnabled = lastStrokeVal;
@@ -1164,7 +895,7 @@
 	if(event->getDispatcher() == shapeSize  && event->getEventCode() == Event::CHANGE_EVENT) {
 		lastShapeSize = shapeSize->get();
 		shape->setShapeSize(lastShapeSize.x, lastShapeSize.y);
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);	
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}
 
 	if(event->getDispatcher() == typeProp  && event->getEventCode() == Event::CHANGE_EVENT) {
@@ -1182,7 +913,7 @@
 	if(event->getDispatcher() == strokeSize  && event->getEventCode() == Event::CHANGE_EVENT) {
 		lastStrokeSize = strokeSize->get();
 		shape->strokeWidth = lastStrokeSize;
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);	
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}
 	
 	PropSheet::handleEvent(event);
@@ -1200,12 +931,10 @@
 		
 		if(lastShapeType != shape->getShapeType()-1) {
 			typeProp->set(shape->getShapeType()-1);			
-			lastShapeType = shape->getShapeType()-1;			
 		}
 		
 		if(lastStrokeVal != shape->strokeEnabled) {
 			strokeProp->set(shape->strokeEnabled);
-			lastStrokeVal = shape->strokeEnabled;
 		}
 		
 		if(lastStrokeColor != shape->strokeColor) {
@@ -1220,562 +949,30 @@
 	}
 }
 
-ShaderPassProp::ShaderPassProp(Material *material, int shaderIndex) : PropProp("", "ShaderPassProp") {
-	this->material = material;
-	this->shader = material->getShader(shaderIndex);
-	this->shaderIndex = shaderIndex;
-	
-	removeButton = new UIImageButton("Images/remove_icon.png");
-	removeButton->addEventListener(this, UIEvent::CLICK_EVENT);	
-	propContents->addChild(removeButton);
-	removeButton->setPosition(-110, 6);
-	
-	shaderComboBox = new UIComboBox(globalMenu, 100);
-	shaderComboBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	propContents->addChild(shaderComboBox);
-	
-	int index = 0;
-	MaterialManager *materialManager = CoreServices::getInstance()->getMaterialManager();
-	for(int i=0; i < materialManager->getNumShaders(); i++) {
-		if(materialManager->getShaderByIndex(i)->screenShader) {
-			shaderComboBox->addComboItem(materialManager->getShaderByIndex(i)->getName(), (void*)materialManager->getShaderByIndex(i));			
-			if(shader == materialManager->getShaderByIndex(i)) {
-				shaderComboBox->setSelectedIndex(index);
-			}
-			index++;
-		}
-	}	
-	
-	
-	editButton = new UIButton("Options", 30);
-	editButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	propContents->addChild(editButton);
-	setHeight(30);
-}
-
-ShaderPassProp::~ShaderPassProp() {
-
-}
-		
-void ShaderPassProp::handleEvent(Event *event) {
-	if(event->getDispatcher() == removeButton && event->getEventCode() == UIEvent::CLICK_EVENT) {
-		dispatchEvent(new Event(), Event::REMOVE_EVENT);
-	} else if(event->getDispatcher() == editButton && event->getEventCode() == UIEvent::CLICK_EVENT) {
-		dispatchEvent(new Event(), Event::SELECT_EVENT);		
-	} else if(event->getDispatcher() == shaderComboBox) {
-		Shader *selectedShader = (Shader*)shaderComboBox->getSelectedItem()->data;
-		if(selectedShader) {
-			if(material->getShader(shaderIndex) != selectedShader) {
-				material->removeShader(shaderIndex);				
-				ShaderBinding *newShaderBinding = selectedShader->createBinding();				
-				material->addShaderAtIndex(selectedShader, newShaderBinding, shaderIndex);
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-			}
-		}
-	}
-}
-
-void ShaderPassProp::setPropWidth(Number width) {
-	Number adjustedWidth = width-PROP_PADDING-5;
-	shaderComboBox->setPosition(-90, 0);
-	shaderComboBox->Resize(floor(adjustedWidth * 0.75), shaderComboBox->getHeight());
-
-	editButton->setPosition(-90 + shaderComboBox->getWidth() + 5, 0);
-	editButton->Resize(floor(adjustedWidth * 0.25), editButton->getHeight());
-}
-
-TargetBindingProp::TargetBindingProp(Shader *shader, Material *material, ShaderBinding *binding, RenderTargetBinding *targetBinding) : PropProp("", "TargetBindingProp") {
-	this->targetBinding = targetBinding;
-	this->material = material;
-	this->shader = shader;
-	this->binding = binding;
-		
-	removeButton = new UIImageButton("Images/remove_icon.png");
-	removeButton->addEventListener(this, UIEvent::CLICK_EVENT);	
-	propContents->addChild(removeButton);
-	removeButton->setPosition(-110, 6);
-
-	typeComboBox = new UIComboBox(globalMenu, 100);
-	typeComboBox->addComboItem("IN");		
-	typeComboBox->addComboItem("OUT");
-	typeComboBox->addComboItem("COLOR");
-	typeComboBox->addComboItem("DEPTH");		
-	typeComboBox->setSelectedIndex(targetBinding->mode);
-	typeComboBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	propContents->addChild(typeComboBox);
-
-	targetComboBox = new UIComboBox(globalMenu, 100);	
-	for(int i=0; i < material->getNumShaderRenderTargets(); i++) {
-		ShaderRenderTarget *target = material->getShaderRenderTarget(i);		
-		targetComboBox->addComboItem(target->id, (void*) target);
-		if(targetBinding->texture == target->texture) {
-			targetComboBox->setSelectedIndex(i);
-		}
-	}
-	targetComboBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	propContents->addChild(targetComboBox);
-	
-	textureComboBox = new UIComboBox(globalMenu, 100);	
-	for(int i=0; i < shader->expectedTextures.size(); i++) {
-		textureComboBox->addComboItem(shader->expectedTextures[i]);
-		if(shader->expectedTextures[i] == targetBinding->name) {
-			textureComboBox->setSelectedIndex(i);
-		}
-	}
-		
-	textureComboBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	propContents->addChild(textureComboBox);
-	
-	setHeight(30);
-	
-	if(typeComboBox->getSelectedIndex() == 1) {
-		textureComboBox->enabled = false;
-		textureComboBox->visible = false;			
-	} else {
-		textureComboBox->enabled = true;
-		textureComboBox->visible = true;		
-	}		
-
-	if(typeComboBox->getSelectedIndex() == 2 || typeComboBox->getSelectedIndex() == 3) {
-		targetComboBox->enabled = false;
-		targetComboBox->visible = false;
-	} else {
-		targetComboBox->enabled = true;
-		targetComboBox->visible = true;
-	}		
-	
-}
-
-TargetBindingProp::~TargetBindingProp() {
-
-}
+EntityPropSheet::EntityPropSheet() : PropSheet("CUSTOM PROPERTIES", "entityProps"){
 
-void TargetBindingProp::handleEvent(Event *event) {
-	if(event->getDispatcher() == removeButton && event->getEventCode() == UIEvent::CLICK_EVENT) {
-		dispatchEvent(new Event(), Event::REMOVE_EVENT);
-	} else if(event->getDispatcher() == typeComboBox && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-		binding->clearTexture(targetBinding->name);	
-		
-		if(typeComboBox->getSelectedIndex() == 1) {
-			textureComboBox->enabled = false;
-			textureComboBox->visible = false;
-		} else {
-			textureComboBox->enabled = true;
-			textureComboBox->visible = true;
-			binding->addTexture(targetBinding->name, targetBinding->texture);	
-		}		
-		
-		if(typeComboBox->getSelectedIndex() == 2 || typeComboBox->getSelectedIndex() == 3) {
-			targetComboBox->enabled = false;
-			targetComboBox->visible = false;
-		} else {
-			targetComboBox->enabled = true;
-			targetComboBox->visible = true;
-		}	
-		
-		binding->removeRenderTargetBinding(targetBinding);		
-		targetBinding->mode = typeComboBox->getSelectedIndex();		
-		
-		binding->addRenderTargetBinding(targetBinding);		
-		
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-	} else if(event->getDispatcher() == targetComboBox && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-		ShaderRenderTarget *target = (ShaderRenderTarget*)targetComboBox->getSelectedItem()->data;		
-		targetBinding->texture = target->texture;
-		targetBinding->id  = target->id;
-		
-		binding->removeRenderTargetBinding(targetBinding);		
-		binding->addRenderTargetBinding(targetBinding);		
-
-		binding->clearTexture(targetBinding->name);
-		if(targetBinding->mode == RenderTargetBinding::MODE_IN) {
-			binding->addTexture(targetBinding->name, targetBinding->texture);		
-		}
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
-	} else if(event->getDispatcher() == textureComboBox && event->getEventCode() == UIEvent::CHANGE_EVENT) {
-		targetBinding->name = textureComboBox->getSelectedItem()->label;
-		
-		binding->removeRenderTargetBinding(targetBinding);		
-		binding->addRenderTargetBinding(targetBinding);		
-
-		binding->clearTexture(targetBinding->name);
-		binding->addTexture(targetBinding->name, targetBinding->texture);
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-	}
-}
-
-void TargetBindingProp::setPropWidth(Number width) {
-	Number size = width-PROP_PADDING-85-15;
-	
-	typeComboBox->setPosition(-90, 0);
-	typeComboBox->Resize(80, typeComboBox->getHeight());
-
-	targetComboBox->setPosition(-90 + 85, 0);
-	targetComboBox->Resize(floor(size*0.5), targetComboBox->getHeight());
-
-	textureComboBox->setPosition(-90 + 85 + targetComboBox->getWidth() + 5, 0);
-	textureComboBox->Resize(floor(size*0.5), textureComboBox->getHeight());
-
-}
-
-RenderTargetProp::RenderTargetProp(ShaderRenderTarget *renderTarget, Material *material) : PropProp("", "RenderTargetProp") {
-
-	this->material = material;
-	this->renderTarget = renderTarget;
-
-	removeButton = new UIImageButton("Images/remove_icon.png");
-	removeButton->addEventListener(this, UIEvent::CLICK_EVENT);	
-	propContents->addChild(removeButton);
-	removeButton->setPosition(-110, 6);
-	
-	nameInput = new UITextInput(false, 20, 12);
-	nameInput->addEventListener(this, UIEvent::CHANGE_EVENT);
-	propContents->addChild(nameInput);
-	nameInput->setText(renderTarget->id);
-	nameInput->setCaretPosition(0);
+	propHeight = 75;
 	
-	widthInput = new UITextInput(false, 20, 12);
-	widthInput->setNumberOnly(true);
-	widthInput->setText(String::NumberToString(renderTarget->width));
-	propContents->addChild(widthInput);
-	widthInput->setCaretPosition(0);
-	widthInput->addEventListener(this, UIEvent::CHANGE_EVENT);
-		
-	heightInput = new UITextInput(false, 20, 12);
-	heightInput->setNumberOnly(true);
-	heightInput->setText(String::NumberToString(renderTarget->height));	
-	propContents->addChild(heightInput);
-	heightInput->setCaretPosition(0);
-	heightInput->addEventListener(this, UIEvent::CHANGE_EVENT);
-			
-	typeComboBox = new UIComboBox(globalMenu, 100);
-	typeComboBox->addComboItem("Pixels");		
-	typeComboBox->addComboItem("Norm.");
-	typeComboBox->setSelectedIndex(renderTarget->sizeMode);	
-	typeComboBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	propContents->addChild(typeComboBox);
-	
-	setHeight(30);
-}
-
-void RenderTargetProp::setPropWidth(Number width) {
-	Number quarter = floor((width-PROP_PADDING- (5*3)) * 0.25);
-	nameInput->setPosition(-90, 0);
-	nameInput->Resize(floor(quarter * 1.8), nameInput->getHeight());
-
-	widthInput->setPosition(-90 + 5 + (quarter * 1.8), 0);
-	widthInput->Resize(floor(quarter*0.6), widthInput->getHeight());
-
-	heightInput->setPosition(-90 + 10 + (quarter * 2.4), 0);
-	heightInput->Resize(floor(quarter*0.6), heightInput->getHeight());	
-	
-	typeComboBox->setPosition(-90 + 15 + (quarter*3), 0);
-	typeComboBox->Resize(floor(quarter), typeComboBox->getHeight());
-}
-
-RenderTargetProp::~RenderTargetProp() {
-
-}
-
-void RenderTargetProp::recreateRenderTarget() {
-	material->recreateRenderTarget(renderTarget);
-}
-
-void RenderTargetProp::handleEvent(Event *event) {
-	if(event->getEventType() == "UIEvent") {
-
-		if(event->getDispatcher() == nameInput) {
-			renderTarget->id = nameInput->getText();
-		}
-	
-		if(event->getDispatcher() == typeComboBox) {
-			renderTarget->sizeMode = typeComboBox->getSelectedIndex();
-			recreateRenderTarget();
-		}
-
-		if(event->getDispatcher() == typeComboBox) {
-			renderTarget->sizeMode = typeComboBox->getSelectedIndex();
-			recreateRenderTarget();
-		}
-
-		if(event->getDispatcher() == widthInput) {
-			renderTarget->width =  atof(widthInput->getText().c_str());
-			recreateRenderTarget();
-		}
-
-		if(event->getDispatcher() == heightInput) {
-			renderTarget->height =  atof(heightInput->getText().c_str());
-			recreateRenderTarget();
-		}
-
-		
-		if(event->getDispatcher() == removeButton) {
-			dispatchEvent(new Event(), Event::CANCEL_EVENT);
-		}
-	}
-	
-	PropProp::handleEvent(event);
-}
-
-ShaderPassesSheet::ShaderPassesSheet() : PropSheet("SHADER PASSES", "shaderPasses") {
-	propHeight = 70;
-	addButton = new UIButton("Add Shader Pass", 150);
+	addButton = new UIButton("Add Property", 150);
 	addButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	contents->addChild(addButton);
+	addChild(addButton);
 	addButton->setPosition(15, 35);
 	
-	customUndoHandler = true;
-	material = NULL;
-	binding = NULL;
-	selectedProp = NULL;
+	entity = NULL;
+	lastEntity = NULL;
+	
+	lastNumProps = 0;
 	
 	removeIndex = -1;
 }
 
-ShaderPassesSheet::~ShaderPassesSheet() {
-
-}
-
-void ShaderPassesSheet::setMaterial(Material *material) {
-	this->material = material;
-	refreshPasses();
-}
-
-void ShaderPassesSheet::refreshPasses() {
-
-	for(int i=0; i < props.size(); i++) {
-		contents->removeChild(props[i]);
-		props[i]->removeAllHandlersForListener(this);
-		delete props[i];
-	}
-	props.clear();
-	propHeight = 0;
-
-	if(!material) {
+void EntityPropSheet::handleEvent(Event *event) {
+	if(!entity)
 		return;
-	}
-
-	for(int i=0; i < material->getNumShaders(); i++) {
-		ShaderPassProp *passProp = new ShaderPassProp(material, i);
-		passProp->addEventListener(this, Event::REMOVE_EVENT);
-		passProp->addEventListener(this, Event::CHANGE_EVENT);		
-		passProp->addEventListener(this, Event::SELECT_EVENT);
-		addProp(passProp);
-		propHeight += 30;	
-	}
-	
-	addButton->setPosition(15, propHeight);	
-	propHeight += 70;	
-
-	dispatchEvent(new Event(), Event::COMPLETE_EVENT);		
-	Resize(width, height);	
-	
-}
-
-void ShaderPassesSheet::Update() {
-	if(removeIndex != -1) {
-		material->removeShader(removeIndex);
-		refreshPasses();
-		removeIndex = -1;			
-	}
-}
-
-void ShaderPassesSheet::handleEvent(Event *event) {
-
-	if(event->getDispatcher() == addButton) {
-	
-		Shader *defaultShader = (Shader*)CoreServices::getInstance()->getResourceManager()->getResource(Resource::RESOURCE_SHADER, "PassThrough");
-		if(defaultShader) {	
-			ShaderBinding *newShaderBinding = defaultShader->createBinding();		
-			material->addShader(defaultShader, newShaderBinding);
-		}
-		refreshPasses();
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
-	} else {
-		for(int i=0; i < props.size(); i++) {	
-			if(event->getDispatcher() == props[i]) {
-				if(event->getEventCode() == Event::CHANGE_EVENT) {
-					dispatchEvent(new Event(), Event::CHANGE_EVENT);
-					selectedProp = (ShaderPassProp*)props[i];
-					dispatchEvent(new Event(), Event::SELECT_EVENT);					
-				} else if(event->getEventCode() == Event::SELECT_EVENT) {
-					selectedProp = (ShaderPassProp*)props[i];
-					dispatchEvent(new Event(), Event::SELECT_EVENT);				
-				} else if(event->getEventCode() == Event::REMOVE_EVENT) {
-					removeIndex = i;
-					dispatchEvent(new Event(), Event::REMOVE_EVENT);					
-				}
-			}
-		}
-	}
-
-	PropSheet::handleEvent(event);
-}
-
-TargetBindingsSheet::TargetBindingsSheet() : PropSheet("TEXTURE BINDINGS", "targetBindings") {
-	propHeight = 70;
-	addButton = new UIButton("Add Render Target", 150);
-	addButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	contents->addChild(addButton);
-	addButton->setPosition(15, 35);	
-	customUndoHandler = true;	
-	material = NULL;
-	binding = NULL;	
-	bindingToRemove = NULL;
-}
-
-TargetBindingsSheet::~TargetBindingsSheet() {
-
-}
-
-void TargetBindingsSheet::setShader(Shader *shader, Material *material, ShaderBinding *binding) {
-	this->shader = shader;
-	this->material = material;		
-	this->binding = binding;
-	
-	refreshTargets();
-}
-
-void TargetBindingsSheet::Update() {
-	if(bindingToRemove) {
-		binding->removeRenderTargetBinding(bindingToRemove);
-		bindingToRemove = NULL;
-		refreshTargets();
-	}
-}
-
-void TargetBindingsSheet::refreshTargets() {
-	for(int i=0; i < props.size(); i++) {
-		contents->removeChild(props[i]);
-		props[i]->removeAllHandlersForListener(this);
-		delete props[i];
-	}
-	props.clear();
-	propHeight = 0;
-
-	if(!material) {
-		return;
-	}
-	
-	for(int i=0; i < binding->getNumRenderTargetBindings(); i++) {
-		RenderTargetBinding *targetBinding = binding->getRenderTargetBinding(i);
-		TargetBindingProp *bindingProp = new TargetBindingProp(shader, material, binding, targetBinding);
-		bindingProp->addEventListener(this, Event::REMOVE_EVENT);	
-		addProp(bindingProp);
-		propHeight += 30;		
 		
-	}
-				
-	addButton->setPosition(15, propHeight);	
-	propHeight += 70;	
-
-	dispatchEvent(new Event(), Event::COMPLETE_EVENT);		
-	Resize(width, height);	
-}
-
-void TargetBindingsSheet::handleEvent(Event *event) {
-
-	if(event->getDispatcher() == addButton) {
-		RenderTargetBinding* newBinding = new RenderTargetBinding();
-		newBinding->mode = RenderTargetBinding::MODE_COLOR;
-		newBinding->texture = NULL;		
-		binding->addRenderTargetBinding(newBinding);				
-		refreshTargets();			
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-	}
-	
-	for(int i=0; i < props.size(); i++) {
-		if(event->getDispatcher() == props[i]) {
-			switch(event->getEventCode()) {						
-				case Event::REMOVE_EVENT:
-					bindingToRemove = ((TargetBindingProp*)props[i])->targetBinding;
-				break;
-				case Event::CHANGE_EVENT:
-					dispatchEvent(new Event(), Event::CHANGE_EVENT);
-				break;				
-			}
-		}
-	}
-	
-	
-	PropSheet::handleEvent(event);
-}
-
-
-RenderTargetsSheet::RenderTargetsSheet() : PropSheet("RENDER TARGETS", "renderTargets") {
-	propHeight = 70;
-	addButton = new UIButton("Add Render Target", 150);
-	addButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	contents->addChild(addButton);
-	addButton->setPosition(15, 35);
-	
-	customUndoHandler = true;	
-	material = NULL;
-	binding = NULL;
-	
-	removeIndex = -1;	
-}
-
-RenderTargetsSheet::~RenderTargetsSheet() {
-
-}
-
-void RenderTargetsSheet::refreshTargets() {
-	for(int i=0; i < props.size(); i++) {
-		contents->removeChild(props[i]);
-		props[i]->removeAllHandlersForListener(this);
-		delete props[i];
-	}
-	props.clear();
-	propHeight = 0;
-
-	if(!material) {
-		return;
-	}
-	
-	for(int i=0; i < material->getNumShaderRenderTargets(); i++) {
-		ShaderRenderTarget *renderTarget  = material->getShaderRenderTarget(i);
-		RenderTargetProp *targetProp = new RenderTargetProp(renderTarget, material);		
-		targetProp->addEventListener(this, Event::CANCEL_EVENT);	
-		addProp(targetProp);
-		propHeight += 30;		
-	}
-	
-	addButton->setPosition(15, propHeight);	
-	propHeight += 70;	
-
-	dispatchEvent(new Event(), Event::COMPLETE_EVENT);		
-	Resize(width, height);	
-}
-
-void RenderTargetsSheet::Update() {
-	if(material != lastMaterial) {
-		lastMaterial = material;
-		refreshTargets();
-	}
-	
-	if(removeIndex != -1) {		
-		material->removeShaderRenderTarget(removeIndex);
-		removeIndex = -1;
-		refreshTargets();
-	}
-	
-}
-
-void RenderTargetsSheet::handleEvent(Event *event) {
-	if(!material)
-		return;
-
-	if(event->getDispatcher() == addButton) {
-		ShaderRenderTarget* newRenderTarget = new ShaderRenderTarget();
-		newRenderTarget->id = "render_target";
-		newRenderTarget->width = 1.0;
-		newRenderTarget->height = 1.0;
-		newRenderTarget->normalizedWidth = normTextureWidth;
-		newRenderTarget->normalizedHeight = normTextureHeight;		
-		newRenderTarget->sizeMode = ShaderRenderTarget::SIZE_MODE_NORMALIZED;		
-		material->addShaderRenderTarget(newRenderTarget);
-		refreshTargets();
+	if(event->getDispatcher() == addButton && event->getEventType() == "UIEvent") {
+		entity->entityProps.push_back(EntityProp());
+		refreshProps();
 	}
 	
 	for(int i=0; i < props.size(); i++) {
@@ -1785,82 +982,15 @@
 					removeIndex = i;
 				break;
 				case Event::CHANGE_EVENT:
+					if(i < entity->entityProps.size()) {
+						entity->entityProps[i].propName = ((CustomProp*)props[i])->getKey();
+						entity->entityProps[i].propValue = ((CustomProp*)props[i])->getValue();			
+					}
 				break;				
 			}
 		}
 	}
-	
-	
-	PropSheet::handleEvent(event);
-}
 
-
-EntityPropSheet::EntityPropSheet() : PropSheet("CUSTOM PROPERTIES", "entityProps"){
-
-	propHeight = 75;
-	
-	addButton = new UIButton("Add Property", 150);
-	addButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	contents->addChild(addButton);
-	addButton->setPosition(15, 35);
-	
-	customUndoHandler = true;
-	
-	entity = NULL;
-	lastEntity = NULL;
-	
-	lastNumProps = 0;
-	
-	removeIndex = -1;
-}
-
-void EntityPropSheet::applyPropActionData(PolycodeEditorPropActionData *data) {
-	if(!entity)
-		return;
-		
-	entity->entityProps.clear();
-	for(int i=0; i < data->entity->entityProps.size(); i++) {
-			entity->entityProps.push_back(data->entity->entityProps[i]);
-	}
-	
-	refreshProps();
-}
-
-
-void EntityPropSheet::handleEvent(Event *event) {
-	if(!entity)
-		return;
-		
-	if(event->getDispatcher() == addButton && event->getEventType() == "UIEvent") {
-		PolycodeEditorPropActionData *beforeData = PropDataEntity(entity);	
-		entity->entityProps.push_back(EntityProp());
-		refreshProps();
-		PolycodeEditorPropActionData *afterData = PropDataEntity(entity);			
-		PropEvent *propEvent = new PropEvent(NULL, this, beforeData, afterData);
-		dispatchEvent(propEvent, PropEvent::EVENT_PROP_CHANGE);					
-		
-	}
-	
-	for(int i=0; i < props.size(); i++) {
-		if(event->getDispatcher() == props[i] && event->getEventType() == "") {
-			switch(event->getEventCode()) {						
-				case Event::CANCEL_EVENT:
-					removeIndex = i;
-				break;
-				case Event::CHANGE_EVENT:
-					PolycodeEditorPropActionData *beforeData = PropDataEntity(entity);
-					if(i < entity->entityProps.size()) {
-						entity->entityProps[i].propName = ((CustomProp*)props[i])->getKey();
-						entity->entityProps[i].propValue = ((CustomProp*)props[i])->getValue();			
-					}
-					PolycodeEditorPropActionData *afterData = PropDataEntity(entity);			
-					PropEvent *propEvent = new PropEvent(NULL, this, beforeData, afterData);
-					dispatchEvent(propEvent, PropEvent::EVENT_PROP_CHANGE);					
-				break;				
-			}
-		}
-	}
-	PropSheet::handleEvent(event);
 }
 
 void EntityPropSheet::refreshProps() {
@@ -1871,7 +1001,7 @@
 		delete props[i];
 	}
 	props.clear();
-	propHeight = 0;
+	propHeight = 75;
 	
 	for(int i=0; i < entity->entityProps.size(); i++) {			
 		EntityProp prop = entity->entityProps[i];
@@ -1879,15 +1009,15 @@
 		newProp->addEventListener(this, Event::CANCEL_EVENT);
 		newProp->addEventListener(this, Event::CHANGE_EVENT);		
 		addProp(newProp);
-		propHeight += 30;
+		propHeight += 35;
 	}
 	
 	
-	addButton->setPosition(15, propHeight);	
-	propHeight += 70;	
+	addButton->setPosition(15, propHeight-40);	
+	
 	
 	if(lastNumProps != entity->entityProps.size()) {
-		dispatchEvent(new Event(), Event::COMPLETE_EVENT);
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}
 	
 	lastNumProps = entity->entityProps.size();
@@ -1899,17 +1029,11 @@
 	if(entity) {
 	
 		if(removeIndex != -1) {
-		
-			PolycodeEditorPropActionData *beforeData = PropDataEntity(entity);
-				
 			if(removeIndex < entity->entityProps.size()) {
 				entity->entityProps.erase(entity->entityProps.begin() + removeIndex);
 			}
 			removeIndex = -1;
 			refreshProps();
-			PolycodeEditorPropActionData *afterData = PropDataEntity(entity);			
-			PropEvent *propEvent = new PropEvent(NULL, this, beforeData, afterData);
-			dispatchEvent(propEvent, PropEvent::EVENT_PROP_CHANGE);
 		}
 	
 		enabled = true;		
@@ -1922,263 +1046,6 @@
 	}
 }
 
-ShaderOptionsSheet::ShaderOptionsSheet() : PropSheet("SHADER OPTIONS", "shader_options"){
-	shader = NULL;
-	propHeight = 40;
-}
-
-ShaderOptionsSheet::~ShaderOptionsSheet() {
-
-}
-
-void ShaderOptionsSheet::handleEvent(Event *event) {
-
-	if(event->getEventCode() == Event::CHANGE_EVENT) {
-		for(int i=0 ; i < props.size(); i++) {
-			if(event->getDispatcher() == props[i]) {
-				if(props[i]->propType == "Number") {
-					(*(Number*)binding->getLocalParamByName(props[i]->label->getText())->data) = ((NumberProp*)props[i])->get();
-				} else if(props[i]->propType == "Color") {
-					(*(Color*)binding->getLocalParamByName(props[i]->label->getText())->data) = ((ColorProp*)props[i])->get();
-				
-				} else if(props[i]->propType == "Vector2") {
-					(*(Vector2*)binding->getLocalParamByName(props[i]->label->getText())->data) = ((Vector2Prop*)props[i])->get();
-				
-				}
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);				
-				return;
-			}
-		}
-	}
-
-	PropSheet::handleEvent(event);
-}
-
-void ShaderOptionsSheet::Update() {
-
-}
-
-void ShaderOptionsSheet::clearShader() {
-	for(int i=0; i < props.size(); i++) {
-		contents->removeChild(props[i]);
-		props[i]->removeAllHandlersForListener(this);
-		delete props[i];
-	}
-	props.clear();
-	propHeight = 30;
-}
-
-void ShaderOptionsSheet::setOptionsFromParams(std::vector<ProgramParam> &params) {
-
-	for(int i=0; i < params.size(); i++) {
-		if(!CoreServices::getInstance()->getRenderer()->getDataPointerForName(params[i].name)) {			
-				switch (params[i].type) {
-				
-					case ProgramParam::PARAM_NUMBER:
-					{
-						String paramName = params[i].name;
-						NumberProp *numberProp = new NumberProp(paramName);
-						addProp(numberProp);
-												
-						Number numberValue = (*(Number*)binding->getLocalParamByName(params[i].name)->data);
-						numberProp->set(numberValue);
-						propHeight += 30;
-					}
-					break;					
-					case ProgramParam::PARAM_COLOR:
-					{
-						String paramName = params[i].name;
-						
-						ColorProp *colorProp = new ColorProp(paramName);
-						addProp(colorProp);
-						
-						Color colorValue = (*(Color*)binding->getLocalParamByName(params[i].name)->data);
-						colorProp->set(colorValue);
-						
-						propHeight += 40;												
-					}
-					break;
-					case ProgramParam::PARAM_VECTOR2:
-					{
-						String paramName = params[i].name;						
-						Vector2Prop *vec2Prop = new Vector2Prop(paramName);;
-						addProp(vec2Prop);
-						
-						Vector2 vec2val = (*(Vector2*)binding->getLocalParamByName(params[i].name)->data);
-						vec2Prop->set(vec2val);
-						propHeight += 30;
-					}
-					break;
-				}	
-			}
-		}	
-}
-
-void ShaderOptionsSheet::setShader(Shader *shader, Material *material, ShaderBinding *binding) {
-	clearShader();
-	this->shader = shader;
-	this->material = material;
-	
-	if(!shader || !material)
-		return;
-		
-	this->binding = binding;
-	
-	setOptionsFromParams(shader->expectedParams);
-	
-	dispatchEvent(new Event(), Event::COMPLETE_EVENT);	
-	Resize(width, height);
-}
-
-ShaderTexturesSheet::ShaderTexturesSheet() : PropSheet("SHADER TEXTURES", "shader_textures"){
-	shader = NULL;
-	propHeight = 40;
-}
-
-ShaderTexturesSheet::~ShaderTexturesSheet() {
-
-}
-
-void ShaderTexturesSheet::handleEvent(Event *event) {
-
-	if(event->getEventCode() == Event::CHANGE_EVENT) {
-		for(int i=0; i < textureProps.size(); i++) {
-			if(event->getDispatcher() == textureProps[i]) {
-				binding->clearTexture(textureProps[i]->label->getText());
-				binding->addTexture(textureProps[i]->label->getText(), textureProps[i]->get());
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-			}
-		}	
-		
-		for(int i=0; i < cubemapProps.size(); i++) {
-			if(event->getDispatcher() == cubemapProps[i]) {
-				binding->clearCubemap(cubemapProps[i]->label->getText());
-				Cubemap *cubemap = (Cubemap*)cubemapProps[i]->comboEntry->getSelectedItem()->data;
-				binding->addCubemap(cubemapProps[i]->label->getText(), cubemap);
-				dispatchEvent(new Event(), Event::CHANGE_EVENT);
-			}
-		}	
-		
-	}
-	PropSheet::handleEvent(event);
-}
-
-void ShaderTexturesSheet::Update() {
-
-}
-
-void ShaderTexturesSheet::clearShader() {
-	for(int i=0; i < props.size(); i++) {
-		contents->removeChild(props[i]);
-		props[i]->removeAllHandlersForListener(this);
-		delete props[i];
-	}
-	
-	props.clear();
-	cubemapProps.clear();
-	textureProps.clear();
-	
-	propHeight = 30;
-}
-
-void ShaderTexturesSheet::setShader(Shader *shader, Material *material, ShaderBinding *binding) {
-	clearShader();
-	this->shader = shader;
-	this->material = material;
-	
-	if(!shader || !material)
-		return;
-		
-	this->binding = binding;
-
-	for(int i=0; i < shader->expectedCubemaps.size(); i++) {
-		ComboProp *comboProp = new ComboProp(shader->expectedCubemaps[i]);
-		
-		std::vector<Resource*> cubemaps = CoreServices::getInstance()->getResourceManager()->getResources(Resource::RESOURCE_CUBEMAP);
-		
-		for(int j=0; j < cubemaps.size(); j++) {
-			comboProp->comboEntry->addComboItem(cubemaps[j]->getResourceName(), (void*) cubemaps[j]);
-			if(material) {
-				if(material->getShaderBinding(0)) {
-					Cubemap *currentCubemap = material->getShaderBinding(0)->getCubemap(shader->expectedCubemaps[i]);
-					if(currentCubemap) {
-						if(currentCubemap->getResourceName() == cubemaps[j]->getResourceName()) {
-							comboProp->set(j);
-						}
-					}
-				}
-			}
-		}
-				
-		addProp(comboProp);
-		cubemapProps.push_back(comboProp);
-		propHeight += 45;
-	}
-	
-	for(int i=0; i < shader->expectedTextures.size(); i++) {
-		TextureProp *textureProp = new TextureProp(shader->expectedTextures[i]);
-		
-		if(material) {
-			if(material->getShaderBinding(0)) {
-				Texture *currentTexture = material->getShaderBinding(0)->getTexture(shader->expectedTextures[i]);
-				if(currentTexture) {
-					textureProp->set(currentTexture);
-				}
-			}
-		}
-		
-		addProp(textureProp);
-		textureProps.push_back(textureProp);
-		propHeight += 65;
-	}
-
-	dispatchEvent(new Event(), Event::COMPLETE_EVENT);	
-	Resize(width, height);
-}
-
-ScreenEntitySheet::ScreenEntitySheet() : PropSheet("SCREEN ENTITY", "screen_entity") {
-
-	widthProp = new NumberProp("Width");
-	addProp(widthProp);
-	
-	heightProp = new NumberProp("Height");
-	addProp(heightProp);
-	
-	propHeight = 100;
-	entity = NULL;
-	lastEntity = NULL;
-}
-
-ScreenEntitySheet::~ScreenEntitySheet() {
-
-}
-		
-void ScreenEntitySheet::handleEvent(Event *event) {
-	if(entity) {
-		if(event->getDispatcher() == widthProp) {
-			entity->setWidth(widthProp->get());
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);		
-		} else 	if(event->getDispatcher() == heightProp) {
-			entity->setHeight(heightProp->get());
-			dispatchEvent(new Event(), Event::CHANGE_EVENT);		
-		}
-
-	}
-	PropSheet::handleEvent(event);	
-}
-
-void ScreenEntitySheet::Update() {
-	if(entity) {
-		enabled = true;
-		if(entity != lastEntity) {
-			widthProp->set(entity->getWidth());
-			heightProp->set(entity->getHeight());
-			lastEntity = entity;
-		}
-	} else {
-		enabled = false;
-	}
-}
 
 EntitySheet::EntitySheet() : PropSheet("ENTITY", "entity"){
 	idProp = new StringProp("ID");
@@ -2208,7 +1075,7 @@
 EntitySheet::~EntitySheet() {
 
 }
-
+		
 void EntitySheet::handleEvent(Event *event) {
 
 	if(!entity)
@@ -2216,26 +1083,31 @@
 
 	if(event->getDispatcher() == blendingProp  && event->getEventCode() == Event::CHANGE_EVENT) {
 		entity->blendingMode = blendingProp->get();
-	} else if(event->getDispatcher() == colorProp  && event->getEventCode() == Event::CHANGE_EVENT) {
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
+	}
+
+
+	if(event->getDispatcher() == colorProp  && event->getEventCode() == Event::CHANGE_EVENT) {
 		entity->color = colorProp->get();
-	}else if(event->getDispatcher() == idProp  && event->getEventCode() == Event::CHANGE_EVENT) {
-		entity->id = idProp->get();
-	} else if(event->getDispatcher() == tagProp  && event->getEventCode() == Event::CHANGE_EVENT) {
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
+	}
+
 		
-		String tagString = "";
-		for(int i=0; i < entity->getNumTags(); i++) {
-			if(i != 0) {
-				tagString += ",";
-			}
-			tagString += entity->getTagAtIndex(i);
-		}
+	if(event->getDispatcher() == idProp  && event->getEventCode() == Event::CHANGE_EVENT) {
+		entity->id = idProp->get();
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
+	}
+
+	if(event->getDispatcher() == tagProp  && event->getEventCode() == Event::CHANGE_EVENT) {
 		
 		entity->clearTags();
 		String cleaned =  tagProp->get().replace(" ", "");
 		std::vector<String> tags = cleaned.split(",");
 		for(int i=0; i < tags.size(); i++) {
 			entity->addTag(tags[i]);
-		}		
+		}
+		
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}
 	
 	PropSheet::handleEvent(event);	
@@ -2283,9 +1155,6 @@
 	blendingProp->comboEntry->addComboItem("Premultiplied");
 	blendingProp->comboEntry->addComboItem("Multiply");
 
-	ignoreParentMatrixProp = new BoolProp("No parent matrix");
-	addProp(ignoreParentMatrixProp);
-	
 	numParticlesProp = new NumberProp("Num particles");
 	addProp(numParticlesProp);
 		
@@ -2338,7 +1207,7 @@
 	addProp(colorCurveProp);
 	
 	emitter = NULL;
-	propHeight = 680;
+	propHeight = 650;
 }
 
 void ScreenParticleSheet::handleEvent(Event *event) {
@@ -2444,12 +1313,7 @@
 		emitter->rotationFollowsPath = lastRotationFollowsPath;		
 		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}	
-
-	if(event->getDispatcher() == ignoreParentMatrixProp  && event->getEventCode() == Event::CHANGE_EVENT) {
-		lastIgnoreParentMatrix = ignoreParentMatrixProp->get();
-		emitter->setIgnoreParentMatrix(lastIgnoreParentMatrix);		
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
-	}	
+	
 	
 	if(event->getDispatcher() == useScaleCurvesProp  && event->getEventCode() == Event::CHANGE_EVENT) {
 		lastUseScaleCurves = useScaleCurvesProp->get();
@@ -2491,11 +1355,6 @@
 			deviationProp->set(Vector2(emitter->emitterRadius.x, emitter->emitterRadius.y));
 			lastSize = emitter->emitterRadius;
 		}
-
-		if(emitter->getIgnoreParentMatrix() != lastIgnoreParentMatrix) {
-			ignoreParentMatrixProp->set(emitter->getIgnoreParentMatrix());
-			lastIgnoreParentMatrix = emitter->getIgnoreParentMatrix();
-		}
 				
 		if(emitter->brightnessDeviation != lastBrightnessDeviation) {
 			lastBrightnessDeviation = emitter->brightnessDeviation;
@@ -2701,7 +1560,6 @@
 		Texture *selectedTexture = texture->previewShape->getTexture();
 		
 		image->setTexture(selectedTexture);
-		selectedTexture->reloadOnFileModify = true;
 		image->setShapeSize(selectedTexture->getWidth(), selectedTexture->getHeight());
 		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}
@@ -2804,9 +1662,7 @@
 	if(event->getDispatcher() == instanceProp) {
 
 		instance->loadFromFile(instanceProp->get());
-		instance->getResourceEntry()->setResourcePath(instanceProp->get());
-		instance->getResourceEntry()->setResourceName(instanceProp->get());
-		
+
 		dispatchEvent(new Event(), Event::CHANGE_EVENT);
 	}
 
@@ -2867,7 +1723,7 @@
 ScreenLabelSheet::~ScreenLabelSheet() {
 
 }
-
+		
 void ScreenLabelSheet::handleEvent(Event *event) {
 	if(!label)
 		return;
@@ -2883,7 +1739,7 @@
 		label->getLabel()->setFont(font);
 		label->setText(caption->get());		
 		lastFont = fontName;
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
 	}
 
 
@@ -2896,7 +1752,7 @@
 					
 		label->getLabel()->setSize(newSize);
 		label->setText(caption->get());		
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
 	}
 
 
@@ -2907,34 +1763,33 @@
 			label->getLabel()->setAntialiasMode(Label::ANTIALIAS_NONE);		
 		}		
 		label->setText(caption->get());
-		dispatchEvent(new Event(), Event::CHANGE_EVENT);
+		dispatchEvent(new Event(), Event::CHANGE_EVENT);		
 	}
+
 	
 	PropSheet::handleEvent(event);
 }
 
 void ScreenLabelSheet::Update() {
 	if(label) {
-		enabled = true;		
-		if(label != lastLabel) {
-			lastLabel = label;
-	
+		enabled = true;	
 		caption->set(label->getText());		
 		enableAA->set(label->getLabel()->getAntialiasMode() == Label::ANTIALIAS_FULL);
-		size->set(label->getLabel()->getSize());
+		if(label->getLabel()->getSize() != lastSize) {
+			size->set(label->getLabel()->getSize());
+			lastSize = label->getLabel()->getSize();
+		}
 		
 		for(int i=0; i < font->comboEntry->getNumItems(); i++) {
 			String comboFont = font->comboEntry->getItemAtIndex(i)->label;
 			
 			if(comboFont == label->getLabel()->getFont()->getFontName()) {
 				if(comboFont != lastFont) {
-					font->set(i);
+					font->comboEntry->setSelectedIndex(i);
 					lastFont = comboFont;
 				}
 			}
 		}
-
-		}
 	} else {
 		enabled = false;
 	}
diff --git a/IDE/Contents/Source/PolycodeRemoteDebugger.cpp b/IDE/Contents/Source/PolycodeRemoteDebugger.cpp
--- a/IDE/Contents/Source/PolycodeRemoteDebugger.cpp
+++ b/IDE/Contents/Source/PolycodeRemoteDebugger.cpp
@@ -59,6 +59,7 @@
 	for(int i=0; i < debuggerClients.size(); i++) {
 		if(event->getDispatcher() == debuggerClients[i]->client) {		
 			ServerClientEvent *clientEvent = (ServerClientEvent*) event;
+			DebuggerClient *client = debuggerClients[i];
 			switch(clientEvent->getEventCode()) {
 				case ServerClientEvent::EVENT_CLIENT_DATA:				
 					switch(clientEvent->dataType) {			
diff --git a/IDE/Contents/Source/PolycodeScreenEditor.cpp b/IDE/Contents/Source/PolycodeScreenEditor.cpp
--- a/IDE/Contents/Source/PolycodeScreenEditor.cpp
+++ b/IDE/Contents/Source/PolycodeScreenEditor.cpp
@@ -27,23 +27,6 @@
 extern PolycodeFrame *globalFrame;
 extern UIGlobalMenu *globalMenu;
 
-PolycodeScreenEditorActionDataEntry::PolycodeScreenEditorActionDataEntry(ScreenEntity *entity) {
-	this->entity = entity;
-	this->parentEntity = (ScreenEntity*)entity->getParentEntity();
-}
-
-PolycodeScreenEditorActionDataEntry::PolycodeScreenEditorActionDataEntry(Vector3 vec3, Number number) {
-	this->vec3 = vec3;
-	this->number = number;	
-}
-
-PolycodeScreenEditorActionDataEntry::PolycodeScreenEditorActionDataEntry(Vector3 vec3) {
-	this->vec3 = vec3;
-}
-
-PolycodeScreenEditorActionDataEntry::PolycodeScreenEditorActionDataEntry(Number number) {
-	this->number = number;
-}
 
 ScreenEntityNameDisplay::ScreenEntityNameDisplay(ScreenEntity *targetEntity) : ScreenEntity() {
 	label = new ScreenLabel(targetEntity->id, 10, "mono");
@@ -104,7 +87,7 @@
 	addChild(label);
 	label->setPosition(10, 3);
 	
-	treeContainer = new UITreeContainer("Images/entity_icon.png", L"Entity", 200, 555);
+	treeContainer = new UITreeContainer("Images/entity_icon.png", L"Layers", 200, 555);
 	treeContainer->getRootNode()->toggleCollapsed();
 	treeContainer->getRootNode()->addEventListener(this, UITreeEvent::SELECTED_EVENT);
 	treeContainer->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
@@ -112,7 +95,8 @@
 	
 	EntityBrowserData *data = new EntityBrowserData();
 	data->entity = rootEntity;
-	treeContainer->getRootNode()->setUserData((void*) data)	;	
+	treeContainer->getRootNode()->setUserData((void*) data)	;
+	
 	
 	addChild(treeContainer);	
 	
@@ -127,17 +111,6 @@
 	
 }
 
-void EntityTreeView::setRootEntity(ScreenEntity *entity) {
-	rootEntity = entity;
-	EntityBrowserData *oldData = (EntityBrowserData*)treeContainer->getRootNode()->getUserData();
-	if(oldData)
-		delete oldData;
-	
-	EntityBrowserData *data = new EntityBrowserData();
-	data->entity = rootEntity;
-	treeContainer->getRootNode()->setUserData((void*) data)	;	
-}
-
 void EntityTreeView::syncNodeToEntity(UITree *node, Entity *entity) {
 
 	// remove non existing and set proper ids, 
@@ -282,22 +255,23 @@
 }
 
 
-PolycodeScreenEditorMain::PolycodeScreenEditorMain(PolycodeEditor *editor) {
-	this->editor = editor;
+PolycodeScreenEditorMain::PolycodeScreenEditorMain() {
+
 	firstMove = false;
 
 	multiSelect = false;
 	currentLayer = NULL;
 	treeView = NULL;
 	placementCount = 0;
-	beforeData = NULL;
-	
-	currentLayer = NULL;
 	
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");	
+	Number padding = conf->getNumericValue("Polycode", "uiWindowSkinPadding");	
 
-	isScalingEntity = false;	
+	isScalingEntity = false;
+	
+	selectedEntity = NULL;
 	isDraggingEntity = false; 
 		
 	baseEntity = new ScreenEntity();
@@ -310,12 +284,6 @@
 	baseEntity->addChild(objectBaseEntity);
 	objectBaseEntity->processInputEvents = true;
 
-	sizePreviewShape = new ScreenShape(ScreenShape::SHAPE_RECT, 1, 1);
-	baseEntity->addChild(sizePreviewShape);
-	sizePreviewShape->setColor(1.0, 1.0, 1.0, 0.0);
-	sizePreviewShape->strokeEnabled = true;
-	sizePreviewShape->strokeColor = Color(1.0, 0.3, 0.0, 0.8);
-	
 	screenPreviewShape = new ScreenShape(ScreenShape::SHAPE_RECT, 1, 1);
 	baseEntity->addChild(screenPreviewShape);
 	screenPreviewShape->setColor(1.0, 1.0, 1.0, 0.0);
@@ -326,7 +294,7 @@
 	layerBaseEntity->processInputEvents = true;
 	objectBaseEntity->addChild(layerBaseEntity);
 	
-	setCurrentLayer(layerBaseEntity);
+	currentLayer = layerBaseEntity;
 
 	placingPreviewEntity = new ScreenEntity();
 	objectBaseEntity->addChild(placingPreviewEntity);
@@ -371,16 +339,11 @@
 	previewInstance->setPositionMode(ScreenEntity::POSITION_CENTER);
 	placingPreviewEntity->addChild(previewInstance);
 	previewInstance->setColor(1.0, 1.0, 1.0, 0.5);
-	previewInstance->getResourceEntry()->reloadOnFileModify = true;
-	previewInstance->getResourceEntry()->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);
-	
-	CoreServices::getInstance()->getResourceManager()->addResource(previewInstance->getResourceEntry());	
 
 	grid = false;
 	setGrid(16);
 	
 	gridSnap = false;
-	pixelSnap = true;
 
 	centerImage = new ScreenImage("Images/ScreenEditor/screenCenter.png");
 	centerImage->setPositionMode(ScreenEntity::POSITION_CENTER);
@@ -417,7 +380,7 @@
 	screenTransform->visible = false;
 	screenTransform->processInputEvents = true;
 	
-	CoreServices::getInstance()->getRenderer()->setTextureFilteringMode(Renderer::TEX_FILTERING_LINEAR);
+//	CoreServices::getInstance()->getRenderer()->setTextureFilteringMode(Renderer::TEX_FILTERING_LINEAR);
 	
 	ScreenImage *base = new ScreenImage("Images/ScreenEditor/transform_base.png");
 	base->setPositionMode(ScreenEntity::POSITION_CENTER);
@@ -439,7 +402,6 @@
 	transformScalerY->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
 	transformScalerY->processInputEvents = true;
 	transformScalerY->blockMouseInput = true;
-	transformScalerY->setScale(0.7, 0.7);
 	
 	transformScalerX = new ScreenImage("Images/ScreenEditor/transform_scaler.png");
 	transformScalerX->setColor(1.0, 0.5, 0.0, 0.7);
@@ -450,18 +412,6 @@
 	transformScalerX->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
 	transformScalerX->processInputEvents = true;
 	transformScalerX->blockMouseInput = true;
-	transformScalerX->setScale(0.7, 0.7);
-		
-	transformScalerXY = new ScreenImage("Images/ScreenEditor/transform_scaler.png");
-	transformScalerXY->setColor(1.0, 1.0, 1.0, 0.7);
-	transformScalerXY->setPositionMode(ScreenEntity::POSITION_CENTER);
-	transformScalerXY->setRotation(-45);
-	transformScalerXY->setPosition(40, -40);
-	screenTransform->addChild(transformScalerXY);
-	transformScalerXY->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
-	transformScalerXY->processInputEvents = true;
-	transformScalerXY->blockMouseInput = true;
-	
 	
 	
 	CoreServices::getInstance()->getRenderer()->setTextureFilteringMode(Renderer::TEX_FILTERING_NEAREST);
@@ -512,15 +462,6 @@
 	gridSnapBox->setPosition(290, 5);
 	gridSnapBox->setChecked(false);
 	
-	label = new ScreenLabel("SHOW", 18, "section", Label::ANTIALIAS_FULL);
-	label->color.setColorHexFromString(CoreServices::getInstance()->getConfig()->getStringValue("Polycode", "uiHeaderFontColor"));
-	viewOptions->addChild(label);
-	label->setPosition(360, 3);
-	
-	showRefsBox = new UICheckBox("Refs", true);
-	showRefsBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	viewOptions->addChild(showRefsBox);
-	showRefsBox->setPosition(420, 5);	
 		
 	properties = new ScreenEntity();
 	addChild(properties);
@@ -736,58 +677,45 @@
 	
 	particleSheet = new ScreenParticleSheet();
 	particleSheet->addEventListener(this, Event::CHANGE_EVENT);	
-	particleSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);		
 	entityProps->addPropSheet(particleSheet);
 
 	spriteSheet = new ScreenSpriteSheet();
-	spriteSheet->addEventListener(this, Event::CHANGE_EVENT);
-	spriteSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);	
+	spriteSheet->addEventListener(this, Event::CHANGE_EVENT);	
 	entityProps->addPropSheet(spriteSheet);
 	
 	instanceSheet = new ScreenEntityInstanceSheet();
 	instanceSheet->addEventListener(this, Event::CHANGE_EVENT);	
-	instanceSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
 	entityProps->addPropSheet(instanceSheet);
 
 	labelSheet = new ScreenLabelSheet();
 	labelSheet->addEventListener(this, Event::CHANGE_EVENT);	
-	labelSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);	
 	entityProps->addPropSheet(labelSheet);
 
 	soundSheet = new SoundSheet();
 	entityProps->addPropSheet(soundSheet);
 	soundSheet->addEventListener(this, Event::CHANGE_EVENT);
-	soundSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
-	
+
 	imageSheet = new ScreenImageSheet();
 	entityProps->addPropSheet(imageSheet);
 	imageSheet->addEventListener(this, Event::CHANGE_EVENT);	
-	imageSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
-	
+
 	shapeSheet = new ShapeSheet();
 	shapeSheet->addEventListener(this, Event::CHANGE_EVENT);
-	shapeSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
 	entityProps->addPropSheet(shapeSheet);
 
 	transform2dSheet = new Transform2DSheet();
 	transform2dSheet->addEventListener(this, Event::CHANGE_EVENT);
-	transform2dSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);	
 	entityProps->addPropSheet(transform2dSheet);
 	
-	screenEntitySheet = new ScreenEntitySheet();
-	entityProps->addPropSheet(screenEntitySheet);
-	screenEntitySheet->addEventListener(this, Event::CHANGE_EVENT);	
-	screenEntitySheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
-				
 	entitySheet = new EntitySheet();
 	entityProps->addPropSheet(entitySheet);
-	entitySheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
 	
 	entityPropSheet = new EntityPropSheet();
 	entityPropSheet->addEventListener(this, Event::CHANGE_EVENT);	
-	entityPropSheet->addEventListener(this, PropEvent::EVENT_PROP_CHANGE);
 	entityProps->addPropSheet(entityPropSheet);	
 	
+	selectEntity(NULL);	
+	
 	entityProps->updateProps();		
 	
 	parenting = false;
@@ -834,101 +762,16 @@
 }
 
 PolycodeScreenEditorMain::~PolycodeScreenEditorMain() {
+
 	CoreServices::getInstance()->getCore()->getInput()->removeAllHandlersForListener(this);
 	setOwnsChildrenRecursive(true);
 }
 
-void PolycodeScreenEditorMain::doAction(String actionName, PolycodeEditorActionData *data) {
-	PolycodeScreenEditorActionData *screenData = (PolycodeScreenEditorActionData*)data;
-	if(actionName == "move") {
-		for(int i=0; i < selectedEntities.size(); i++) {
-			selectedEntities[i]->position = screenData->entries[i].vec3;
-		}
-		syncTransformToSelected();
-	} else if(actionName == "scale") {
-		for(int i=0; i < selectedEntities.size(); i++) {
-			selectedEntities[i]->scale = screenData->entries[i].vec3;
-		}	
-		syncTransformToSelected();		
-	} else if(actionName == "rotate") {
-		for(int i=0; i < selectedEntities.size(); i++) {
-			selectedEntities[i]->position = screenData->entries[i].vec3;		
-			selectedEntities[i]->setRotation(screenData->entries[i].number);
-		}
-		syncTransformToSelected();			
-	} else if(actionName == "select") {
-			selectEntity(NULL, false);	
-			if(data) {
-				bool oldMultiSelect = multiSelect;
-				multiSelect = true;
-				for(int i=0; i < screenData->entries.size(); i++) {
-					selectEntity(screenData->entries[i].entity, false);
-				}					
-				multiSelect = oldMultiSelect;				
-			}
-		syncTransformToSelected();			
-	} else if(actionName == "set_current_layer") {
-		if(screenData->entry.entity) {
-			setCurrentLayer(screenData->entry.entity, false);
-		}
-	} else if(actionName == "delete") {
-		if(screenData->reverse) {
-			bool oldMultiSelect = multiSelect;
-			multiSelect = true;
-			for(int i=0; i < screenData->entries.size(); i++) {
-				screenData->entries[i].parentEntity->addChild(screenData->entries[i].entity);
-				selectEntity(screenData->entries[i].entity, false);
-			}					
-			multiSelect = oldMultiSelect;		
-		} else {
-			for(int i=0; i < screenData->entries.size(); i++) {
-				deleteEntity(screenData->entries[i].entity);
-			}					
-			selectEntity(NULL, false);
-		}
-	} else if(actionName == "paste") {
-		if(screenData->reverse) {
-			for(int i=0; i < screenData->entries.size(); i++) {
-				deleteEntity(screenData->entries[i].entity);
-			}		
-		} else {
-			bool oldMultiSelect = multiSelect;
-			multiSelect = true;
-			for(int i=0; i < screenData->entries.size(); i++) {
-				screenData->entries[i].parentEntity->addChild(screenData->entries[i].entity);
-				selectEntity(screenData->entries[i].entity, false);
-			}
-			multiSelect = oldMultiSelect;			
-		}
-		if(treeView) {
-			treeView->Refresh();		
-		}					
-	} else if(actionName == "create_entity") {	
-		if(screenData->reverse) {
-			deleteEntity(screenData->entry.entity);
-		} else {
-			screenData->entry.parentEntity->addChild(screenData->entry.entity);			
-		}
-		
-		if(treeView) {
-			treeView->Refresh();		
-		}			
-					
-	} else if(actionName == "prop_change") {
-		PolycodeEditorPropActionData *propData = (PolycodeEditorPropActionData*) data;
-		propData->sheet->applyPropActionData(propData);
-	}
-}
 
 void PolycodeScreenEditorMain::syncTransformToSelected() {
-	sizePreviewShape->setShapeSize(layerBaseEntity->getWidth() * objectBaseEntity->getScale().x, layerBaseEntity->getHeight() * objectBaseEntity->getScale().x);
-
-
-	if(selectedEntities.size() == 0)
+	if(!selectedEntity)
 		return;
 	
-	ScreenEntity *selectedEntity = selectedEntities[0];
-	
 	objectBaseEntity->rebuildTransformMatrix();	
 	selectedEntity->rebuildTransformMatrix();
 	
@@ -939,7 +782,8 @@
 		Matrix4 final = selectedEntity->getConcatenatedMatrixRelativeTo(baseEntity);
 		screenTransform->setPosition(final.getPosition());
 		screenTransformShape->dirtyMatrix(false);
-		screenTransformShape->setTransformByMatrixPure(final);		
+		screenTransformShape->setTransformByMatrixPure(final);
+		
 		screenTransform->rotation.roll = selectedEntity->getCombinedRoll();
 	} else {
 			
@@ -953,6 +797,13 @@
 		screenTransformShape->setPosition(center);
 		
 		screenTransform->rotation.roll = groupRoll * TODEGREES;
+
+//		screenTransformShape->setShapeSize(selectedEntity->getWidth(),selectedEntity->getHeight());	
+//		Matrix4 final = selectedEntity->getConcatenatedMatrixRelativeTo(baseEntity);
+//		screenTransform->setPosition(final.getPosition());			
+//		screenTransformShape->matrixDirty = false;
+//		screenTransformShape->setTransformByMatrixPure(final);		
+		
 	}
 	
 	screenTransform->rebuildTransformMatrix();
@@ -1056,65 +907,11 @@
 		break;
 		case MODE_ZOOM:
 		{
-			if(!zoomingMoved) {
-			
-				Number zoomChange = 2.0;
-				
-				if(CoreServices::getInstance()->getCore()->getInput()->getKeyState(KEY_LALT) ||
-					CoreServices::getInstance()->getCore()->getInput()->getKeyState(KEY_RALT)) {
-					zoomChange = 1.0/zoomChange;
-				} 
-	
-			
-				Number newScale = baseZoomScale * zoomChange;
-				if(newScale < 0.1) 
-					newScale = 0.1;
-					
-				objectBaseEntity->setScale(newScale, newScale);					
-								
-				Vector2 centerPosition = Vector2(getWidth()/2.0, getHeight()/2.0);
-				
-				Vector2 finalPosition = Vector2(				
-					((centerPosition.x)) - (zoomBaseMousePosition.x / baseZoomScale * newScale),
-					((centerPosition.y)) - (zoomBaseMousePosition.y / baseZoomScale * newScale)
-				);				
-
-				baseEntity->setPosition(finalPosition);				
-				resizePreviewScreen();
-				syncTransformToSelected();
-								
-				// set zoom selection box to Free zoom
-				zoomComboBox->setSelectedIndex(7);				
-			}
 			zooming = false;
 		}
 		break;
 		case MODE_SELECT:	
 		{
-			Vector2 trans = (CoreServices::getInstance()->getCore()->getInput()->getMousePosition() - mouseBase);
-			if(trans.length() > 0) {
-		
-			if(moving) {
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				for(int i=0; i < selectedEntities.size(); i++) {
-					data->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->position));
-				}
-				editor->didAction("move", beforeData, data);
-			} else if(scalingX || scalingY) {
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				for(int i=0; i < selectedEntities.size(); i++) {
-					data->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->scale));
-				}
-				editor->didAction("scale", beforeData, data);
-			} else if(rotating) {
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				for(int i=0; i < selectedEntities.size(); i++) {
-					data->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->position, selectedEntities[i]->getRotation()));
-				}
-				editor->didAction("rotate", beforeData, data);
-			}
-			}
-			
 			moving = false;
 			scalingY = false;
 			scalingX = false;
@@ -1126,16 +923,6 @@
 	}
 }
 
-void PolycodeScreenEditorMain::adjustForSnap(Vector2 *position) {
-	if(gridSnap) {
-		position->x = round(((Number)position->x)/((Number)gridSize)) * gridSize;
-		position->y = round(((Number)position->y)/((Number)gridSize)) * gridSize;	
-	} else if(pixelSnap) {
-		position->x = round(((Number)position->x));
-		position->y = round(((Number)position->y));
-	}			
-}
-
 void PolycodeScreenEditorMain::handleMouseMove(Vector2 position) {
 	switch(mode) {
 	
@@ -1159,29 +946,16 @@
 		case MODE_ZOOM:
 		{
 			if(zooming) {
-				Vector2 mousePosition = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();
-				Vector2 offset = mousePosition-mouseBase;
-				Number newScale = baseZoomScale + ((offset.x-offset.y) * 0.002);
+				Vector2 offset = position-mouseBase;
+				Number newScale = baseZoomScale + (offset.x * 0.01);
 				if(newScale < 0.1) 
 					newScale = 0.1;
 					
-				objectBaseEntity->setScale(newScale, newScale);					
-				
-				Vector2 centerPosition = Vector2(getWidth()/2.0, getHeight()/2.0);
-				
-				Vector2 finalPosition = Vector2(				
-					((centerPosition.x)) - (zoomBasePosition.x / baseZoomScale * newScale),
-					((centerPosition.y)) - (zoomBasePosition.y / baseZoomScale * newScale)
-				);				
-
-				baseEntity->setPosition(finalPosition);
-				
+				objectBaseEntity->setScale(newScale, newScale);
 				resizePreviewScreen();
 				syncTransformToSelected();
 				
-				// set zoom selection box to Free zoom
 				zoomComboBox->setSelectedIndex(7);
-				zoomingMoved = true;
 			}
 		}
 		break;
@@ -1190,7 +964,7 @@
 		
 			if(rotating) {
 			
-				Vector2 diff = CoreServices::getInstance()->getCore()->getInput()->getMousePosition() - baseScaleScreenPosition;
+				Vector2 diff = CoreServices::getInstance()->getCore()->getInput()->getMousePosition() - screenTransform->getScreenPosition();
 				diff.Normalize();
 				Number newAngle = atan2(diff.x, diff.y);				
 			
@@ -1203,7 +977,7 @@
 					for(int i=0; i < selectedEntities.size(); i++) {
 						Vector3 v3Center = Vector3(groupCenterPoint.x,groupCenterPoint.y,0.0);
 						
-						Vector3 v3CenterRelative = selectedEntities[i]->getParentEntity()->getConcatenatedMatrixRelativeTo(baseEntity).Inverse() * v3Center;	
+						Vector3 v3CenterRelative = selectedEntities[i]->getParentEntity()->getConcatenatedMatrixRelativeTo(baseEntity).inverse() * v3Center;	
 						
 						selectedEntities[i]->setRotation(baseRotateAngles[i] - (TODEGREES * (newAngle-baseAngle)));						
 						
@@ -1225,34 +999,9 @@
 				
 				}
 				syncTransformToSelected();			
-			} 
-			else if(scalingY && scalingX) {
-				Vector2 newMousePosition = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();
-				Vector2 trans = newMousePosition - mouseBase;
-								
-				Number baseDist = mouseBase.distance(baseScaleScreenPosition);
-				Number newDist = newMousePosition.distance(baseScaleScreenPosition);	
-				Number scaleMod = 0.04;
-				Number newScale = newDist - baseDist;
-
-				for(int i=0; i < selectedEntities.size(); i++) {												
-					Number newScaleX, newScaleY;
-					if(baseEntityScales[i].x < 0.0) {
-						newScaleX = (baseEntityScales[i].x - (newScale * scaleMod));					
-					} else {
-						newScaleX = (baseEntityScales[i].x + (newScale * scaleMod));					
-					}
-					
-					if(baseEntityScales[i].y < 0.0) {
-						newScaleY = (baseEntityScales[i].y - (newScale * scaleMod));					
-					} else {
-						newScaleY = (baseEntityScales[i].y + (newScale * scaleMod));					
-					}					
-					
-					selectedEntities[i]->setScale(newScaleX, newScaleY);
-				}
-				syncTransformToSelected();					
-			} else if(scalingY) {												
+			} else if(scalingY) {				
+				
+				
 				Vector2 trans = CoreServices::getInstance()->getCore()->getInput()->getMousePosition() - mouseBase;
 				for(int i=0; i < selectedEntities.size(); i++) {			
 							
@@ -1262,16 +1011,11 @@
 					q.fromAxes(0.0, 0.0, -selectedEntities[i]->getCombinedRoll());
 					trans3 = q.applyTo(trans3);
 								
-					Number scaleMod = 0.04;
-					
-					if(baseEntityScales[i].y < 0.0) {
-						selectedEntities[i]->setScaleY(baseEntityScales[i].y + (trans3.y * scaleMod));
-					} else {
-						selectedEntities[i]->setScaleY(baseEntityScales[i].y - (trans3.y * scaleMod));	
-					}					
-																	
+					Number scaleMod = 0.04;								
+					selectedEntities[i]->setScaleY(baseEntityScales[i].y - (trans3.y * scaleMod));
 				}
-				syncTransformToSelected();					
+				syncTransformToSelected();	
+				
 			} else if(scalingX) {				
 				
 				Vector2 trans = CoreServices::getInstance()->getCore()->getInput()->getMousePosition() - mouseBase;
@@ -1283,13 +1027,8 @@
 					q.fromAxes(0.0, 0.0, -selectedEntities[i]->getCombinedRoll());
 					trans3 = q.applyTo(trans3);
 								
-					Number scaleMod = 0.04;
-					
-					if(baseEntityScales[i].x < 0.0) {			
-						selectedEntities[i]->setScaleX(baseEntityScales[i].x - (trans3.x * scaleMod));		
-					} else {
-						selectedEntities[i]->setScaleX(baseEntityScales[i].x + (trans3.x * scaleMod));							
-					}
+					Number scaleMod = 0.04;								
+					selectedEntities[i]->setScaleX(baseEntityScales[i].x + (trans3.x * scaleMod));				
 				}
 				syncTransformToSelected();	
 				
@@ -1301,14 +1040,17 @@
 					Vector3 trans3 = Vector3(trans.x, trans.y, 0.0);
 				
 					Vector3 trans3_a = baseEntity->getConcatenatedMatrix() * trans3;				
-					Vector3 trans3_b = selectedEntities[i]->getParentEntity()->getConcatenatedMatrix().Inverse() * trans3_a;
+					Vector3 trans3_b = selectedEntities[i]->getParentEntity()->getConcatenatedMatrix().inverse() * trans3_a;
 				
-					trans3_b = trans3_b - selectedEntities[i]->getParentEntity()->getConcatenatedMatrixRelativeTo(baseEntity).Inverse().getPosition();
+					trans3_b = trans3_b - selectedEntities[i]->getParentEntity()->getConcatenatedMatrixRelativeTo(baseEntity).inverse().getPosition();
 					
 				
 					Vector2 newPosition = Vector2(baseEntityPositions[i].x + trans3_b.x, baseEntityPositions[i].y + trans3_b.y);
 				
-					adjustForSnap(&newPosition);
+					if(gridSnap) {
+						newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+						newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+					}				
 				
 					selectedEntities[i]->setPosition(newPosition); 
 				}
@@ -1320,54 +1062,86 @@
 		case MODE_SHAPE:
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+				
 				previewShape->setPosition(newPosition);		
 		}
 		break;
 		case MODE_IMAGE:
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewImage->setPosition(newPosition);	
 		}
 		break;
 		case MODE_PARTICLES:
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewEmitter->setPosition(newPosition);	
 		}
 		break;		
 		case MODE_TEXT:				
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewLabel->setPosition(newPosition);				
 		}
 		break;
 		case MODE_LINK:				
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewInstance->setPosition(newPosition);				
 		}
 		break;		
 		case MODE_ENTITY:				
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewEntity->setPosition(newPosition);				
 		}
 		case MODE_SOUND:				
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewSound->setPosition(newPosition);				
 		}		
 		case MODE_SPRITE:
 		{
 				Vector2 newPosition = Vector2(position.x / objectBaseEntity->getScale2D().x, position.y /objectBaseEntity->getScale2D().y);			
-				adjustForSnap(&newPosition);		
+				if(gridSnap) {
+					newPosition.x = round(((Number)newPosition.x)/((Number)gridSize)) * gridSize;
+					newPosition.y = round(((Number)newPosition.y)/((Number)gridSize)) * gridSize;	
+				}				
+		
 			previewSprite->setPosition(newPosition);				
 		}			
 		
@@ -1388,15 +1162,9 @@
 		break;
 		case MODE_ZOOM:
 		{
-			mouseBase = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();
+			mouseBase = position;
 			zooming = true;
 			baseZoomScale = objectBaseEntity->getScale().x;
-			basePanPosition = baseEntity->getPosition2D();
-			Vector2 centerPosition = Vector2(getWidth()/2.0, getHeight()/2.0);
-			zoomBasePosition.x = (centerPosition.x - baseEntity->position.x);
-			zoomBasePosition.y = (centerPosition.y - baseEntity->position.y);
-			zoomingMoved = false;
-			zoomBaseMousePosition = position;
 		}
 		break;
 		case MODE_TEXT:
@@ -1415,14 +1183,7 @@
 				
 				if(treeView) {
 					treeView->Refresh();		
-				}
-				
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingLabel);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingLabel);
-				editor->didAction("create_entity", beforeData, data);
+				}				
 		}
 		break;		
 		case MODE_IMAGE:
@@ -1435,21 +1196,12 @@
 				placingImage->addEventListener(this, InputEvent::EVENT_MOUSEUP);
 				placingImage->id = "ScreenImage."+String::IntToString(placementCount);
 				placingImage->blockMouseInput = true;
-				placingImage->getTexture()->reloadOnFileModify = true;
 				currentLayer->addChild(placingImage);
 				placementCount++;
 					
 				if(treeView) {
 					treeView->Refresh();		
-				}	
-				
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingImage);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingImage);
-				editor->didAction("create_entity", beforeData, data);
-											
+				}											
 		}
 		break;		
 		case MODE_SHAPE:
@@ -1468,15 +1220,7 @@
 
 				if(treeView) {
 					treeView->Refresh();		
-				}
-				
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingShape);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingShape);				
-				editor->didAction("create_entity", beforeData, data);
-															
+				}											
 		}
 		break;
 		case MODE_PARTICLES:
@@ -1531,15 +1275,7 @@
 				
 				if(treeView) {
 					treeView->Refresh();		
-				}
-				
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingEmitter);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingEmitter);				
-				editor->didAction("create_entity", beforeData, data);
-																										
+				}											
 		}
 		break;			
 		case MODE_SPRITE:
@@ -1552,7 +1288,6 @@
 				currentLayer->addChild(placingSprite);
 				placingSprite->id = "ScreenSprite."+String::IntToString(placementCount);
 				placingSprite->blockMouseInput = true;
-				placingSprite->getTexture()->reloadOnFileModify = true;
 				
 				if(previewSprite->getCurrentAnimation()) {
 						placingSprite->playAnimation(previewSprite->getCurrentAnimation()->name, 0, false);
@@ -1563,15 +1298,7 @@
 
 				if(treeView) {
 					treeView->Refresh();		
-				}
-				
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingSprite);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingSprite);				
-				editor->didAction("create_entity", beforeData, data);
-																										
+				}											
 		}
 		break;		
 		case MODE_LINK:
@@ -1585,20 +1312,15 @@
 				placingInstance->id = "ScreenInstance."+String::IntToString(placementCount);				
 				placingInstance->blockMouseInput = true;
 				placementCount++;	
-								
+				
+				placingInstance->setWidth(50);
+				placingInstance->setHeight(50);				
+				
 				applyEditorProperties(placingInstance);
 
 				if(treeView) {
 					treeView->Refresh();		
-				}
-
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingInstance);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingInstance);				
-				editor->didAction("create_entity", beforeData, data);
-															
+				}											
 		}
 		break;		
 		case MODE_ENTITY:
@@ -1620,16 +1342,7 @@
 
 				if(treeView) {
 					treeView->Refresh();		
-				}
-
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingEntity);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingEntity);				
-				editor->didAction("create_entity", beforeData, data);
-				
-								
+				}								
 		}
 		break;
 		case MODE_SOUND:
@@ -1654,16 +1367,7 @@
 			
 				if(treeView) {
 					treeView->Refresh();		
-				}
-
-				PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-				PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-				data->reverse = false;
-				data->entry = PolycodeScreenEditorActionDataEntry(placingSound);
-				beforeData->entry = PolycodeScreenEditorActionDataEntry(placingSound);				
-				editor->didAction("create_entity", beforeData, data);
-				
-																				
+				}								
 		}
 		break;		
 	}
@@ -1684,7 +1388,6 @@
 	markerImage->editorOnly = true;
 	markerImage->billboardMode = true;
 	markerImage->billboardIgnoreScale = true;
-	markerImage->addTag("editorRef");
 	
 	ScreenEntityNameDisplay *nameDisplay = new ScreenEntityNameDisplay(entity);
 	entity->addChild(nameDisplay);
@@ -1696,7 +1399,6 @@
 void PolycodeScreenEditorMain::createParticleRef(ScreenParticleEmitter *target) {
 
 	ScreenImage *markerImage = new ScreenImage("Images/particle_system_icon_editor.png");
-	markerImage->addTag("editorRef");
 	markerImage->setColor(0.0, 1.0, 1.0, 1.0);
 	target->addChild(markerImage);
 	markerImage->setPositionMode(ScreenEntity::POSITION_CENTER);
@@ -1708,7 +1410,6 @@
 	
 	refRect->strokeEnabled = true;
 	refRect->strokeWidth = 1.0;
-	refRect->addTag("editorRef");
 	refRect->id = "refRect";
 	refRect->setStrokeColor(1.0, 1.0, 0.0, 0.5);
 	refRect->setColor(0.0, 0.0, 0.0, 0.0);
@@ -1724,8 +1425,7 @@
 	markerImage->editorOnly = true;
 	markerImage->billboardMode = true;
 	markerImage->billboardIgnoreScale = true;
-	markerImage->addTag("editorRef");
-		
+	
 	ScreenShape *refCircle = new ScreenShape(ScreenShape::SHAPE_CIRCLE, target->getSound()->getReferenceDistance(), target->getSound()->getReferenceDistance(), 16);
 	refCircle->strokeEnabled = true;
 	refCircle->strokeWidth = 1.0;
@@ -1734,13 +1434,11 @@
 	refCircle->setColor(0.0, 0.0, 0.0, 0.0);
 	target->addChild(refCircle);
 	refCircle->editorOnly = true;				
-	refCircle->addTag("editorRef");
-		
+	
 	ScreenShape *maxCircle = new ScreenShape(ScreenShape::SHAPE_CIRCLE, target->getSound()->getMaxDistance(), target->getSound()->getMaxDistance(), 16);
 	maxCircle->strokeEnabled = true;
 	maxCircle->strokeWidth = 1.0;
 	maxCircle->id = "maxCircle";				
-	maxCircle->addTag("editorRef");	
 	maxCircle->setStrokeColor(0.0, 1.0, 1.0, 0.5);
 	maxCircle->setColor(0.0, 0.0, 0.0, 0.0);
 	target->addChild(maxCircle);
@@ -1774,9 +1472,7 @@
 	groupRoll = 0;
 }
 
-void PolycodeScreenEditorMain::selectEntity(ScreenEntity *entity, bool doAction) {
-
-	((ScreenEntity*)baseEntity->getParentEntity())->focusChild(baseEntity);
+void PolycodeScreenEditorMain::selectEntity(ScreenEntity *entity) {
 
 	if(entity != NULL) {
 		if(hasSelected(entity)) {
@@ -1784,13 +1480,6 @@
 			return;
 		}
 	}	
-	
-	if(doAction) {
-		beforeData = new PolycodeScreenEditorActionData();
-		for(int i=0; i < selectedEntities.size(); i++) {
-			beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]));
-		}		
-	}	
 
 	transform2dSheet->entity = NULL;
 	entitySheet->entity = NULL;
@@ -1802,10 +1491,9 @@
 	particleSheet->emitter = NULL;
 	spriteSheet->sprite = NULL;
 	entityPropSheet->entity = NULL;
-	screenEntitySheet->entity = NULL;
 				
 	if(!entity) {
-		selectedEntities.clear();
+		selectedEntity = NULL;
 		screenTransform->visible = false;
 		screenTransform->enabled = false;
 		screenTransformShape->visible = false;			
@@ -1815,9 +1503,6 @@
 		if(treeView) {
 			treeView->Refresh();		
 		}
-		if(doAction) {
-			editor->didAction("select", beforeData, NULL, false);
-		}
 		return;
 	}
 	
@@ -1828,24 +1513,16 @@
 	selectedEntities.push_back(entity);
 	
 	resetSelectedEntityTransforms();
+		
+	currentLayer->focusChild(entity);
 	
-	ScreenEntity *parent = NULL;
-	parent = (ScreenEntity*)entity->getParentEntity();
-	
-	if(entity->getEntityProp("editor_type") != "layer" && entity != layerBaseEntity) {	
+	if(entity->getEntityProp("editor_type") != "layer" && entity->getEntityProp("editor_type") != "root") {	
 		transform2dSheet->entity = entity;
 	}
 	
-	if(entity != layerBaseEntity && entity->getEntityProp("editor_type") != "layer") {
+	if(entity->getEntityProp("editor_type") != "root") {
 		entitySheet->entity = entity;
 		entityPropSheet->entity = entity;
-		screenEntitySheet->entity = entity;
-	} else {
-		entitySheet->entity = entity;
-		if(entity == layerBaseEntity) {
-			entityPropSheet->entity = entity;		
-			screenEntitySheet->entity = entity;			
-		}
 	}
 
 	if(dynamic_cast<ScreenParticleEmitter*>(entity)) {
@@ -1858,7 +1535,6 @@
 	
 	if(dynamic_cast<ScreenShape*>(entity)) {
 		shapeSheet->shape = (ScreenShape*) entity;
-		screenEntitySheet->entity = NULL;
 	}
 
 	if(dynamic_cast<ScreenImage*>(entity)) {
@@ -1873,12 +1549,12 @@
 		soundSheet->sound = ((ScreenSound*) entity);
 	}
 	
-	if(dynamic_cast<ScreenEntityInstance*>(entity) && entity != layerBaseEntity) {
+	if(dynamic_cast<ScreenEntityInstance*>(entity)) {
 		instanceSheet->instance = ((ScreenEntityInstance*) entity);
 	}
 			
 		
-	if(entity->getEntityProp("editor_type") != "layer" && entity != layerBaseEntity) {
+	if(entity->getEntityProp("editor_type") != "layer" && entity->getEntityProp("editor_type") != "root") {
 		screenTransform->visible = true;
 		screenTransform->enabled = true;	
 		screenTransformShape->visible = true;
@@ -1888,6 +1564,7 @@
 		screenTransformShape->visible = false;	
 	}
 	
+	selectedEntity = entity;
 	syncTransformToSelected();	
 		
 	entityProps->updateProps();	
@@ -1896,14 +1573,6 @@
 		treeView->Refresh();		
 	}
 	
-	if(doAction) {
-		PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-		for(int i=0; i < selectedEntities.size(); i++) {
-			data->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]));
-		}			
-		editor->didAction("select", beforeData, data, false);
-	}	
-	
 	dispatchEvent(new Event(), Event::CHANGE_EVENT);
 }
 
@@ -1911,91 +1580,47 @@
 	previewAspectRatio = aspects[aspectComboBox->getSelectedIndex()];
 	Number scaleVal = 1.0/atof(scaleInput->getText().c_str());		
 	screenPreviewShape->setShapeSize(1.0/scaleVal * previewAspectRatio * objectBaseEntity->getScale().x, 1.0/scaleVal * objectBaseEntity->getScale().x);
-	
-	sizePreviewShape->setShapeSize(layerBaseEntity->getWidth() * objectBaseEntity->getScale().x, layerBaseEntity->getHeight() * objectBaseEntity->getScale().x);
-
 }
-
-void PolycodeScreenEditorMain::setRefVisibility(bool val) {
-		setEntityRefVisibility(objectBaseEntity, val);
-}
-
-void PolycodeScreenEditorMain::setEntityRefVisibility(ScreenEntity *entity, bool val) {
-	if(entity->editorOnly == true) {
-		if(entity->hasTag("editorRef")) {
-			entity->visible = val;
-		}
-	}
 	
-	for(int i=0; i < entity->getNumChildren(); i++) {
-		setEntityRefVisibility((ScreenEntity*)entity->getChildAtIndex(i), val);
-	}
-}
-
-void PolycodeScreenEditorMain::deleteEntity(ScreenEntity *entity) {				
-	if(entity == layerBaseEntity) {
-		PolycodeConsole::print("You cannot delete the root entity.\n");
-	} else if(entity->getEntityProp("editor_type") == "layer" && layers.size() == 1) {
-		PolycodeConsole::print("You cannot delete the last layer.\n");						
-	} else {
-		entity->ownsChildren = true;
-		entity->getParentEntity()->removeChild(entity);
-
-		if(entity->getEntityProp("editor_type") == "layer") {
-			for(int i=0; i < layers.size(); i++) {
-				if(layers[i] == entity) {
-					layers.erase(layers.begin()+i);
-				}
-			}
-		}							
-
-		if(entity == currentLayer) {
-				setCurrentLayer(layers[0]);
-				treeView->targetLayer = currentLayer;
-		}
-		treeView->Refresh();
-	}
-}
-
 void PolycodeScreenEditorMain::handleEvent(Event *event) {
-
-	if(!editor->enabled)
-		return;
-		
 	InputEvent *inputEvent = (InputEvent*) event;
 	
-	if(event->getEventCode() == Event::RESOURCE_RELOAD_EVENT && event->getEventType() == "") {
-			ScreenEntityInstanceResourceEntry *entry = dynamic_cast<ScreenEntityInstanceResourceEntry*>(event->getDispatcher());
-			if(entry) {	
-				applyEditorProperties(entry->getInstance());
-				applyEditorOnlyChildren(entry->getInstance());				
-			}
-	} else if(event->getEventCode() == UIEvent::CHANGE_EVENT && event->getEventType() == "UIEvent") {
+	if(event->getEventCode() == UIEvent::CHANGE_EVENT && event->getEventType() == "UIEvent") {
 
 
 		if(event->getDispatcher() == pixelSnapBox) {
-			pixelSnap = pixelSnapBox->isChecked();
-		} else if(event->getDispatcher() == gridSnapBox) {
+			layerBaseEntity->setDefaultScreenOptions(pixelSnapBox->isChecked());
+			screenTransform->setDefaultScreenOptions(pixelSnapBox->isChecked());
+		}
+
+	
+		if(event->getDispatcher() == gridSnapBox) {
 			gridSnap = gridSnapBox->isChecked();
-		} else if(event->getDispatcher() == gridSizeInput) {
+		}
+	
+		if(event->getDispatcher() == gridSizeInput) {
 			setGrid(atoi(gridSizeInput->getText().c_str()));
-		} else if(event->getDispatcher() == gridCheckBox) {
+		}
+	
+		if(event->getDispatcher() == gridCheckBox) {
 			grid->visible = gridCheckBox->isChecked();
-		} else if(event->getDispatcher() == scaleInput) {
+		}
+	
+		if(event->getDispatcher() == scaleInput) {
 			resizePreviewScreen();
-		} else if(event->getDispatcher() == zoomComboBox) {
+		}
+
+		if(event->getDispatcher() == zoomComboBox) {
 			if(zoomComboBox->getSelectedIndex() != 7) {
 				Number newScale = zooms[zoomComboBox->getSelectedIndex()];
 				objectBaseEntity->setScale(newScale, newScale);
-//				baseEntity->setPosition(getWidth()/2.0, getHeight()/2.0);
 				resizePreviewScreen();
 				syncTransformToSelected();				
 			}
-		}else if(event->getDispatcher() == aspectComboBox) {
+		}
+
+		if(event->getDispatcher() == aspectComboBox) {
 			resizePreviewScreen();
-		} else if(event->getDispatcher() == showRefsBox) {
-			setRefVisibility(showRefsBox->isChecked());
-			sizePreviewShape->visible = showRefsBox->isChecked();
 		}
 	}
 
@@ -2030,12 +1655,7 @@
 			entityProps->scrollContainer->setScrollValue(0.0, 1.0);
 	}
 	
-	if(event->getEventCode() == PropEvent::EVENT_PROP_CHANGE) {
-		PropEvent *propEvent  = (PropEvent*) event;
-		editor->didAction("prop_change", propEvent->beforeData, propEvent->afterData);
-	}
-	
-	if((event->getDispatcher() == transform2dSheet || event->getDispatcher() == labelSheet || event->getDispatcher() == imageSheet || event->getDispatcher() == shapeSheet || event->getDispatcher() == screenEntitySheet) && event->getEventType() == "") {
+	if((event->getDispatcher() == transform2dSheet || event->getDispatcher() == labelSheet || event->getDispatcher() == imageSheet) && event->getEventType() == "") {
 		syncTransformToSelected();
 		treeView->Refresh();		
 	}
@@ -2044,7 +1664,7 @@
 		if(event->getEventCode() == InputEvent::EVENT_KEYDOWN) {
 			switch(inputEvent->key) {
 				case Polycode::KEY_ESCAPE:
-					if(selectedEntities.size() > 0) {
+					if(selectedEntity) {
 						scalingY = false;
 						scalingX = false;
 						moving = false;
@@ -2054,22 +1674,17 @@
 				break;
 				case Polycode::KEY_BACKSPACE:
 				{
-					if(selectedEntities.size() > 0 && baseEntity->hasFocus) {
+					if(selectedEntity) {
+						if(selectedEntity->hasFocus) {
+							selectedEntity->ownsChildren = true;
+							selectedEntity->getParentEntity()->removeChild(selectedEntity);
+							if(selectedEntity == currentLayer) {
+								currentLayer = NULL;
+							}							
+							delete selectedEntity;
+							selectEntity(NULL);							
 							
-						PolycodeScreenEditorActionData *oldData = new PolycodeScreenEditorActionData();
-						PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-						data->reverse = false;
-						for(int i=0; i < selectedEntities.size(); i++) {
-							oldData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]));
-							data->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]));
-						}			
-					
-						for(int i=0; i < selectedEntities.size(); i++) {
-							deleteEntity(selectedEntities[i]);
 						}
-									
-						editor->didAction("delete", oldData, data); 						
-						selectEntity(NULL, false);
 					}
 				}
 				break;
@@ -2086,9 +1701,6 @@
 				case Polycode::KEY_LSHIFT:
 					multiSelect = true;
 				break;
-				default:
-					// We don't care about the other keys
-				break;
 			}
 		}
 		
@@ -2106,58 +1718,34 @@
 				case Polycode::KEY_RSHIFT:
 				case Polycode::KEY_LSHIFT:
 					multiSelect = false;
-				break;
-				default:
-					// We don't care about the other keys
-				break;
+				break;				
 			}
 		}
 	
 		
 	}
 
-	if(event->getDispatcher() == transformScalerXY) {
-		if(selectedEntities.size() > 0) {
-			scalingY = true;
-			scalingX = true;			
-			resetSelectedEntityTransforms();
-			beforeData = new PolycodeScreenEditorActionData();
-			for(int i=0; i < selectedEntities.size(); i++) {
-				beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->scale));
-			}			
-			mouseBase = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();			
-			baseScaleScreenPosition = screenTransform->getScreenPosition();
-		}	
-	} else if(event->getDispatcher() == transformScalerY) {
-		if(selectedEntities.size() > 0) {
+	if(event->getDispatcher() == transformScalerY) {
+		if(selectedEntity) {
 			scalingY = true;
 			resetSelectedEntityTransforms();
-			beforeData = new PolycodeScreenEditorActionData();			
-			for(int i=0; i < selectedEntities.size(); i++) {
-				beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->scale));
-			}						
 			mouseBase = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();			
 		}
-	} else if(event->getDispatcher() == transformScalerX) {
-		if(selectedEntities.size() > 0) {
+	}
+
+	if(event->getDispatcher() == transformScalerX) {
+		if(selectedEntity) {
 			scalingX = true;
 			resetSelectedEntityTransforms();
-			beforeData = new PolycodeScreenEditorActionData();			
-			for(int i=0; i < selectedEntities.size(); i++) {
-				beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->scale));
-			}						
 			mouseBase = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();			
 		}
-	} else if(event->getDispatcher() == transformRotator) {
-		if(selectedEntities.size() > 0) {
-			baseScaleScreenPosition = screenTransform->getScreenPosition();		
+	}
+	
+	if(event->getDispatcher() == transformRotator) {
+		if(selectedEntity) {
 			rotating = true;
 			resetSelectedEntityTransforms();
 			mouseBase = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();
-			beforeData = new PolycodeScreenEditorActionData();			
-			for(int i=0; i < selectedEntities.size(); i++) {
-				beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->position, selectedEntities[i]->getRotation()));
-			}
 			
 			Vector2 diff = mouseBase - screenTransform->getScreenPosition();
 			baseAngle = atan2(diff.x, diff.y);
@@ -2169,55 +1757,56 @@
 	if(event->getEventCode() == UIEvent::CLICK_EVENT && event->getEventType() == "UIEvent") {
 	
 		if(event->getDispatcher() == moveUpButton) {
-			for(int i=0; i < selectedEntities.size(); i++) {
-				if(selectedEntities[i]->getParentEntity()) {
-					((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildUp(selectedEntities[i]);
+			if(selectedEntity) {
+				if(selectedEntity->getParentEntity()) {
+					for(int i=0; i < selectedEntities.size(); i++) {
+						((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildUp(selectedEntities[i]);
+					}
+
 				}
-			}
+			}	
 		}
 
 		if(event->getDispatcher() == moveDownButton) {
-			for(int i=0; i < selectedEntities.size(); i++) {
-				if(selectedEntities[i]->getParentEntity()) {
-					((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildDown(selectedEntities[i]);
-				}
-			}
-		}
+			if(selectedEntity) {
+				if(selectedEntity->getParentEntity()) {
+					for(int i=0; i < selectedEntities.size(); i++) {
+						((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildDown(selectedEntities[i]);
+					}
 
-		if(event->getDispatcher() == moveTopButton) {
-			for(int i=0; i < selectedEntities.size(); i++) {
-				if(selectedEntities[i]->getParentEntity()) {
-					((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildTop(selectedEntities[i]);
 				}
-			}
+			}	
 		}
 
 		if(event->getDispatcher() == moveTopButton) {
-			for(int i=0; i < selectedEntities.size(); i++) {
-				if(selectedEntities[i]->getParentEntity()) {
-					((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildTop(selectedEntities[i]);
+			if(selectedEntity) {
+				if(selectedEntity->getParentEntity()) {
+					for(int i=0; i < selectedEntities.size(); i++) {
+						((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildTop(selectedEntities[i]);
+					}
 				}
-			}
+			}	
 		}
 
 		if(event->getDispatcher() == moveBottomButton) {
-			for(int i=0; i < selectedEntities.size(); i++) {
-				if(selectedEntities[i]->getParentEntity()) {
-					((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildBottom(selectedEntities[i]);
+			if(selectedEntity) {
+				if(selectedEntity->getParentEntity()) {
+					for(int i=0; i < selectedEntities.size(); i++) {
+						((ScreenEntity*)selectedEntities[i]->getParentEntity())->moveChildBottom(selectedEntities[i]);
+					}
 				}
-			}
+			}	
 		}
-
+		
 		if(event->getDispatcher() == unparentButton) {
-			for(int i=0; i < selectedEntities.size(); i++) {
-				if(selectedEntities[i]->getParentEntity()) {
-					selectedEntities[i]->getParentEntity()->removeChild(selectedEntities[i]);
-					currentLayer->addChild(selectedEntities[i]);
+			if(selectedEntity) {
+				if(selectedEntity->getParentEntity()) {
+					selectedEntity->getParentEntity()->removeChild(selectedEntity);
+					currentLayer->addChild(selectedEntity);
+					syncTransformToSelected();
 				}
-			}
-			syncTransformToSelected();			
-		}
-			
+			}	
+		}			
 	
 		if(event->getDispatcher() == arrowToolButton) {
 			selectorImage->setPosition(arrowToolButton->getPosition().x - 4, arrowToolButton->getPosition().y - 4);
@@ -2309,19 +1898,15 @@
 			{
 				if(firstMove) {
 					Core *core = CoreServices::getInstance()->getCore();
-					if((core->getInput()->getKeyState(COPYMOD_1) || core->getInput()->getKeyState(COPYMOD_2)) && selectedEntities.size() > 0) {
+					if(core->getInput()->getKeyState(COPYMOD_1) || core->getInput()->getKeyState(COPYMOD_2)) {
 						void *data;
 						String type = Copy(&data);
 						if(data) {
 							Paste(data, type);
 							destroyClipboardData(data, type);
 						}
-						beforeData = new PolycodeScreenEditorActionData();						
-						for(int i=0; i < selectedEntities.size(); i++) {
-							beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->position));
-						}															
 					}
-					firstMove = false;					
+					firstMove = false;
 				}
 				updateCursor();
 				handleMouseMove(inputEvent->mousePosition);
@@ -2356,12 +1941,8 @@
 			if(inputEvent->getEventCode() == InputEvent::EVENT_MOUSEDOWN) {
 				if(mode == MODE_SELECT) {
 					selectEntity(childEntity);
-					if(selectedEntities.size() > 0) {
+					if(selectedEntity) {
 						moving = true;
-						beforeData = new PolycodeScreenEditorActionData();						
-						for(int i=0; i < selectedEntities.size(); i++) {
-							beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(selectedEntities[i]->position));
-						}									
 						mouseBase = CoreServices::getInstance()->getCore()->getInput()->getMousePosition();
 					}					
 					return;
@@ -2392,10 +1973,13 @@
 ScreenEntity *PolycodeScreenEditorMain::addNewLayer(String layerName) {
 	ScreenEntity *newLayer = new ScreenEntity();
 	newLayer->id = layerName;
+	newLayer->processInputEvents = true;
 	layerBaseEntity->addChild(newLayer);
-	setCurrentLayer(newLayer, false);
-	treeView->targetLayer = newLayer;	
-	newLayer->setEntityProp("editor_type", "layer");	
+	currentLayer = newLayer;
+	treeView->targetLayer = newLayer;
+	
+	newLayer->setEntityProp("editor_type", "layer");
+	
 	selectEntity(currentLayer);	
 	layers.push_back(newLayer);
 	treeView->Refresh();	
@@ -2417,7 +2001,7 @@
 	parentingLine->visible = false;
 	parenting = false;
 	
-	selectEntity(NULL, false);
+	selectEntity(NULL);
 	
 	switch(mode) {
 		case MODE_SHAPE:
@@ -2464,33 +2048,6 @@
 
 }
 
-ScreenEntity *PolycodeScreenEditorMain::getCurrentLayer() {
-	return currentLayer;
-}
-
-void PolycodeScreenEditorMain::setCurrentLayer(ScreenEntity *newLayer, bool doAction) {
-
-	if(doAction) {
-		beforeData = new PolycodeScreenEditorActionData();
-		beforeData->entry.entity = currentLayer;
-	}
-
-	if(currentLayer) {
-		currentLayer->processInputEvents = false;
-	}
-	currentLayer = newLayer;
-	if(currentLayer) {
-		currentLayer->processInputEvents = true;
-	}
-	
-	if(doAction) {
-		PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-		data->entry.entity = currentLayer;
-		editor->didAction("set_current_layer", beforeData, data, false);
-	}
-	dispatchEvent(new Event(), Event::CHANGE_EVENT);
-}
-
 void PolycodeScreenEditorMain::Resize(Number width, Number height) {
 
 
@@ -2506,7 +2063,6 @@
 		firstResize = false;
 	}
 	
-	UIElement::Resize(width, height);
 }
 
 void PolycodeScreenEditorMain::handleDroppedFile(OSFileEntry file, Number x, Number y) {
@@ -2530,16 +2086,17 @@
 
 PolycodeScreenEditor::PolycodeScreenEditor() : PolycodeEditor(true){
 
-	mainSizer = new UIHSizer(100,100,340,false);
+	mainSizer = new UIHSizer(100,100,300,false);
 	addChild(mainSizer);	
 
-	editorMain = new PolycodeScreenEditorMain(this);
+	editorMain = new PolycodeScreenEditorMain();
 	editorMain->addEventListener(this, Event::CHANGE_EVENT);
 	mainSizer->addLeftChild(editorMain);
 	
 	propSizer = new PropertiesSizer();
 	mainSizer->addRightChild(propSizer);
 	
+	editorMain->layerBaseEntity->setEntityProp("editor_type", "root");
 	treeView = new EntityTreeView(editorMain->layerBaseEntity);
 	treeView->addEventListener(this, Event::CHANGE_EVENT);
 
@@ -2557,17 +2114,11 @@
 }
 
 String PolycodeScreenEditor::Copy(void **data) {
-	if(editorMain->baseEntity->hasFocus) {
-		return editorMain->Copy(data);
-	} else {
-		return "";
-	}
+	return editorMain->Copy(data);
 }
 
 void PolycodeScreenEditor::Paste(void *data, String clipboardType) {
-	if(editorMain->baseEntity->hasFocus) {
-		editorMain->Paste(data, clipboardType);
-	}
+	editorMain->Paste(data, clipboardType);
 }
 
 void PolycodeScreenEditor::destroyClipboardData(void *data, String type) {
@@ -2594,36 +2145,18 @@
 		multiSelect = true;
 		ScreenEntityClipboardData *newData = (ScreenEntityClipboardData*) data;
 		if(currentLayer) {
-		
-			PolycodeScreenEditorActionData *beforeData = new PolycodeScreenEditorActionData();
-			PolycodeScreenEditorActionData *data = new PolycodeScreenEditorActionData();
-			data->reverse = false;
-	
 			for(int i=0; i < newData->entities.size(); i++) {
 				ScreenEntity *entity = (ScreenEntity*) newData->entities[i]->Clone(true, true);
 				entity->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
 				entity->addEventListener(this, InputEvent::EVENT_MOUSEUP);
-				
-				bool addToLayer = true;
-				if(selectedEntities.size() > 0) {
-					if(selectedEntities[0] != currentLayer) {
-						selectedEntities[0]->getParentEntity()->addChild(entity);
-						addToLayer = false;
-					}
-				}
-				
-				if(addToLayer) {
+				if(selectedEntity && selectedEntity != currentLayer) {
+					selectedEntity->getParentEntity()->addChild(entity);
+				} else {
 					currentLayer->addChild(entity);
 				}
 				applyEditorProperties(entity);
-				selectEntity(entity, false);
-
-				beforeData->entries.push_back(PolycodeScreenEditorActionDataEntry(entity));				
-				data->entries.push_back(PolycodeScreenEditorActionDataEntry(entity));
-				
+				selectEntity(entity);
 			}
-			
-			editor->didAction("paste", beforeData, data);			
 		}
 		multiSelect = false;
 	}
@@ -2646,10 +2179,6 @@
 	editorMain->labelSheet->refreshFonts();
 }
 
-void PolycodeScreenEditor::doAction(String actionName, PolycodeEditorActionData *data) {
-	editorMain->doAction(actionName, data);
-}
-
 void PolycodeScreenEditor::saveCurveToObject(ObjectEntry *entry, BezierCurve *curve) {
 	ObjectEntry *controlPoints = entry->addChild("controlPoints");
 	
@@ -2697,7 +2226,7 @@
 		}
 	}
 
-	if(dynamic_cast<ScreenEntityInstance*>(entity) && entity != editorMain->layerBaseEntity) {
+	if(dynamic_cast<ScreenEntityInstance*>(entity)) {
 		if(!(*(entry))["type"])
 			entry->addChild("type", "ScreenEntityInstance");
 		ScreenEntityInstance *instance = (ScreenEntityInstance*) entity;
@@ -2747,9 +2276,7 @@
 		emitterEntry->addChild("particleCount", (int)emitter->getNumParticles());
 
 		emitterEntry->addChild("useScaleCurves", emitter->useScaleCurves);
-		emitterEntry->addChild("useColorCurves", emitter->useColorCurves);
-
-		emitterEntry->addChild("ignoreParentMatrix", emitter->getIgnoreParentMatrix());
+		emitterEntry->addChild("useColorCurves", emitter->useColorCurves);		
 
 		saveCurveToObject(emitterEntry->addChild("scaleCurve"), &emitter->scaleCurve);
 
@@ -2822,6 +2349,10 @@
 
 	}
 
+	if(dynamic_cast<ScreenSound*>(entity)) {
+		ScreenSound *sound = ((ScreenSound*) entity);
+	}
+	
 	if(!(*(entry))["type"])
 		entry->addChild("type", "ScreenEntity");
 	
@@ -2842,9 +2373,6 @@
 	entry->addChild("posX", entity->position.x);	
 	entry->addChild("posY", entity->position.y);
 	
-	entry->addChild("width", entity->getWidth());
-	entry->addChild("height", entity->getHeight());
-		
 	ObjectEntry *children = NULL;
 	
 	for(int i=0; i < entity->getNumChildren(); i++) {
@@ -2864,9 +2392,8 @@
 	ObjectEntry *children = saveObject.root.addChild("root");
 	
 	saveEntityToObjectEntry(editorMain->layerBaseEntity, children);	
-//	saveObject.saveToXML("/Users/ivansafrin/Desktop/test2.xml");
+//	saveObject.saveToXML(filePath);
 	saveObject.saveToBinary(filePath);
-	setHasChanges(false);	
 }
 
 void PolycodeScreenEditor::handleEvent(Event *event) {
@@ -2876,28 +2403,22 @@
 			editorMain->selectEntity((ScreenEntity*)treeView->selectedEntity);
 		}
 
-		if(event->getDispatcher() == editorMain) {
-			if(editorMain->selectedEntities.size() > 0) {
-				treeView->selectedEntity = editorMain->selectedEntities[0];			
-			} else {
-				treeView->selectedEntity = NULL;
-			}
-			treeView->targetLayer = editorMain->getCurrentLayer();
-			treeView->Refresh();				
+		if(event->getDispatcher() == editorMain) {			
+			treeView->selectedEntity = editorMain->selectedEntity;
 		}
 
 	}
 
 	if(event->getEventType() == "UIEvent" && event->getEventCode() == UIEvent::CLICK_EVENT) {
 		if(event->getDispatcher() == treeView->newLayerButton) {
-			editorMain->addNewLayer("new_layer");
+			ScreenEntity *newLayer = editorMain->addNewLayer("new_layer");
 		}
 
 		if(event->getDispatcher() == treeView->targetLayerButton) {
 			if(treeView->selectedEntity->getEntityProp("editor_type") == "layer") {
 				printf("setting new layer\n");
-				editorMain->setCurrentLayer((ScreenEntity*)treeView->selectedEntity);
-				treeView->targetLayer = editorMain->getCurrentLayer();
+				editorMain->currentLayer = (ScreenEntity*)treeView->selectedEntity;
+				treeView->targetLayer = editorMain->currentLayer;
 				treeView->Refresh();				
 			} else {
 				PolycodeConsole::print("Select a layer to set as default layer.\n");
@@ -2915,30 +2436,21 @@
 	delete editorMain;
 }
 
-void PolycodeScreenEditorMain::applyEditorOnlyChildren(ScreenEntity *entity) {
-	for(int i=0; i < entity->getNumChildren(); i++) {
-		applyEditorOnly((ScreenEntity*)entity->getChildAtIndex(i));
-	}
-}
-
 void PolycodeScreenEditorMain::applyEditorProperties(ScreenEntity *entity) {
 	
 	for(int i=0; i < entity->getNumChildren(); i++) {
 		applyEditorProperties((ScreenEntity*)entity->getChildAtIndex(i));
 	}
 
-	if(dynamic_cast<ScreenEntityInstance*>(entity) && entity != layerBaseEntity) {
-		ScreenEntityInstance *instance = (((ScreenEntityInstance*)entity));
-		instance->cloneUsingReload = true;
-		applyEditorOnlyChildren(instance);
-		instance->getResourceEntry()->reloadOnFileModify = true;		
-		if(!CoreServices::getInstance()->getResourceManager()->hasResource(instance->getResourceEntry())) { 
-			instance->getResourceEntry()->addEventListener(this, Event::RESOURCE_RELOAD_EVENT);
-			CoreServices::getInstance()->getResourceManager()->addResource(instance->getResourceEntry());
-		}
+	if(dynamic_cast<ScreenEntityInstance*>(entity)) {
+		(((ScreenEntityInstance*)entity))->cloneUsingReload = true;
+		applyEditorOnly(((ScreenEntityInstance*)entity)->getRootEntity());
+		entity->setWidth(50);
+		entity->setHeight(50);		
 	} else if(dynamic_cast<ScreenShape*>(entity)) {
 	
 	} else if(dynamic_cast<ScreenImage*>(entity)) {
+
 	} else if(dynamic_cast<ScreenLabel*>(entity)) {
 
 	} else if(dynamic_cast<ScreenSound*>(entity)) {
@@ -2946,21 +2458,14 @@
 	} else if(dynamic_cast<ScreenParticleEmitter*>(entity)) {
 		createParticleRef((ScreenParticleEmitter*)entity);		
 	} else {	
-		if(entity != layerBaseEntity && entity->getEntityProp("editor_type") != "layer") {
+		if(entity->getEntityProp("editor_type") != "root" && entity->getEntityProp("editor_type") != "layer") {
+			entity->setWidth(50);
+			entity->setHeight(50);						
 			createEntityRef(entity);
 		}
 	}
 	
-	if(dynamic_cast<ScreenMesh*>(entity)) {	
-		Texture *texture = ((ScreenMesh*)entity)->getTexture();
-		if(texture) {
-			texture->reloadOnFileModify = true;
-		}
-	}
-	
-	if(entity->getEntityProp("editor_type") != "layer") {
-		entity->processInputEvents = true;
-	}
+	entity->processInputEvents = true;
 	entity->blockMouseInput = true;
 	entity->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);	
 	entity->addEventListener(this, InputEvent::EVENT_MOUSEUP);	
@@ -2970,34 +2475,28 @@
 		
 bool PolycodeScreenEditor::openFile(OSFileEntry filePath) {
 	PolycodeEditor::openFile(filePath);	
-		
+	
+	
 	ScreenEntityInstance *loadedInstance = new ScreenEntityInstance(filePath.fullPath);
 	
-	editorMain->layerBaseEntity = loadedInstance;
-	editorMain->objectBaseEntity->addChild(loadedInstance);
+	editorMain->layerBaseEntity = loadedInstance->getRootEntity();
+	editorMain->objectBaseEntity->addChild(loadedInstance->getRootEntity());
 
 	editorMain->applyEditorProperties(editorMain->layerBaseEntity);
 
 	if(editorMain->layerBaseEntity->getNumChildren() == 0) {
-		editorMain->addNewLayer("default_layer");
+		ScreenEntity *newLayer = editorMain->addNewLayer("default_layer");
 	} else {
-		editorMain->setCurrentLayer((ScreenEntity*)editorMain->layerBaseEntity->getChildAtIndex(0), false);
-		treeView->targetLayer = editorMain->getCurrentLayer();
-		
-		for(int i=0; i < editorMain->layerBaseEntity->getNumChildren(); i++) {
-			editorMain->layers.push_back((ScreenEntity*)editorMain->layerBaseEntity->getChildAtIndex(i));
-		}
+		editorMain->currentLayer = (ScreenEntity*)editorMain->layerBaseEntity->getChildAtIndex(0);
+		treeView->targetLayer = editorMain->currentLayer;
 	}
 
 	((ScreenEntity*)(editorMain->layerBaseEntity->getParentEntity()))->moveChildBottom(editorMain->layerBaseEntity);
 
 	if(treeView) {
-		treeView->setRootEntity(editorMain->layerBaseEntity);
+		treeView->rootEntity = editorMain->layerBaseEntity;
 		treeView->Refresh();
 	}
-	
-	editorMain->syncTransformToSelected();
-	
 	return true;
 }
 
diff --git a/IDE/Contents/Source/PolycodeSpriteEditor.cpp b/IDE/Contents/Source/PolycodeSpriteEditor.cpp
--- a/IDE/Contents/Source/PolycodeSpriteEditor.cpp
+++ b/IDE/Contents/Source/PolycodeSpriteEditor.cpp
@@ -198,7 +198,6 @@
 	if(event->getDispatcher() == textureProp) {
 		previewSprite->setTexture(textureProp->get());
 		previewSprite->recalculateSpriteDimensions();
-		previewSprite->getTexture()->reloadOnFileModify = true;
 	}
 
 	if(event->getDispatcher() == widthProp) {
@@ -269,8 +268,7 @@
 	addChild(previewSprite);
 	previewSprite->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 	previewSprite->setPosition(400, 80);				
-	zoomBox->setSelectedIndex(0);
-	previewSprite->getTexture()->reloadOnFileModify = true;	
+	zoomBox->setSelectedIndex(0);		
 	
 	for(int i=0;i < previewSprite->getNumAnimations(); i++) {
 		SpriteAnimation *animation = previewSprite->getAnimationAtIndex(i);
diff --git a/IDE/Contents/Source/PolycodeTextEditor.cpp b/IDE/Contents/Source/PolycodeTextEditor.cpp
--- a/IDE/Contents/Source/PolycodeTextEditor.cpp
+++ b/IDE/Contents/Source/PolycodeTextEditor.cpp
@@ -96,33 +96,17 @@
 
 PolycodeSyntaxHighlighter::PolycodeSyntaxHighlighter(String extension) {
 	
-
-	if(extension == "lua") {
-		mode = MODE_LUA;
-
-		std::vector<String>separators_s = String("[ * [ ] { } ; . , : # ( ) \t \n = + - / \\ ' \"").split(" ");
-		separators_s.push_back(" ");
-	
-		for(int i=0; i < separators_s.size(); i++) {
-			separators.push_back(separators_s[i][0]);
-		}
+//	String separators = " ;()\t\n=+-/\\'\"";	
+//	String keywords = "true,false,";
 	
-		keywords = String("for cast safe_cast and require true false class self break do end else elseif function if local nil not or repeat return then until while").split(" ");
-		
-	} else if(extension == "vert" || extension == "frag") {
-		mode = MODE_GLSL;
-		
-		std::vector<String>separators_s = String("[ * [ ] { } ; . , : ( ) \t \n = + - / \\ ' \"").split(" ");
-		separators_s.push_back(" ");
+	std::vector<String>separators_s = String("[ * [ ] { } ; . , : # ( ) \t \n = + - / \\ ' \"").split(" ");
+	separators_s.push_back(" ");
 	
-		for(int i=0; i < separators_s.size(); i++) {
-			separators.push_back(separators_s[i][0]);
-		}
-	
-		keywords = String("for cast and true falsebreak do end else if notreturn then until while uniform varying sampler2D sampler3D vec2 vec3 vec4 float in inout void mat2 mat3 mat4 bool int #define #ifdef #elif #else #endif").split(" ");
-		
+	for(int i=0; i < separators_s.size(); i++) {
+		separators.push_back(separators_s[i][0]);
 	}
 	
+	keywords = String("for cast safe_cast and require true false class self break do end else elseif function if local nil not or repeat return then until while").split(" ");
 }
 
 PolycodeSyntaxHighlighter::~PolycodeSyntaxHighlighter() {
@@ -146,145 +130,7 @@
 }
 
 std::vector<SyntaxHighlightToken> PolycodeSyntaxHighlighter::parseText(String text) {
-	if(mode == MODE_LUA) {	
-		return parseLua(text);
-	} else {
-		return parseGLSL(text);	
-	}
-}
-
-	
-std::vector<SyntaxHighlightToken> PolycodeSyntaxHighlighter::parseGLSL(String text) {
-	std::vector<SyntaxHighlightToken> tokens;
-	
-	text = text+"\n";
-	
-	const int MODE_GENERAL = 0;
-	const int MODE_COMMENT = 1;
-	const int MODE_STRING = 2;
-	const int MODE_METHOD = 3;
-	const int MODE_KEYWORD = 4;
-	const int MODE_NUMBER = 5;
-	const int MODE_MEMBER = 6;
-						
-	int mode = MODE_GENERAL;
-	
-	bool isComment = false;
-	
-	String line = "";
-	
-	char lastSeparator = ' ';
-
-	
-	for(int i=0; i < text.length(); i++) {
-		char ch = text[i];				
-		if(contains_char(ch, &separators)) {			
-
-			unsigned int type = mode;
-			unsigned int ch_type = mode;
-
-	
-			if(ch == '\"' && mode != MODE_COMMENT)
-				ch_type = MODE_STRING;
-	
-			if(mode != MODE_STRING && ch == '('  && mode != MODE_COMMENT) {
-				type = MODE_METHOD;
-			}
-
-			if(mode != MODE_STRING  && mode != MODE_COMMENT) {
-				if(contains(line, &keywords)) {
-					type = MODE_KEYWORD;
-				}
-			}
-	
-			if(mode != MODE_STRING && !isComment && mode != MODE_COMMENT) {
-			
-				if(line.isNumber()) {
-					type = MODE_NUMBER;
-				} else {
-					if(lastSeparator == '.' && ch != '.' && ch != ':') {
-						type = MODE_MEMBER;
-					}							
-				}
-			}		
-	
-			if(isComment) {
-				type = MODE_COMMENT;
-				ch_type = MODE_COMMENT;
-			}
-				
-			if(mode == MODE_COMMENT) {
-				type = MODE_COMMENT;
-				ch_type = MODE_COMMENT;
-			}
-			
-	
-			if(line != "")
-				tokens.push_back(SyntaxHighlightToken(line, type));
-			tokens.push_back(SyntaxHighlightToken(ch, ch_type));
-
-			if(ch == '/' && lastSeparator == '/' && mode != MODE_STRING) {
-				isComment = true;
-				tokens[tokens.size()-1].type = MODE_COMMENT;
-				tokens[tokens.size()-2].type = MODE_COMMENT;				
-			}
-
-			if(ch == '*' && lastSeparator == '/' && mode != MODE_STRING) {
-				tokens[tokens.size()-1].type = MODE_COMMENT;
-				tokens[tokens.size()-2].type = MODE_COMMENT;				
-				mode = MODE_COMMENT;				
-			}
-			
-			if(ch == '/' && lastSeparator == '*' && mode == MODE_COMMENT) {
-				mode = MODE_GENERAL;
-			}
-			
-			if(ch == '\n' )
-				isComment = false;
-				
-
-			if(ch == '\"'  && mode != MODE_COMMENT) {
-				if(mode == MODE_STRING) {
-					mode = MODE_GENERAL;	
-				} else {
-					mode = MODE_STRING;
-				}
-			}	
-						
-			line = "";
-			lastSeparator = ch;			
-		} else {
-			line.append(ch);
-		}
-	}
-	
-	for(int i=0; i < tokens.size(); i++) {
-		switch(tokens[i].type) {
-			case MODE_STRING:
-				tokens[i].color = globalSyntaxTheme->colors[4];			
-			break;
-			case MODE_COMMENT:
-				tokens[i].color = globalSyntaxTheme->colors[1];			
-			break;			
-			case MODE_METHOD:
-				tokens[i].color = globalSyntaxTheme->colors[3];			
-			break;			
-			case MODE_KEYWORD:
-				tokens[i].color = globalSyntaxTheme->colors[2];
-			break;		
-			case MODE_NUMBER:
-				tokens[i].color = globalSyntaxTheme->colors[6];
-			break;		
-			case MODE_MEMBER:
-				tokens[i].color = globalSyntaxTheme->colors[5];
-			break;															
-			default:
-				tokens[i].color = globalSyntaxTheme->colors[0];
-			break;
-		}
-	}
-	
-	return tokens;
+	return parseLua(text);
 }
 	
 std::vector<SyntaxHighlightToken> PolycodeSyntaxHighlighter::parseLua(String text) {
@@ -467,7 +313,7 @@
 		
 	syntaxHighligher = NULL;
 	
-	if(filePath.extension == "lua" || filePath.extension == "vert" || filePath.extension == "frag") {
+	if(filePath.extension == "lua") {
 		syntaxHighligher = new PolycodeSyntaxHighlighter(filePath.extension);
 		textInput->setSyntaxHighlighter(syntaxHighligher);
 	} else {
@@ -476,7 +322,7 @@
 	
 	Data *data = new Data();
 	if(data->loadFromFile(filePath.fullPath)) {
-		textInput->setText(data->getAsString(String::ENCODING_UTF8).replace("\r\n", "\n"));
+		textInput->setText(data->getAsString(String::ENCODING_UTF8));
 	}
 	delete data;
 	
diff --git a/IDE/Contents/Source/PolycodeToolLauncher.cpp b/IDE/Contents/Source/PolycodeToolLauncher.cpp
--- a/IDE/Contents/Source/PolycodeToolLauncher.cpp
+++ b/IDE/Contents/Source/PolycodeToolLauncher.cpp
@@ -26,21 +26,6 @@
 	#include "PolyCocoaCore.h"
 #endif
 
-GenericRunner::GenericRunner(String app, String file, String inFolder) : Threaded() {
-	this->app = app;
-	this->file = file;
-	this->inFolder = inFolder;
-}
-
-void GenericRunner::runThread() {
-#if defined(__APPLE__) && defined(__MACH__)
-	CocoaCore *cocoaCore = (CocoaCore*) CoreServices::getInstance()->getCore();
-	cocoaCore->openFileWithApplication(file, app);
-#else
-	String ret = CoreServices::getInstance()->getCore()->executeExternalCommand(app, file, inFolder);	
-#endif
-}
-
 PolycodeRunner::PolycodeRunner(String polyappPath) : Threaded() {
 	this->polyappPath = polyappPath;
 }
@@ -86,7 +71,7 @@
 #endif
 }
 
-void PolycodeToolLauncher::buildProject(PolycodeProject *project, String destinationPath, bool compileScripts) {
+void PolycodeToolLauncher::buildProject(PolycodeProject *project, String destinationPath) {
 
 	PolycodeConsole::print("Building project: "+project->getProjectName() + "\n");	
 
@@ -101,26 +86,25 @@
 #ifdef _WINDOWS
 	String targetFolder = projectBasePath;
 	String command = "\""+polycodeBasePath+"/Standalone/Bin/polybuild.exe\"";
-	String args =  "--config=\""+projectPath+"\" --out=\""+destinationPath+"\" --compileScripts=\""+((compileScripts)?"true":"false")+"\"";
+	String args =  "--config=\""+projectPath+"\" --out=\""+destinationPath+"\"";
 	String ret = CoreServices::getInstance()->getCore()->executeExternalCommand(command, args, targetFolder);
 #else
 	String command = polycodeBasePath+"/Standalone/Bin/polybuild";
 	String inFolder = projectBasePath; 
-	String args = "--config=\""+projectPath+"\" --out=\""+destinationPath+"\" --compileScripts=\""+((compileScripts)?"true":"false")+"\"";
+	String args = "--config="+projectPath+" --out="+destinationPath;
 	String ret = CoreServices::getInstance()->getCore()->executeExternalCommand(command, args, inFolder);
 //	PolycodeConsole::print(ret);
 #endif
 
 }
 
-void PolycodeToolLauncher::openExternalEditor(String app, String file, String inFolder) {
-	GenericRunner *runner = new GenericRunner(app, file, inFolder);
-	CoreServices::getInstance()->getCore()->createThread(runner);
-}
-
 void PolycodeToolLauncher::runPolyapp(String polyappPath) {
 
 	PolycodeConsole::clearBacktraces();
+
+
+//	PolycodeRunner *runner = new PolycodeRunner(polyappPath);
+//	CoreServices::getInstance()->getCore()->createThread(runner);
 							
 #if defined(__APPLE__) && defined(__MACH__)
 	CocoaCore *cocoaCore = (CocoaCore*) CoreServices::getInstance()->getCore();
@@ -128,6 +112,7 @@
 	String polycodeBasePath = CoreServices::getInstance()->getCore()->getDefaultWorkingDirectory();
 	String command = polycodeBasePath+"/Standalone/Player/PolycodePlayer.app"; 
 	
+//	cocoaCore->launchApplicationWithFile(command, polyappPath);
 	cocoaCore->openFileWithApplication(polyappPath, command);
 #else
 	PolycodeRunner *runner = new PolycodeRunner(polyappPath);
diff --git a/IDE/Contents/Source/SettingsWindow.cpp b/IDE/Contents/Source/SettingsWindow.cpp
deleted file mode 100644
--- a/IDE/Contents/Source/SettingsWindow.cpp
+++ /dev/null
@@ -1,159 +0,0 @@
-/*
- Copyright (C) 2013 by Isak Andersson
- 
- Permission is hereby granted, free of charge, to any person obtaining a copy
- of this software and associated documentation files (the "Software"), to deal
- in the Software without restriction, including without limitation the rights
- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
- copies of the Software, and to permit persons to whom the Software is
- furnished to do so, subject to the following conditions:
- 
- The above copyright notice and this permission notice shall be included in
- all copies or substantial portions of the Software.
- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
- THE SOFTWARE.
- */
-
-#include "SettingsWindow.h"
-#include "PolycodeFrame.h"
-#include "PolycodeTextEditor.h"
-
-extern PolycodeFrame *globalFrame;
-extern UIGlobalMenu *globalMenu;
-extern SyntaxHighlightTheme *globalSyntaxTheme;
-
-SettingsWindow::SettingsWindow() : UIWindow(L"Settings", SETTINGS_WINDOW_WIDTH, SETTINGS_WINDOW_HEIGHT) {
-
-	closeOnEscape = true;
-
-	ScreenLabel *label = new ScreenLabel("TEXT EDITING", 22, "section", Label::ANTIALIAS_FULL);
-	addChild(label);
-	label->color.a = 0.4;
-	label->setPosition(padding, 50);
-
-	useExternalTextEditorBox = new UICheckBox("Use external text editor", false);
-	addChild(useExternalTextEditorBox); 
-	useExternalTextEditorBox->setPosition(padding, 85);
-
-	#define BUTTON_WIDTH 80
-	#define BUTTON_PADDING 10
-	#define EDITOR_BROWSE_POS 110
-	#define TEXTBOX_HEIGHT 12
-
-	externalTextEditorCommand = new UITextInput(false, SETTINGS_WINDOW_WIDTH - (padding*2 + BUTTON_WIDTH + BUTTON_PADDING/2), TEXTBOX_HEIGHT);
-	addChild(externalTextEditorCommand);
-	externalTextEditorCommand->setPosition(padding, EDITOR_BROWSE_POS);
-	
-	
-	label = new ScreenLabel("Syntax highlighting theme", 12);
-	addChild(label);
-	label->color.a = 0.6;
-	label->setPosition(padding, EDITOR_BROWSE_POS + 35);
-	
-	syntaxThemeBox = new UIComboBox(globalMenu, 300);
-	addChild(syntaxThemeBox);
-	syntaxThemeBox->setPosition(padding, EDITOR_BROWSE_POS + 55);
-	syntaxThemeBox->addEventListener(this, UIEvent::CHANGE_EVENT);
-	
-	std::vector<OSFileEntry> themes = OSBasics::parseFolder(CoreServices::getInstance()->getCore()->getDefaultWorkingDirectory() + "/SyntaxThemes", false);
-	
-	for(int i=0; i < themes.size(); i++) {
-		if(themes[i].extension == "xml") {
-			syntaxThemeBox->addComboItem(themes[i].nameWithoutExtension);
-		}
-	}
-
-	browseButton = new UIButton("Browse...", BUTTON_WIDTH);
-	browseButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	addChild(browseButton);
-	browseButton->setPosition(SETTINGS_WINDOW_WIDTH - (2*padding + BUTTON_WIDTH/2), EDITOR_BROWSE_POS);
-	
-
-	cancelButton = new UIButton("Cancel", BUTTON_WIDTH);
-	cancelButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	addChild(cancelButton);
-	cancelButton->setPosition(SETTINGS_WINDOW_WIDTH - (2*padding + BUTTON_WIDTH*1.5 + BUTTON_PADDING), SETTINGS_WINDOW_HEIGHT - padding);
-
-	okButton = new UIButton("OK", BUTTON_WIDTH);
-	okButton->addEventListener(this, UIEvent::CLICK_EVENT);
-	addChild(okButton);
-	okButton->setPosition(SETTINGS_WINDOW_WIDTH - (2*padding + BUTTON_WIDTH/2), SETTINGS_WINDOW_HEIGHT - padding);
-}
-
-void SettingsWindow::handleEvent(Event *event) {
-	if(event->getEventType() == "UIEvent") {
-		if(event->getEventCode() == UIEvent::CHANGE_EVENT) {
-			if(event->getDispatcher() == syntaxThemeBox) {
-				if(syntaxThemeBox->getSelectedItem()->label != globalSyntaxTheme->name) {
-					globalSyntaxTheme->loadFromFile(syntaxThemeBox->getSelectedItem()->label);
-				}
-			}
-		} else if(event->getEventCode() == UIEvent::CLICK_EVENT) {
-			if(event->getDispatcher() == okButton) {
-				dispatchEvent(new UIEvent(), UIEvent::OK_EVENT);
-			}
-
-			if(event->getDispatcher() == cancelButton) {
-				dispatchEvent(new UIEvent(), UIEvent::CLOSE_EVENT);
-			}
-
-			if(event->getDispatcher() == browseButton) {
-#ifdef USE_POLYCODEUI_FILE_DIALOGS
-				std::vector<String> extensions;
-				extensions.push_back("");
-				globalFrame->showFileBrowser(CoreServices::getInstance()->getCore()->getUserHomeDirectory(), false, extensions, false);
-				globalFrame->fileDialog->addEventListener(this, UIEvent::OK_EVENT);
-#else
-				vector<CoreFileExtension> extensions;
-				CoreFileExtension ext;
-#ifdef _WINDOWS
-				ext.extension = "exe";
-#elif defined(__APPLE__) && defined(__MACH__)
-				ext.extension = "app";
-#else
-				ext.extension = "";
-#endif
-				ext.description = "executable";
-				extensions.push_back(ext);
-				std::vector<String> path = CoreServices::getInstance()->getCore()->openFilePicker(extensions, false);
-
-				if(path.size() == 0) {
-					return;
-				}
-
-				if(path[0] != "") {
-					externalTextEditorCommand->setText(path[0]);
-				}
-#endif	
-			}
-		}
-
-		if(event->getDispatcher() == globalFrame->fileDialog && event->getEventCode() == UIEvent::OK_EVENT) {
-			String path = globalFrame->fileDialog->getSelection();
-			if (path != "") {
-				externalTextEditorCommand->setText(path);
-			}
-		}
-	}
-
-	UIWindow::handleEvent(event); 
-} 
-
-void SettingsWindow::updateUI() {
-	Config *config = CoreServices::getInstance()->getConfig();
-	
-	useExternalTextEditorBox->setChecked(config->getStringValue("Polycode", "useExternalTextEditor") == "true");
-	externalTextEditorCommand->setText(config->getStringValue("Polycode", "externalTextEditorCommand"));
-	
-	for(int i=0; i < syntaxThemeBox->getNumItems(); i++) {
-		if(globalSyntaxTheme->name == syntaxThemeBox->getItemAtIndex(i)->label) {
-			syntaxThemeBox->setSelectedIndex(i);
-		} 
-	}
-	
-}
-	
-SettingsWindow::~SettingsWindow() {
-}
diff --git a/IDE/Contents/Source/TextureBrowser.cpp b/IDE/Contents/Source/TextureBrowser.cpp
--- a/IDE/Contents/Source/TextureBrowser.cpp
+++ b/IDE/Contents/Source/TextureBrowser.cpp
@@ -42,18 +42,14 @@
 	
 	if(extension == "png") {
 		imageShape->loadTexture(assetPath);
-	} else if(extension == "ogg" || extension == "wav") {
+	}
+	
+	if(extension == "ogg" || extension == "wav") {
 		imageShape->loadTexture("Images/sound_thumb.png");
-	} else if(extension == "entity2d") {
-		imageShape->loadTexture("Images/entity_thumb.png");
-	} else if(extension == "entity2d") {
-		imageShape->loadTexture("Images/entity_thumb.png");
-	} else if(extension == "sprite") {
-		imageShape->loadTexture("Images/sprite_thumb.png");		
-	} else if(extension == "ttf" || extension == "otf") {
+	}
+
+	if(extension == "ttf" || extension == "otf") {
 		imageShape->loadTexture("Images/font_icon.png");
-	} else if(extension == "vert" || extension == "frag") {
-		imageShape->loadTexture("Images/shader_thumb.png");
 	}
 
 	
@@ -168,6 +164,7 @@
 	
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	String fontName = conf->getStringValue("Polycode", "uiDefaultFontName");
+	int fontSize = conf->getNumericValue("Polycode", "uiDefaultFontSize");
 	
 	closeOnEscape = true;	
 	
@@ -245,10 +242,6 @@
 	return templatePath;
 }
 
-String AssetBrowser::getFullSelectedAssetPath() {
-	return assetList->selectedPath;
-}
-
 String AssetBrowser::getSelectedAssetPath() {
 	return assetList->selectedPath.replace(currentProject->getRootFolder()+"/", "");
 }
diff --git a/IDE/Contents/Source/ToolWindows.cpp b/IDE/Contents/Source/ToolWindows.cpp
--- a/IDE/Contents/Source/ToolWindows.cpp
+++ b/IDE/Contents/Source/ToolWindows.cpp
@@ -101,13 +101,9 @@
 
 void YesNoPopup::setCaption(String caption) {
 	captionLabel->setText(caption);
-	
-	Number windowSize = captionLabel->getWidth() + 50;
-	if(windowSize < 400)
-		windowSize = 400;
-	setWindowSize(windowSize, 80);
-	captionLabel->setPosition(padding + (windowSize - captionLabel->getWidth()) / 2.0, 35);
-	buttonAnchor->setPosition(padding + ((windowSize - 220) / 2.0), 0);
+	setWindowSize(captionLabel->getWidth() + 50, 80);
+	captionLabel->setPosition(padding + (captionLabel->getWidth() + 50 - captionLabel->getWidth()) / 2.0, 35);
+	buttonAnchor->setPosition(padding + ((captionLabel->getWidth() + 50 - 220) / 2.0), 0);
 }
 
 void YesNoPopup::handleEvent(Event *event) {
@@ -162,12 +158,9 @@
 
 void YesNoCancelPopup::setCaption(String caption) {
 	captionLabel->setText(caption);
-	Number windowSize = captionLabel->getWidth() + 50;
-	if(windowSize < 400)
-		windowSize = 400;	
-	setWindowSize(windowSize, 80);
-	captionLabel->setPosition(padding + (windowSize - captionLabel->getWidth()) / 2.0, 35);
-	buttonAnchor->setPosition(padding + ((windowSize - 360) / 2.0), 0);
+	setWindowSize(captionLabel->getWidth() + 50, 80);
+	captionLabel->setPosition(padding + (captionLabel->getWidth() + 50 - captionLabel->getWidth()) / 2.0, 35);
+	buttonAnchor->setPosition(padding + ((captionLabel->getWidth() + 50 - 360) / 2.0), 0);
 }
 
 void YesNoCancelPopup::handleEvent(Event *event) {
diff --git a/Modules/Contents/2DPhysics/Include/PolyPhysicsScreen.h b/Modules/Contents/2DPhysics/Include/PolyPhysicsScreen.h
--- a/Modules/Contents/2DPhysics/Include/PolyPhysicsScreen.h
+++ b/Modules/Contents/2DPhysics/Include/PolyPhysicsScreen.h
@@ -89,7 +89,7 @@
          * Raw Box2d Contact
          */
     
-        b2Contact POLYIGNORE *contact;
+        b2Contact *contact;
 	
         /**
 		* Strength of the collision impact.
@@ -200,13 +200,6 @@
 	*/
 	PhysicsScreenEntity *trackPhysicsChild(ScreenEntity *newEntity, int entType, bool isStatic, Number friction=0.1, Number density=1, Number restitution = 0, bool isSensor = false, bool fixedRotation = false, int groupIndex = 0);
     
-	
-	/**
-	* Stops physics tracking for this entity but does not remove from screen.
-	* @param entity Entity to stop tracking for.
-	*/
-	void stopTrackingChild(ScreenEntity *entity);
-		
 	/**
 	* Removes a physics child from the screen.
 	* @param entityToRemove Entity to remove from the screen.
@@ -388,8 +381,6 @@
 	*/
 	bool testEntityCollision(ScreenEntity *ent1, ScreenEntity *ent2);
 	
-	bool isEntityColliding(ScreenEntity *ent1);
-	
 	void Shutdown();
 	
 	/**
@@ -403,14 +394,11 @@
 
     
 protected:
-
-	Number cyclesLeftOver;
 	
     Number worldScale;
     
-    std::vector <PhysicsScreenEntity*> physicsChildren;
-	std::vector<PhysicsScreenEvent*> eventsToDispatch;
-			
+    std::vector <PhysicsScreenEntity*> physicsChildren;		
+	
 	void init(Number worldScale, Number physicsTimeStep, int velIterations, int posIterations, Vector2 physicsGravity);
 
 	std::vector<b2Contact*> contacts;
diff --git a/Modules/Contents/2DPhysics/Include/PolyPhysicsScreenEntity.h b/Modules/Contents/2DPhysics/Include/PolyPhysicsScreenEntity.h
--- a/Modules/Contents/2DPhysics/Include/PolyPhysicsScreenEntity.h
+++ b/Modules/Contents/2DPhysics/Include/PolyPhysicsScreenEntity.h
@@ -129,15 +129,6 @@
 			* Edge phyiscs Entity
 			*/ 
             static const int ENTITY_EDGE = 4;
-			/**
-			* Capsule entity. 
-			*/ 
-            static const int ENTITY_CAPSULE = 5;
-
-			/**
-			* Three vertical circles.
-			*/ 
-            static const int ENTITY_TRIPLE_CIRCLE = 6;
 
 
 			b2Body *body;			
diff --git a/Modules/Contents/2DPhysics/Source/PolyPhysicsScreen.cpp b/Modules/Contents/2DPhysics/Source/PolyPhysicsScreen.cpp
--- a/Modules/Contents/2DPhysics/Source/PolyPhysicsScreen.cpp
+++ b/Modules/Contents/2DPhysics/Source/PolyPhysicsScreen.cpp
@@ -24,8 +24,6 @@
 #include "PolyPhysicsScreen.h"
 #include "PolyScreenEntity.h"
 #include "PolyPhysicsScreenEntity.h"
-#include "PolyCoreServices.h"
-#include "PolyCore.h"
 
 using namespace Polycode;
 
@@ -92,8 +90,7 @@
 
     newEvent->contact = contact;
     
-	newEvent->setEventCode(PhysicsScreenEvent::EVENT_NEW_SHAPE_COLLISION);
-	eventsToDispatch.push_back(newEvent);
+	dispatchEvent(newEvent, PhysicsScreenEvent::EVENT_NEW_SHAPE_COLLISION);
 	
 	contacts.push_back(contact);
 }
@@ -141,9 +138,7 @@
 			newEvent->frictionStrength = impulse->tangentImpulses[i];		
 	}
 
-	newEvent->setEventCode(PhysicsScreenEvent::EVENT_SOLVE_SHAPE_COLLISION);
-	eventsToDispatch.push_back(newEvent);
-
+	dispatchEvent(newEvent, PhysicsScreenEvent::EVENT_SOLVE_SHAPE_COLLISION);
 }
 
 void PhysicsScreen::EndContact (b2Contact *contact) {
@@ -158,24 +153,8 @@
 			break;
 		}
 	}
-	newEvent->setEventCode(PhysicsScreenEvent::EVENT_END_SHAPE_COLLISION);
-	eventsToDispatch.push_back(newEvent);
-
-}
-
-bool PhysicsScreen::isEntityColliding(ScreenEntity *ent1) {
-	PhysicsScreenEntity *pEnt1 = getPhysicsByScreenEntity(ent1);
-	if(pEnt1 == NULL)
-		return false;
-
-	for(int i=0; i < contacts.size(); i++) {
-		ScreenEntity *cEnt1 = ((PhysicsScreenEntity*)contacts[i]->GetFixtureA()->GetBody()->GetUserData())->getScreenEntity();
-		ScreenEntity *cEnt2 = ((PhysicsScreenEntity*)contacts[i]->GetFixtureB()->GetBody()->GetUserData())->getScreenEntity();
-		if(cEnt1 == ent1 || cEnt2 == ent1) {
-			return true;
-		}
-	}
-	return false;
+	
+	dispatchEvent(newEvent, PhysicsScreenEvent::EVENT_END_SHAPE_COLLISION);
 }
 
 bool PhysicsScreen::testEntityCollision(ScreenEntity *ent1, ScreenEntity *ent2) {
@@ -185,8 +164,8 @@
 		return false;
 	
 	for(int i=0; i < contacts.size(); i++) {
-		ScreenEntity *cEnt1 = ((PhysicsScreenEntity*)contacts[i]->GetFixtureA()->GetBody()->GetUserData())->getScreenEntity();
-		ScreenEntity *cEnt2 = ((PhysicsScreenEntity*)contacts[i]->GetFixtureB()->GetBody()->GetUserData())->getScreenEntity();
+		ScreenEntity *cEnt1 = (ScreenEntity*)contacts[i]->GetFixtureA()->GetUserData();
+		ScreenEntity *cEnt2 = (ScreenEntity*)contacts[i]->GetFixtureB()->GetUserData();
 		
 	        
 		if((cEnt1 == ent1 && cEnt2 == ent2) || (cEnt1 == ent2 && cEnt2 == ent1)) {
@@ -206,7 +185,6 @@
 
 void PhysicsScreen::init(Number worldScale, Number physicsTimeStep, int velIterations, int posIterations, Vector2 physicsGravity) {
 	
-	cyclesLeftOver = 0.0;
 	this->worldScale = worldScale;
 	
 	timeStep = physicsTimeStep;
@@ -341,7 +319,7 @@
 PhysicsScreenEntity *PhysicsScreen::addCollisionChild(ScreenEntity *newEntity, int entType, int groupIndex, bool sensorOnly) {
 	PhysicsScreenEntity *ret;
 	ret = addPhysicsChild(newEntity, entType, false, 0,0,0, sensorOnly, false, groupIndex);
-	newEntity->ignoreParentMatrix = false;    
+    
 	ret->collisionOnly = true; 
 	return ret;
 }
@@ -349,8 +327,7 @@
 PhysicsScreenEntity *PhysicsScreen::trackCollisionChild(ScreenEntity *newEntity, int entType, int groupIndex) {
 	PhysicsScreenEntity *ret;
 	ret = trackPhysicsChild(newEntity, entType, false, 0,0.0,0, true, false, groupIndex);
-	ret->collisionOnly = true;
-	newEntity->ignoreParentMatrix = false;
+	ret->collisionOnly = true; 
 	return ret;
 }
 
@@ -482,26 +459,18 @@
 	return newPhysicsEntity;
 }
 
-void PhysicsScreen::stopTrackingChild(ScreenEntity *entity) {
-	PhysicsScreenEntity *physicsEntityToRemove = getPhysicsByScreenEntity(entity);
+void PhysicsScreen::removePhysicsChild(ScreenEntity *entityToRemove) {
+	PhysicsScreenEntity *physicsEntityToRemove = getPhysicsByScreenEntity(entityToRemove);
 	if(!physicsEntityToRemove) {
 		return;
 	}
-	
 	world->DestroyBody(physicsEntityToRemove->body);
-	physicsEntityToRemove->body = NULL;	
-				
+    physicsEntityToRemove->body = NULL;
 	for(int i=0;i<physicsChildren.size();i++) {
 		if(physicsChildren[i] == physicsEntityToRemove) {
 			physicsChildren.erase(physicsChildren.begin()+i);
 		}
 	}
-	
-	delete physicsEntityToRemove;
-}
-
-void PhysicsScreen::removePhysicsChild(ScreenEntity *entityToRemove) {
-	stopTrackingChild(entityToRemove);
 	Screen::removeChild(entityToRemove);	
 }
 
@@ -550,20 +519,9 @@
 
 void PhysicsScreen::Update() {
     
-	Number elapsed = CoreServices::getInstance()->getCore()->getElapsed() + cyclesLeftOver;
-	
-	while(elapsed > timeStep) {
-		elapsed -= timeStep;
-		for(int i=0; i<physicsChildren.size();i++) {
-			physicsChildren[i]->Update();
-		}
-		world->Step(timeStep, velocityIterations,positionIterations);
-		
-		for(int i=0; i < eventsToDispatch.size(); i++) {
-			dispatchEvent(eventsToDispatch[i], eventsToDispatch[i]->getEventCode());
-		}
-		eventsToDispatch.clear();
+	for(int i=0; i<physicsChildren.size();i++) {
+		physicsChildren[i]->Update();
 	}
-	cyclesLeftOver = elapsed;
-	Screen::Update();
+    
+	world->Step(timeStep, velocityIterations,positionIterations);	
 }
diff --git a/Modules/Contents/2DPhysics/Source/PolyPhysicsScreenEntity.cpp b/Modules/Contents/2DPhysics/Source/PolyPhysicsScreenEntity.cpp
--- a/Modules/Contents/2DPhysics/Source/PolyPhysicsScreenEntity.cpp
+++ b/Modules/Contents/2DPhysics/Source/PolyPhysicsScreenEntity.cpp
@@ -39,8 +39,6 @@
 	Matrix4 compoundMatrix = screenEntity->getConcatenatedMatrix();
 	entity->ignoreParentMatrix = true;
 	entity->scale = entityScale;
-	entityScale.x = fabs(entityScale.x);
-	entityScale.y = fabs(entityScale.y);
 	this->worldScale = worldScale;
 	collisionOnly = false;
 
@@ -96,41 +94,7 @@
 			fixture = body->CreateFixture(&fDef);
 			break;
         }
-		case ENTITY_CAPSULE: {
-		
-			Number rectSize = (screenEntity->getHeight()/(worldScale*2.0f) * entityScale.y) - (screenEntity->getWidth()/(worldScale*2.0f * entityScale.y));
-					
-			b2CircleShape Shape;
-			fDef.shape = &Shape;
-			Shape.m_radius = screenEntity->getWidth()/(worldScale*2.0f);			
-			Shape.m_p.y = rectSize;
-			fixture = body->CreateFixture(&fDef);
-			Shape.m_p.y = -rectSize;
-			fixture = body->CreateFixture(&fDef);
-			
-			b2PolygonShape Shape2;
-			fDef.shape = &Shape2;
-			Shape2.SetAsBox(screenEntity->getWidth()/(worldScale*2.0f) * entityScale.x, rectSize);
-			fixture = body->CreateFixture(&fDef);
-			break;						
-		}
-		break;
-		case ENTITY_TRIPLE_CIRCLE: {
-		
-			Number rectSize = (screenEntity->getHeight()/(worldScale*2.0f) * entityScale.y) - (screenEntity->getWidth()/(worldScale*2.0f * entityScale.y));
-					
-			b2CircleShape Shape;
-			fDef.shape = &Shape;
-			Shape.m_radius = screenEntity->getWidth()/(worldScale*2.0f);			
-			Shape.m_p.y = rectSize;
-			fixture = body->CreateFixture(&fDef);
-			Shape.m_p.y = -rectSize;
-			fixture = body->CreateFixture(&fDef);
-			Shape.m_p.y = 0;
-			fixture = body->CreateFixture(&fDef);
-			break;						
-		}
-		break;	
+        break;
 		case ENTITY_MESH: {
 			b2PolygonShape Shape;
 			fDef.shape = &Shape;
@@ -260,30 +224,17 @@
 }
 			
 void PhysicsScreenEntity::setTransform(Vector2 pos, Number angle) {
-	if(screenEntity->getParentEntity()) {
-		Matrix4 matrix = screenEntity->getParentEntity()->getConcatenatedMatrix();
-		Vector3 parentPos = matrix.getPosition();		
-		pos.x = parentPos.x + pos.x;
-		pos.y = parentPos.y + pos.y;		
-	}
-
 	body->SetTransform(b2Vec2(pos.x/worldScale, pos.y/worldScale), angle*(PI/180.0f));
-	Update();
+    screenEntity->setPosition(pos);
 }
 
 void PhysicsScreenEntity::Update() {
 	if(collisionOnly) {
-		Matrix4 matrix = screenEntity->getConcatenatedMatrix();
-		Vector3 pos = matrix.getPosition();		
 		b2Vec2 newPos;
-		newPos.x = pos.x/worldScale;
-		newPos.y = pos.y/worldScale;   
-		
-		Number rx,ry,rz;
-		matrix.getEulerAngles(&rx, &ry, &rz);
-		
+		newPos.x = screenEntity->position.x/worldScale;;
+		newPos.y = screenEntity->position.y/worldScale;;
 		body->SetAwake(true);
-		body->SetTransform(newPos, rz * TORADIANS);
+		body->SetTransform(newPos, screenEntity->rotation.roll * TORADIANS);
 	} else {
 		b2Vec2 position = body->GetPosition();
 		Number angle = body->GetAngle();	
@@ -297,7 +248,7 @@
 	if(fixture)	{
 		short i = 0;
 		for (b2Fixture* f = body->GetFixtureList(); f; f = f->GetNext()) {
-			if (i == index) {
+			if (i = index) {
 				fixture = f;
 				return fixture;
 			}
diff --git a/Modules/Contents/3DPhysics/Include/PolyCollisionScene.h b/Modules/Contents/3DPhysics/Include/PolyCollisionScene.h
--- a/Modules/Contents/3DPhysics/Include/PolyCollisionScene.h
+++ b/Modules/Contents/3DPhysics/Include/PolyCollisionScene.h
@@ -119,7 +119,7 @@
 			//@}
 			// ----------------------------------------------------------------------------------------------------------------
 			
-//		protected:
+		protected:
 		
 			std::vector<CollisionSceneEntity*> collisionChildren;
 			btCollisionWorld *world;
diff --git a/Modules/Contents/3DPhysics/Source/PolyCollisionScene.cpp b/Modules/Contents/3DPhysics/Source/PolyCollisionScene.cpp
--- a/Modules/Contents/3DPhysics/Source/PolyCollisionScene.cpp
+++ b/Modules/Contents/3DPhysics/Source/PolyCollisionScene.cpp
@@ -26,7 +26,7 @@
 
 using namespace Polycode;
 
-CollisionScene::CollisionScene(Vector3 size, bool virtualScene, bool deferInitCollision) : Scene(virtualScene), world(NULL), collisionConfiguration(NULL), dispatcher(NULL), axisSweep(NULL) {
+CollisionScene::CollisionScene(Vector3 size, bool virtualScene, bool deferInitCollision) : Scene(virtualScene), world(NULL), axisSweep(NULL), dispatcher(NULL), collisionConfiguration(NULL){ 
 	if(!deferInitCollision) {
 		initCollisionScene(size);
 	}
@@ -56,8 +56,7 @@
 	for(int i=0; i < collisionChildren.size(); i++) {
 		if(collisionChildren[i]->enabled)		
 			collisionChildren[i]->lastPosition = collisionChildren[i]->getSceneEntity()->getPosition();
-	}
-	Scene::Update();	
+	}	
 }
 
 void CollisionScene::enableCollision(SceneEntity *entity, bool val) {
diff --git a/Modules/Contents/CgShading/Source/PolyCGShaderModule.cpp b/Modules/Contents/CgShading/Source/PolyCGShaderModule.cpp
--- a/Modules/Contents/CgShading/Source/PolyCGShaderModule.cpp
+++ b/Modules/Contents/CgShading/Source/PolyCGShaderModule.cpp
@@ -124,7 +124,7 @@
 	if(renderer->getNumAreaLights() > lightIndex) {
 		vector<LightInfo> areaLights = renderer->getAreaLights();			
 		Vector3 lPos(areaLights[lightIndex].position.x,areaLights[lightIndex].position.y,areaLights[lightIndex].position.z);
-		lPos = renderer->getCameraMatrix().Inverse() * lPos;
+		lPos = renderer->getCameraMatrix().inverse() * lPos;
 		cgGLSetParameter4f(param.cgParam, lPos.x,lPos.y,lPos.z, areaLights[lightIndex].distance);
 	} else {
 		cgGLSetParameter4f(param.cgParam, 0,0,0,0);
@@ -135,7 +135,7 @@
 	if(renderer->getNumSpotLights() > lightIndex) {
 		vector<LightInfo> spotLights = renderer->getSpotLights();		
 		Vector3 lPos(spotLights[lightIndex].position.x,spotLights[lightIndex].position.y,spotLights[lightIndex].position.z);
-		lPos = renderer->getCameraMatrix().Inverse() * lPos;
+		lPos = renderer->getCameraMatrix().inverse() * lPos;
 		cgGLSetParameter4f(param.cgParam, lPos.x,lPos.y,lPos.z, spotLights[lightIndex].distance);
 	} else {
 		cgGLSetParameter4f(param.cgParam, 0,0,0,0);
@@ -146,7 +146,7 @@
 	if(renderer->getNumSpotLights() > lightIndex) {
 		vector<LightInfo> spotLights = renderer->getSpotLights();		
 		Vector3 lPos(spotLights[lightIndex].dir.x,spotLights[lightIndex].dir.y,spotLights[lightIndex].dir.z);
-		lPos = renderer->getCameraMatrix().Inverse().rotateVector(lPos);
+		lPos = renderer->getCameraMatrix().inverse().rotateVector(lPos);
 		cgGLSetParameter3f(param.cgParam, lPos.x,lPos.y,lPos.z);
 	} else {
 		cgGLSetParameter3f(param.cgParam, 0.0f,0.0f,0.0f);
diff --git a/Modules/Contents/GLSL/Source/PolyGLSLShaderModule.cpp b/Modules/Contents/GLSL/Source/PolyGLSLShaderModule.cpp
--- a/Modules/Contents/GLSL/Source/PolyGLSLShaderModule.cpp
+++ b/Modules/Contents/GLSL/Source/PolyGLSLShaderModule.cpp
@@ -145,7 +145,7 @@
 	if(renderer->getNumSpotLights() > lightIndex) {
 		vector<LightInfo> spotLights = renderer->getSpotLights();		
 		Vector3 lPos(spotLights[lightIndex].position.x,spotLights[lightIndex].position.y,spotLights[lightIndex].position.z);
-		lPos = renderer->getCameraMatrix().Inverse() * lPos;
+		lPos = renderer->getCameraMatrix().inverse() * lPos;
 //		cgGLSetParameter4f(param.cgParam, lPos.x,lPos.y,lPos.z, spotLights[lightIndex].distance);
 	} else {
 //		cgGLSetParameter4f(param.cgParam, 0,0,0,0);
@@ -156,7 +156,7 @@
 	if(renderer->getNumSpotLights() > lightIndex) {
 		vector<LightInfo> spotLights = renderer->getSpotLights();		
 		Vector3 lPos(spotLights[lightIndex].dir.x,spotLights[lightIndex].dir.y,spotLights[lightIndex].dir.z);
-		lPos = renderer->getCameraMatrix().Inverse().rotateVector(lPos);
+		lPos = renderer->getCameraMatrix().inverse().rotateVector(lPos);
 //		cgGLSetParameter3f(param.cgParam, lPos.x,lPos.y,lPos.z);
 	} else {
 //		cgGLSetParameter3f(param.cgParam, 0.0f,0.0f,0.0f);
diff --git a/Modules/Contents/TUIO/Include/TuioObject.h b/Modules/Contents/TUIO/Include/TuioObject.h
--- a/Modules/Contents/TUIO/Include/TuioObject.h
+++ b/Modules/Contents/TUIO/Include/TuioObject.h
@@ -109,8 +109,6 @@
 		 */
 		~TuioObject() {};
 		
-		using TuioContainer::update;
-
 		/**
 		 * Takes a TuioTime argument and assigns it along with the provided 
 		 * X and Y coordinate, angle, X and Y velocity, motion acceleration,
diff --git a/Modules/Contents/TUIO/Source/TuioClient.cpp b/Modules/Contents/TUIO/Source/TuioClient.cpp
--- a/Modules/Contents/TUIO/Source/TuioClient.cpp
+++ b/Modules/Contents/TUIO/Source/TuioClient.cpp
@@ -115,6 +115,7 @@
 void TuioClient::ProcessMessage( const ReceivedMessage& msg, const IpEndpointName& remoteEndpoint) {
 	try {
 		ReceivedMessageArgumentStream args = msg.ArgumentStream();
+		ReceivedMessage::const_iterator arg = msg.ArgumentsBegin();
 		
 		if( strcmp( msg.AddressPattern(), "/tuio/2Dobj" ) == 0 ){
 			
diff --git a/Modules/Contents/UI/Include/PolyUIBox.h b/Modules/Contents/UI/Include/PolyUIBox.h
--- a/Modules/Contents/UI/Include/PolyUIBox.h
+++ b/Modules/Contents/UI/Include/PolyUIBox.h
@@ -23,11 +23,11 @@
 #pragma once
 #include "PolyGlobals.h"
 #include "PolyScreenImage.h"
-#include "PolyUIElement.h"
+#include "PolyScreenEntity.h"
 
 namespace Polycode {
 	
-	class _PolyExport UIBox : public UIElement {
+	class _PolyExport UIBox : public ScreenEntity {
 	public:
 		UIBox(String imageFile, Number t, Number r, Number b, Number l, Number boxWidth, Number boxHeight);
 		virtual ~UIBox();
diff --git a/Modules/Contents/UI/Include/PolyUIButton.h b/Modules/Contents/UI/Include/PolyUIButton.h
--- a/Modules/Contents/UI/Include/PolyUIButton.h
+++ b/Modules/Contents/UI/Include/PolyUIButton.h
@@ -35,8 +35,7 @@
 	class _PolyExport UIButton : public UIElement {
 		public:
 			UIButton(String text, Number width, Number height = 23);
-			~UIButton();
-			void Resize(Number width, Number height);		
+			~UIButton();		
 			void handleEvent(Event *event);
 			
 			void Update();
@@ -45,8 +44,6 @@
 		
 			CoreInput *coreInput;
 			
-			Number labelOffsetX;
-			Number labelOffsetY;
 			Number labelXPos;
 			Number labelYPos;
 			UIBox *buttonRect;
diff --git a/Modules/Contents/UI/Include/PolyUICheckBox.h b/Modules/Contents/UI/Include/PolyUICheckBox.h
--- a/Modules/Contents/UI/Include/PolyUICheckBox.h
+++ b/Modules/Contents/UI/Include/PolyUICheckBox.h
@@ -46,7 +46,9 @@
 		private:
 			bool checked;
 			ScreenLabel *captionLabel;
+			ScreenShape *shadowRect;
 			ScreenImage *buttonImageChecked;
 			ScreenImage *buttonImageUnchecked;			
+			bool pressedDown;
 	};
 }
\ No newline at end of file
diff --git a/Modules/Contents/UI/Include/PolyUIColorBox.h b/Modules/Contents/UI/Include/PolyUIColorBox.h
--- a/Modules/Contents/UI/Include/PolyUIColorBox.h
+++ b/Modules/Contents/UI/Include/PolyUIColorBox.h
@@ -47,8 +47,6 @@
 			void handleEvent(Event *event);
 			void setSaturationAndValue(Number S, Number V);
 			
-			void updateColorFromMainSelector();
-			void updateColorFromHueSelector();
 			void rebuildFromTextInputs();
 			
 			void cancelColorListeners();
@@ -56,10 +54,8 @@
 			void Update();			
 			void onClose();
 			
-			bool isContinuous();
-			void setContinuous(bool _continuous);
+			void setPickerColor(Color newColor);
 			
-			void setPickerColor(Color newColor);
 			Color getSelectedColor();
 			
 		protected:
@@ -68,7 +64,6 @@
 			Number lastHueSelectorPosition;
 			
 			bool suppressTextChangeEvent;
-			bool continuous;
 		
 			Color selectedColor;
 		
diff --git a/Modules/Contents/UI/Include/PolyUIComboBox.h b/Modules/Contents/UI/Include/PolyUIComboBox.h
--- a/Modules/Contents/UI/Include/PolyUIComboBox.h
+++ b/Modules/Contents/UI/Include/PolyUIComboBox.h
@@ -60,8 +60,6 @@
 			void setSelectedIndex(unsigned int newIndex);
 			void handleEvent(Event *event);
 			
-			void Resize(Number width, Number height);
-			
 			unsigned int getNumItems();
 			UIComboBoxItem *getItemAtIndex(unsigned int index);
 							
@@ -77,9 +75,7 @@
 			ScreenLabel *selectedLabel;
 			Number comboHeight;
 			Number comboWidth;
-			Number dropDownX;
-			Number dropDownY;
-						
+			
 			int selectedOffset;
 						
 			Number nextItemHeight;
diff --git a/Modules/Contents/UI/Include/PolyUIElement.h b/Modules/Contents/UI/Include/PolyUIElement.h
--- a/Modules/Contents/UI/Include/PolyUIElement.h
+++ b/Modules/Contents/UI/Include/PolyUIElement.h
@@ -25,15 +25,10 @@
 #include "PolyScreenEntity.h"
 
 namespace Polycode {
-	/*
-	 * Base class for all UI widgets.
-	 *
-	 * processInputEvent is set to true by default.
-	 */
+	
 	class _PolyExport UIElement : public ScreenEntity {
 		public:
 			UIElement();
-			UIElement(Number width, Number height);
 			~UIElement();
 			
 			virtual void Resize(Number width, Number height);
@@ -42,4 +37,4 @@
 			
 	};
 	
-}
+}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Include/PolyUIHScrollBar.h b/Modules/Contents/UI/Include/PolyUIHScrollBar.h
--- a/Modules/Contents/UI/Include/PolyUIHScrollBar.h
+++ b/Modules/Contents/UI/Include/PolyUIHScrollBar.h
@@ -23,11 +23,10 @@
 #pragma once
 #include "PolyGlobals.h"
 #include "PolyUIBox.h"
-#include "PolyUIElement.h"
 
 namespace Polycode {
 	
-	class _PolyExport UIHScrollBar : public UIElement {
+	class _PolyExport UIHScrollBar : public ScreenEntity {
 	public:
 		UIHScrollBar(Number width, Number height, Number initialRatio);
 		virtual ~UIHScrollBar();
diff --git a/Modules/Contents/UI/Include/PolyUIHSizer.h b/Modules/Contents/UI/Include/PolyUIHSizer.h
--- a/Modules/Contents/UI/Include/PolyUIHSizer.h
+++ b/Modules/Contents/UI/Include/PolyUIHSizer.h
@@ -37,7 +37,6 @@
 			void handleEvent(Event *event);
 			
 			void setMainWidth(Number width);
-			Number getMainWidth();
 			
 			void addLeftChild(UIElement *element);
 			void addRightChild(UIElement *element);			
diff --git a/Modules/Contents/UI/Include/PolyUIHSlider.h b/Modules/Contents/UI/Include/PolyUIHSlider.h
--- a/Modules/Contents/UI/Include/PolyUIHSlider.h
+++ b/Modules/Contents/UI/Include/PolyUIHSlider.h
@@ -40,11 +40,6 @@
 			void handleEvent(Event *event);
 			void Update();
 			
-			void Resize(Number width, Number height);
-			
-			bool isContinuous();
-			void setContinuous(bool _continuous);
-			
 			void setSliderValue(Number val);
 			Number getSliderValue();			
 			
@@ -52,11 +47,8 @@
 		
 			Number gripPos;
 			
-			bool dragging;
-			bool continuous;
-			
-			Number bgHeight;
-			
+			Number labelXPos;
+			Number labelYPos;
 			UIBox *bgRect;
 			ScreenImage *gripRect;
 			
@@ -66,5 +58,7 @@
 			Number sliderWidth;
 			
 			ScreenShape *bgHitBox;
+			ScreenLabel *buttonLabel;
+			bool pressedDown;
 	};
-}
+}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Include/PolyUIMenu.h b/Modules/Contents/UI/Include/PolyUIMenu.h
--- a/Modules/Contents/UI/Include/PolyUIMenu.h
+++ b/Modules/Contents/UI/Include/PolyUIMenu.h
@@ -26,104 +26,32 @@
 #include "PolyUIBox.h"
 
 namespace Polycode {
-	class ScreenLine;
 
-	/**
-	 * An single selectable entry in an UIMenu
-	 */
+
 	class _PolyExport UIMenuItem : public UIElement {
 		public:
 			UIMenuItem(String label, String _id, void *data, Number comboWidth, Number comboHeight);
 			~UIMenuItem();
-
-			virtual bool isSelectable();
 			
-			/**
-			 * The user-data associated with this entry, as set in UIMenu::addOption()
-			 */
 			void *data;
-
-			/**
-			 * The display text of this entry, as set in UIMenu::addOption()
-			 */
 			String label;
-
-			/**
-			 * The internal ID of this entry, as set in UIMenu::addOption()
-			 *
-			 * Use this instead of label to identify an option, as the label
-			 * may be changed by e.g. translations.
-			 */
 			String _id;
-
-		protected:
-			UIMenuItem();
-
 			ScreenLabel *itemLabel;
-			friend class UIMenu;
 	};
 
-	class _PolyExport UIMenuDivider : public UIMenuItem {
-	public:
-		UIMenuDivider(Number comboWidth, Number comboHeight);
-		~UIMenuDivider();
-		bool isSelectable();
-
-	protected:
-		ScreenLine* line;
-	};
-
-	/** 
-	 * A dropdown menu.
-	 *
-	 * Displays a vertical list of text entries that can be clicked.
-	 * When clicked, an UIEvent::OK_EVENT event will be dispatched. 
-	 * You can then retrieve the selected entry with getSelectedItem()
-	 */
 	class _PolyExport UIMenu : public UIElement {
 		public:
-			/**
-			 * Create an empty dropdown menu with the given width.
-			 * 
-			 * Use addOption() to populate the menu.
-			 */
 			UIMenu(Number menuWidth);
 			~UIMenu();
 			
-			/**
-			 * Add a selectable entry to the dropdown.
-			 *
-			 * @param label The text string that will be displayed to the user for this entry.
-			 * @param _id The internal ID of this entry.
-			 * @param data A pointer to arbitrary user-data associated with this menu entry.
-			 *
-			 * @see UIMenuItem
-			 */
 			UIMenuItem *addOption(String label, String _id, void *data = NULL);
-
-			/**
-			 * Add a non-selectable entry to the dropdown
-			 * used to separate sections of the menu
-			 *
-			 */
-			UIMenuItem *addDivider();
-
-			/**
-			 * Returns the currently selected item.
-			 *
-			 * This can be used both for retrieving the currently selected item while the menu
-			 * is open, as well as retrieving the last selected item after an UIEvent::OK_EVENT
-			 * was dispatched.
-			 */
-			UIMenuItem *getSelectedItem();
-
 			void Resize(Number width, Number height);
 
 			void Update();
 			
-			void handleEvent(Event *event);
+			UIMenuItem *getSelectedItem();
 
-			void fitToScreenVertical();
+			void handleEvent(Event *event);
 			
 		protected:
 		
diff --git a/Modules/Contents/UI/Include/PolyUIScrollContainer.h b/Modules/Contents/UI/Include/PolyUIScrollContainer.h
--- a/Modules/Contents/UI/Include/PolyUIScrollContainer.h
+++ b/Modules/Contents/UI/Include/PolyUIScrollContainer.h
@@ -1,16 +1,16 @@
 /*
  Copyright (C) 2012 by Ivan Safrin
-
+ 
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
-
+ 
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
-
+ 
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
@@ -27,100 +27,45 @@
 #include "PolyUIElement.h"
 
 namespace Polycode {
-
-	/**
-	 * A container for UI elements that adds scroll bars if necessary.
-	 *
-	 * Internally, this class simply moves the scrolled child, and uses scissorBox
-	 * to cut off the parts going over the edges.
-	 */
+	
 	class _PolyExport UIScrollContainer : public UIElement {
 	public:
-        /**
-        * Create a scroll container.
-        * @param scrolledEntity The ScreenEntity that should be scrolled using this element.
-        * @param hScroll Whether the child should be scrolled horizontally.
-        * @param vScroll Whether the child should be scrolled vertically.
-        * @param width The width of the scroll container.
-        * @param height The height of the scroll container.
-        */
 		UIScrollContainer(ScreenEntity *scrolledEntity, bool hScroll, bool vScroll, Number width, Number height);
 		virtual ~UIScrollContainer();
-
-        /**
-        * Update what size the content child is expected to have.
-        *
-        * This doesn't do anything to the child, it just updates scroll bar
-        * positions etc.
-        *
-        * @param newContentWidth Width of the content.
-        * @param newContentHeight Height of the content.
-        */
+		
 		void setContentSize(Number newContentWidth, Number newContentHeight);
-
-		void Resize(Number width, Number height);
-
-        /**
-        * Set how far the content child should be scrolled.
-        *
-        * @param xScroll New horizontal scroll position.
-        * @param yScroll New vertical scroll position.
-        */
+		
+		void Resize(Number width, Number height);		
+		
 		void setScrollValue(Number xScroll, Number yScroll);
-
-        /**
-        * Set how far the content child should be scrolled.
-        *
-        * @param amount New vertical scroll position.
-        */
 		void scrollVertical(Number amount);
-
-        /**
-        * Set how far the content child should be scrolled.
-        *
-        * @param amount New horizontal scroll position.
-        */
 		void scrollHorizontal(Number amount);
-
+				
 		void Update();
-
-        /** Get the assumed size of the content.
-        *
-        * Note that this doesn't actually look at the contained
-        * element, but rather just returns what was earlier set
-        * by setContentSize()
-        *
-        * @return The currently assumed size of the content.
-        */
+		
 		Vector2 getContentSize();
-
+		
 		void onMouseWheelDown(Number x, Number y);
-		void onMouseWheelUp(Number x, Number y);
-
+		void onMouseWheelUp(Number x, Number y);	
+				
 		void handleEvent(Event *event);
-
-        /**
-        * Get the width of the vertical scroll bar.
-        */
+		
 		Number getVScrollWidth();
-
-		UIVScrollBar *getVScrollBar() { return vScrollBar; }
-		UIHScrollBar *getHScrollBar() { return hScrollBar; }
 		
 	private:		
 		
 		Number defaultScrollSize;
-
+		
 		Number contentWidth;
 		Number contentHeight;
-
-		ScreenEntity *scrollChild;
-
+		
+		ScreenEntity *scrollChild;		
+		
 		bool hasHScroll;
 		bool hasVScroll;
-
+		
 		UIVScrollBar *vScrollBar;
 		UIHScrollBar *hScrollBar;
 	};
-
-}
+	
+}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Include/PolyUITextInput.h b/Modules/Contents/UI/Include/PolyUITextInput.h
--- a/Modules/Contents/UI/Include/PolyUITextInput.h
+++ b/Modules/Contents/UI/Include/PolyUITextInput.h
@@ -1,4 +1,4 @@
- /*
+/*
  Copyright (C) 2012 by Ivan Safrin
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
@@ -89,235 +89,71 @@
 			unsigned int caretEnd;							
 	};
 
-	/**
-	 * A text input element. Can be single- or multiline.
-	 */
 	class _PolyExport UITextInput : public UIElement {
 		public:
-			/**
-			 * Create a new text input element.
-			 * @param multiLine Whether the text field should consist of a single line,
-			 *                  or of a multiline text editor with vertical scroll bar.
-			 * @param width The width of the element.
-			 * @param height The height of the element.
-			 */
 			UITextInput(bool multiLine, Number width, Number height);
 			virtual ~UITextInput();
 		
 			void handleEvent(Event *event);
 			void Update();
 			
-			/**
-			 * Set the text contents of the input.
-			 *
-			 * If the input is single-line, insert the complete text into
-			 * the line, without taking linebreaks into account.
-			 *
-			* If the input is multi-line, each line is inserted separately
-			 * into the text field
-			 *
-			 * @param text The new text contents.
-			 * @param sendChangeEvent If true (default), will send out an Event::CHANGE_EVENT 
-			 */
-			void setText(String text, bool sendChangeEvent = true);
-
-			/**
-			 * Returns the text contents of this element.
-			 *
-			 * For single-line, returns the contents of the first line.
-			 * For multi-line, returns a string containing each line in
-			 * the text field, separated by '\n'.
-			 */
+			void setText(String text);
 			String getText();
 			void onLoseFocus();
 		
-			/**
-			 * Insert a linebreak after the cursor and move
-			 * the cursor to the new line.
-			 *
-			 * @param after Unused. This must be true.
-			 */
-			int insertLine(bool after = true);
-
-			void changedText(bool sendChangeEvent = true);
+			int insertLine(bool after);
+		
+			void changedText();
 			void applySyntaxFormatting();
 			
 			void onKeyDown(PolyKEY key, wchar_t charCode);
 		
-			/**
-			 * Clear the current selection.
-			 */
 			void clearSelection();
-
-			/**
-			 * Set the current selection.
-			 *
-			 * If (lineStart, colStart) is further "right" or "down" than (lineEnd, colEnd),
-			 * the two will automatically be swapped. It's thus enough to specify the two "edges"
-			 * of the selection, without knowing which comes first.
-			 *
-			 * @param lineStart The line position of one edge of the selection.
-			 * @param colStart The column position of one edge of the selection.
-			 * @param lineEnd The line position of the other edge of the selection.
-			 * @param colEnd The column position of the other edge of the selection.
-			 */
 			void setSelection(int lineStart, int lineEnd, int colStart, int colEnd);
-
-			/**
-			 * Remove the currently selected text from the text contents.
-			 */
-			void deleteSelection();
-
-			/**
-			 * Select the entire text contents.
-			 */
+				
+			void deleteSelection();		
 			void selectAll();
 		
-			/**
-			 * Reset the text contents and selection/caret to
-			 * the last undo state.
-			 */
 			void Undo();
-
-			/**
-			 * Reset the text contents and selection/caret to
-			 * the next undo state.
-			 */
 			void Redo();
-
-			/**
-			 * Remove the current selection and copy it to the clipboard.
-			 */
 			void Cut();
-
-			/**
-			 * Copy the current selection to the clipboard.
-			 */
 			void Copy();
-
-			/**
-			 * Replace the current selection with the contents of the clipboard.
-			 */
 			void Paste();
 			
-			/**
-			 * Toggle line number display for each line.
-			 * @param val true to enable, false to disable.
-			 */
 			void enableLineNumbers(bool val);
 			
-			/**
-			 * Set the color of the text field background.
-			 */
 			void setBackgroundColor(Color color);
-
-			/**
-			 * Set the background color for selected text.
-			 */
 			void setSelectionColor(Color color);
-
-			/**
-			 * Set the color of the cursor.
-			 */
 			void setCursorColor(Color color);
-
-			/**
-			 * Set the foreground color of displayed text.
-			 */
 			void setTextColor(Color color);
-
-			/**
-			 * Set the foreground color of line numbers.
-			 */
 			void setLineNumberColor(Color color);
 			
 			void checkBufferLines();
 			
-			/**
-			 * Find and replace in the text contents.
-			 *
-			 * @param what The string to find.
-			 * @param withWhat The string to replace each occurrence with.
-			 */
 			void replaceAll(String what, String withWhat);
 			
-			/**
-			 * Find and optionally replace a string.
-			 *
-			 * Sets the current selection to the first result. All results will be stored as instances of FindMatch
-			 * in this->findMatches, and can later be retrieved with findNext(), findPrevious() and findCurrent().
-			 *
-			 * @param stringToFind The string to find occurrences of.
-			 * @param replace Whether to replace occurrences with something.
-			 * @param replaceString The string to replace occurrences with, only used if replace=true
-			 */
 			void findString(String stringToFind, bool replace=false, String replaceString="");
-
-			/**
-			 * Set the current find result to the next one in the result list and select it
-			 * in the text field.
-			 */
 			void findNext();
-
-			/**
-			 * Set the current find result to the previous one in the result list and select it
-			 * in the text field.
-			 */
 			void findPrevious();
-
-			/**
-			 * Set the selection to the current result in the result list.
-			 */
 			void findCurrent();
-			
+						
 			void showLine(unsigned int lineNumber, bool top);
 
-			/**
-			 * Set the syntax highlighter to use for formatting text.
-			 *
-			 * @param syntaxHighlighter The syntax highlighter instance to use.
-			 */
-			void setSyntaxHighlighter(UITextInputSyntaxHighlighter *syntaxHighlighter);
+			void setSyntaxHighlighter(UITextInputSyntaxHighlighter *syntaxHighliter);
 					
 			bool isNumberOrCharacter(wchar_t charCode);
 			void Resize(Number width, Number height);
 			
-			/**
-			 * Toggles whether this input accepts only numbers.
-			 *
-			 * @param val true to only accept numbers, false otherwise.
-			 */
 			void setNumberOnly(bool val);
 		
-			/**
-			 * Return the contents of a line.
-			 *
-			 * @param index The index of the line to get the contents of.
-			 *              First line has index 0.
-			 */
 			String getLineText(unsigned int index);
-			
-			/**
-			 * Return the currently selected text.
-			 */
+		
 			String getSelectionText();
-
-			/**
-			 * Replace the current selection with the given text.
-			 *
-			 * @param text The string to insert.
-			 */
 			void insertText(String text);
 			
-			void setCaretPosition(int position);
-			
 			UIScrollContainer *getScrollContainer();
 			
 			bool useStrongHinting;
-        
-            void shiftText(bool left=false);
-            void convertIndentToTabs();
-            void convertIndentToSpaces();
 		
 		protected:
 		
@@ -375,16 +211,6 @@
 		
 			int selectionCaretPosition;
 			int selectionLine;
-
-			// Used only by single-line text input, so
-			// that you can edit text longer than the width
-			// of the line.
-			// TODO/considerations: Use this to scroll a single
-			// line in multi-line mode?
-			int horizontalPixelScroll;
-			// By how many characters have we scrolled right?
-			int horizontalCharacterScroll;
-
 		
 			bool draggingSelection;
 			bool hasSelection; 
@@ -396,9 +222,6 @@
 			UITextInputSyntaxHighlighter *syntaxHighliter;
 		
 			ScreenEntity *linesContainer;
-
-			// container for the actual text contents
-			UIElement *textContainer; 
 			
 			vector<ScreenLabel*> linesToDelete;	
 			
@@ -440,9 +263,6 @@
 			vector<ScreenLabel*> numberLines;
 			
 			Core *core;
-        
-			enum indentTypes { INDENT_SPACE, INDENT_TAB } indentType;
-			int indentSpacing;
 			
 	};
-}
+}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Include/PolyUITree.h b/Modules/Contents/UI/Include/PolyUITree.h
--- a/Modules/Contents/UI/Include/PolyUITree.h
+++ b/Modules/Contents/UI/Include/PolyUITree.h
@@ -22,7 +22,6 @@
 
 #pragma once
 #include "PolyGlobals.h"
-#include "PolyUIElement.h"
 #include "PolyScreenLabel.h"
 #include "PolyScreenImage.h"
 #include "PolyScreenShape.h"
@@ -36,10 +35,8 @@
 
 namespace Polycode {
 
-	class _PolyExport UITree : public UIElement {
+	class _PolyExport UITree : public ScreenEntity {
 		public:
-			using UIElement::Resize;
-
 			UITree(String icon, String text, Number treeWidth, Number treeOffset=0);
 			virtual ~UITree();
 			
@@ -57,7 +54,7 @@
 			void setUserData(void *data);
 			UITree *getSelectedNode();
 			void setIcon(String iconFile);
-			void setSelected(bool byKey=false);
+			void setSelected();
 			
 			void setLabelText(const String &text);
 			
@@ -71,14 +68,6 @@
 			String getLabelText();
 			
 			Number handleRotation;
-
-			UITree *getParent();
-			bool hasTreeChildren() { return (getNumTreeChildren()); }
-			UITree *getPrevSibling();
-			UITree *getNextSibling();
-			Number getCellHeight() { return cellHeight; }
-
-			bool isSelectedByKey() { return selectedByKey; }
 		
 		private:
 
@@ -101,6 +90,7 @@
 			Number treeHeight;
 			vector<UITree*> treeChildren;
 			bool collapsed;
+			bool collapsing;
 			ScreenImage *arrowIconImage;
 			String arrowIcon;
 			Vector2 mouseDownPosition;
@@ -108,7 +98,5 @@
 			int size;
 			Number cellHeight;
 			Number cellPadding;
-
-			bool selectedByKey;
 	};
 }
diff --git a/Modules/Contents/UI/Include/PolyUITreeContainer.h b/Modules/Contents/UI/Include/PolyUITreeContainer.h
--- a/Modules/Contents/UI/Include/PolyUITreeContainer.h
+++ b/Modules/Contents/UI/Include/PolyUITreeContainer.h
@@ -39,28 +39,13 @@
 		
 		UITree *getRootNode();
 		ScreenEntity *scrollChild;
-		
-		void onKeyDown(PolyKEY key, wchar_t charCode);
-		void onGainFocus();
-		
-		/**
-		 * Scrolls the container to show a specified node.
-		 * @param node The tree node to scroll to or show.
-		 * @param showAtTop If true, show the node at the top of the container. If false, show it at the bottom.
-		 */
-		void scrollToNode(UITree *node, bool showAtTop);
-		
-	protected:
-		bool keyNavigable;
-		
-		UITree *findLastOpenNode(UITree *tree);
-		UITree *findNextParentSibling(UITree *parent);
-		
 	private:
 		
 		UIScrollContainer *mainContainer;
+		ScreenShape *maskShape;
 		
 		UITree *rootNode;
 		UIBox *bgBox;
 	};
-}
+
+}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Include/PolyUIVScrollBar.h b/Modules/Contents/UI/Include/PolyUIVScrollBar.h
--- a/Modules/Contents/UI/Include/PolyUIVScrollBar.h
+++ b/Modules/Contents/UI/Include/PolyUIVScrollBar.h
@@ -22,15 +22,12 @@
 
 #pragma once
 #include "PolyGlobals.h"
-#include "PolyUIElement.h"
 #include "PolyUIBox.h"
 
 namespace Polycode {
 	
-	class _PolyExport UIVScrollBar : public UIElement {
+	class _PolyExport UIVScrollBar : public ScreenEntity {
 	public:
-		using UIElement::Resize;
-
 		UIVScrollBar(Number width, Number height, Number initialRatio);
 		~UIVScrollBar();
 		
diff --git a/Modules/Contents/UI/Include/PolyUIVSizer.h b/Modules/Contents/UI/Include/PolyUIVSizer.h
--- a/Modules/Contents/UI/Include/PolyUIVSizer.h
+++ b/Modules/Contents/UI/Include/PolyUIVSizer.h
@@ -37,7 +37,6 @@
 			void handleEvent(Event *event);
 			
 			void setMainHeight(Number height);
-			Number getMainHeight();
 			
 			void addTopChild(UIElement *element);
 			void addBottomChild(UIElement *element);			
diff --git a/Modules/Contents/UI/Source/PolyUIBox.cpp b/Modules/Contents/UI/Source/PolyUIBox.cpp
--- a/Modules/Contents/UI/Source/PolyUIBox.cpp
+++ b/Modules/Contents/UI/Source/PolyUIBox.cpp
@@ -24,7 +24,7 @@
 
 using namespace Polycode;
 
-UIBox::UIBox(String imageFile, Number t, Number r, Number b, Number l, Number boxWidth, Number boxHeight) : UIElement() {
+UIBox::UIBox(String imageFile, Number t, Number r, Number b, Number l, Number boxWidth, Number boxHeight) : ScreenEntity() {
 	
 	setPositionMode(ScreenEntity::POSITION_TOPLEFT);	
 	
diff --git a/Modules/Contents/UI/Source/PolyUIButton.cpp b/Modules/Contents/UI/Source/PolyUIButton.cpp
--- a/Modules/Contents/UI/Source/PolyUIButton.cpp
+++ b/Modules/Contents/UI/Source/PolyUIButton.cpp
@@ -42,8 +42,8 @@
 	Number sb = conf->getNumericValue("Polycode", "uiButtonSkinB");
 	Number sl = conf->getNumericValue("Polycode", "uiButtonSkinL");
 
-	labelOffsetX = conf->getNumericValue("Polycode", "uiButtonLabelOffsetX");
-	labelOffsetY = conf->getNumericValue("Polycode", "uiButtonLabelOffsetY");
+	Number labelOffsetX = conf->getNumericValue("Polycode", "uiButtonLabelOffsetX");
+	Number labelOffsetY = conf->getNumericValue("Polycode", "uiButtonLabelOffsetY");
 		
 	buttonRect = new UIBox(conf->getStringValue("Polycode", "uiButtonSkin"),
 						   st,sr,sb,sl,
@@ -85,21 +85,6 @@
 	
 }
 
-void UIButton::Resize(Number width, Number height) {
-	buttonRect->resizeBox(width, height);
-	buttonFocusedRect->resizeBox(width, height);
-	this->width = width;
-	this->height = height;	
-	matrixDirty = true;	
-	setHitbox(width,height);	
-	
-	labelXPos = floor((width-buttonLabel->getWidth())/2.0f) + labelOffsetX;
-	labelYPos = labelOffsetY;
-	buttonLabel->setPosition(labelXPos,labelYPos);
-	
-	UIElement::Resize(width, height);
-}
-
 void UIButton::Update() {
 	if(hasFocus) {
 		buttonFocusedRect->visible = true;
@@ -125,9 +110,7 @@
 		switch(event->getEventCode()) {
 			case InputEvent::EVENT_KEYDOWN:
 				if(hasFocus) {
-					if(((InputEvent*)event)->key == KEY_RETURN || ((InputEvent*)event)->key == KEY_SPACE) {
-						dispatchEvent(new UIEvent(), UIEvent::CLICK_EVENT);
-					}
+					dispatchEvent(new UIEvent(), UIEvent::CLICK_EVENT);					
 				}
 			break;
 		}
diff --git a/Modules/Contents/UI/Source/PolyUIColorBox.cpp b/Modules/Contents/UI/Source/PolyUIColorBox.cpp
--- a/Modules/Contents/UI/Source/PolyUIColorBox.cpp
+++ b/Modules/Contents/UI/Source/PolyUIColorBox.cpp
@@ -32,8 +32,6 @@
 UIColorPicker::UIColorPicker() : UIWindow(L"", 300, 240) {
 	closeOnEscape = true;
 	
-	continuous = false;
-		
 //	topPadding
 	Config *conf = CoreServices::getInstance()->getConfig();	
 		
@@ -202,14 +200,6 @@
 
 }
 
-bool UIColorPicker::isContinuous() {
-	return continuous;
-}
-void UIColorPicker::setContinuous(bool _continuous) {
-	continuous = _continuous;
-	alphaSlider->setContinuous(continuous);
-}
-
 void UIColorPicker::setPickerColor(Color newColor) {
 	currentS = newColor.getSaturation();
 	currentV = newColor.getValue();
@@ -311,13 +301,15 @@
 				InputEvent *inputEvent = (InputEvent*) event;
 				hueSelector->setPositionY(inputEvent->getMousePosition().y+hueFrame->position.y);
 				hueSelector->startDrag(inputEvent->mousePosition.x-hueSelector->getPosition().x,inputEvent->mousePosition.y-hueSelector->getPosition().y+hueFrame->position.y);		
+				Number newHue = 360.0 - (((inputEvent->getMousePosition().y-hueFrame->getPosition().y)/((hueFrame->getPosition().y+hueFrame->getHeight())-hueFrame->getPosition().y)) * 360.0f);
+				setHue(newHue);
+						
 			}
 			break;
 			case InputEvent::EVENT_MOUSEUP:
 			case InputEvent::EVENT_MOUSEUP_OUTSIDE:			
 			{
 				hueSelector->stopDrag();
-				updateColorFromHueSelector();	
 			}
 			break;	
 		}
@@ -332,13 +324,17 @@
 				InputEvent *inputEvent = (InputEvent*) event;
 				mainSelector->setPosition(inputEvent->getMousePosition().x+mainColorRect->position.x, inputEvent->getMousePosition().y+mainColorRect->position.y);
 				mainSelector->startDrag(inputEvent->mousePosition.x-mainSelector->getPosition().x+mainColorRect->position.x,inputEvent->mousePosition.y-mainSelector->getPosition().y+mainColorRect->position.y);
+				
+				Number newV = 1.0 - inputEvent->getMousePosition().y / mainColorRect->getHeight();
+				Number newS = inputEvent->getMousePosition().x / mainColorRect->getWidth();
+
+				setSaturationAndValue(newS, newV);
 			}
 			break;
 			case InputEvent::EVENT_MOUSEUP:
 			case InputEvent::EVENT_MOUSEUP_OUTSIDE:			
 			{
 				mainSelector->stopDrag();			
-				updateColorFromMainSelector();
 			}
 			break;	
 		}
@@ -374,7 +370,8 @@
 		delete junkLabels[c];
 }
 
-void UIColorPicker::updateColorFromMainSelector() {
+void UIColorPicker::Update() {
+
 	if(mainSelector->getPosition2D() != lastMainSelectorPosition) {
 		lastMainSelectorPosition = mainSelector->getPosition2D();
 		
@@ -387,9 +384,7 @@
 					
 		setSaturationAndValue(newS, newV);	
 	}
-}
-
-void UIColorPicker::updateColorFromHueSelector() {
+	
 	if(hueSelector->getPosition().y != lastHueSelectorPosition) {
 		lastHueSelectorPosition = hueSelector->getPosition().y;
 		
@@ -404,18 +399,8 @@
 					
 		Number newHue = 360.0 - (((newPosY-hueFrame->getPosition().y)/((hueFrame->getPosition().y+hueFrame->getHeight())-hueFrame->getPosition().y)) * 360.0f);
 		setHue(newHue);
-	}
-}
+	}	
 
-void UIColorPicker::Update() {	
-	if (continuous) {
-		if (mainSelector->isDragged())
-			updateColorFromMainSelector();
-		
-		if (hueSelector->isDragged())
-			updateColorFromHueSelector();
-	}
-	
 	UIWindow::Update();
 }
 
diff --git a/Modules/Contents/UI/Source/PolyUIComboBox.cpp b/Modules/Contents/UI/Source/PolyUIComboBox.cpp
--- a/Modules/Contents/UI/Source/PolyUIComboBox.cpp
+++ b/Modules/Contents/UI/Source/PolyUIComboBox.cpp
@@ -58,8 +58,8 @@
 	Number paddingX = conf->getNumericValue("Polycode", "uiComboBoxTextOffsetX");	
 	Number paddingY = conf->getNumericValue("Polycode", "uiComboBoxTextOffsetY");	
 
-	dropDownX = conf->getNumericValue("Polycode", "uiComboBoxDropX");
-	dropDownY = conf->getNumericValue("Polycode", "uiComboBoxDropY");
+	Number dropDownX = conf->getNumericValue("Polycode", "uiComboBoxDropX");
+	Number dropDownY = conf->getNumericValue("Polycode", "uiComboBoxDropY");
 		
 	dropDownImage = new ScreenImage(dropDownImageFile);
 	dropDownImage->setPosition(comboWidth - dropDownImage->getWidth() - dropDownX,dropDownY);
@@ -100,16 +100,6 @@
 	this->height = comboHeight;
 }
 
-void UIComboBox::Resize(Number width, Number height) {
-	this->comboWidth = width;
-	bgBox->resizeBox(width, comboHeight);
-	this->width = width;
-	this->height = height;	
-	matrixDirty = true;	
-	setHitbox(width,height);
-	dropDownImage->setPosition(comboWidth - dropDownImage->getWidth() - dropDownX,dropDownY);	
-}
-
 UIComboBox::~UIComboBox() {
 	for(int c = 0; c < items.size(); c++)
 		delete items[c];
diff --git a/Modules/Contents/UI/Source/PolyUIElement.cpp b/Modules/Contents/UI/Source/PolyUIElement.cpp
--- a/Modules/Contents/UI/Source/PolyUIElement.cpp
+++ b/Modules/Contents/UI/Source/PolyUIElement.cpp
@@ -29,12 +29,6 @@
 	processInputEvents = true;
 }
 
-UIElement::UIElement(Number width, Number height) : ScreenEntity() {
-	setPositionMode(ScreenEntity::POSITION_TOPLEFT);
-	processInputEvents = true;
-	this->width = width; this->height = height;
-}
-
 UIElement::~UIElement() {
 
 }
@@ -42,5 +36,4 @@
 void UIElement::Resize(Number width, Number height) {
 	setWidth(width);
 	setHeight(height);
-	dirtyMatrix(true);	
-}
+}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Source/PolyUIHScrollBar.cpp b/Modules/Contents/UI/Source/PolyUIHScrollBar.cpp
--- a/Modules/Contents/UI/Source/PolyUIHScrollBar.cpp
+++ b/Modules/Contents/UI/Source/PolyUIHScrollBar.cpp
@@ -29,7 +29,7 @@
 
 using namespace Polycode;
 
-UIHScrollBar::UIHScrollBar(Number width, Number height, Number initialRatio) : UIElement() {
+UIHScrollBar::UIHScrollBar(Number width, Number height, Number initialRatio) : ScreenEntity() {
 	
 	scrollValue = 0;
 	
diff --git a/Modules/Contents/UI/Source/PolyUIHSizer.cpp b/Modules/Contents/UI/Source/PolyUIHSizer.cpp
--- a/Modules/Contents/UI/Source/PolyUIHSizer.cpp
+++ b/Modules/Contents/UI/Source/PolyUIHSizer.cpp
@@ -86,6 +86,7 @@
 
 void UIHSizer::handleEvent(Event *event) {
 	if(event->getDispatcher() == separatorHitShape) {
+		InputEvent *inputEvent = (InputEvent*)event;
 		switch (event->getEventCode()) {
 			case InputEvent::EVENT_MOUSEDOWN:
 				resizing = true;
@@ -130,11 +131,6 @@
 	this->height = height;
 	matrixDirty = true;
 	updateSizer();
-	UIElement::Resize(width, height);	
-}
-
-Number UIHSizer::getMainWidth() {
-	return mainWidth;
 }
 
 void UIHSizer::setMainWidth(Number width) {
diff --git a/Modules/Contents/UI/Source/PolyUIHSlider.cpp b/Modules/Contents/UI/Source/PolyUIHSlider.cpp
--- a/Modules/Contents/UI/Source/PolyUIHSlider.cpp
+++ b/Modules/Contents/UI/Source/PolyUIHSlider.cpp
@@ -29,13 +29,11 @@
 
 UIHSlider::UIHSlider(Number start, Number end, Number width) : UIElement() {
 
-	continuous = false;
-	
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	
 	String bgImage = conf->getStringValue("Polycode", "uiHSliderBg");
 	String gripImage = conf->getStringValue("Polycode", "uiHSliderGrip");	
-	bgHeight = conf->getNumericValue("Polycode", "uiHSliderBgHeight");
+	Number bgHeight = conf->getNumericValue("Polycode", "uiHSliderBgHeight");
 
 	Number st = conf->getNumericValue("Polycode", "uiHSliderBgT");
 	Number sr = conf->getNumericValue("Polycode", "uiHSliderBgR");
@@ -77,7 +75,6 @@
 	gripRect->setDragLimits(Rectangle(0,floor(bgHeight/2.0),width,0));
 	
 	gripPos = 0;
-	dragging = false;
 }
 
 UIHSlider::~UIHSlider() {
@@ -96,28 +93,9 @@
 	}
 }
 
-bool UIHSlider::isContinuous() {
-	return continuous;
-}
-void UIHSlider::setContinuous(bool _continuous) {
-	continuous = _continuous;
-}
-
 Number UIHSlider::getSliderValue() {
 	return sliderValue;
 }
-
-void UIHSlider::Resize(Number width, Number height) {
-	bgRect->resizeBox(width, bgHeight);
-	this->width = width;
-	this->height = height;	
-	matrixDirty = true;	
-	setHitbox(width,height);
-	sliderWidth = width;
-	gripRect->setDragLimits(Rectangle(0,floor(bgHeight/2.0),width,0));	
-	setSliderValue(sliderValue);
-	bgHitBox->setShapeSize(width,  gripRect->getHeight());
-}
 			
 void UIHSlider::handleEvent(Event *event) {
 
@@ -129,15 +107,10 @@
 				gripPos = gripRect->getPosition().x;				
 				sliderValue = startValue+((endValue - startValue) * (gripPos/sliderWidth));				
 				gripRect->startDrag(inputEvent->mousePosition.x-gripRect->getPosition().x,inputEvent->mousePosition.y-gripRect->getPosition().y);
-				dragging = true;
 			break;
 			case InputEvent::EVENT_MOUSEUP:
 			case InputEvent::EVENT_MOUSEUP_OUTSIDE:
 				gripRect->stopDrag();
-				if(dragging) {
-					dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);
-				}
-				dragging = false;				
 			break;
 		}	
 	}
@@ -147,15 +120,10 @@
 		switch(event->getEventCode()) {
 			case InputEvent::EVENT_MOUSEDOWN:
 				gripRect->startDrag(inputEvent->mousePosition.x-gripRect->getPosition().x,inputEvent->mousePosition.y-gripRect->getPosition().y);
-				dragging = true;				
 			break;
 			case InputEvent::EVENT_MOUSEUP:
 			case InputEvent::EVENT_MOUSEUP_OUTSIDE:		
 				gripRect->stopDrag();
-				if(dragging) {
-					dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);
-				}
-				dragging = false;				
 			break;
 		}	
 	}
@@ -166,8 +134,6 @@
 	if(gripRect->getPosition().x != gripPos) {
 		gripPos = gripRect->getPosition().x;
 		sliderValue = startValue+((endValue - startValue) * (gripPos/sliderWidth));
-		if (continuous) {
-			dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);
-		}
+		dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);
 	}
 }
diff --git a/Modules/Contents/UI/Source/PolyUIMenu.cpp b/Modules/Contents/UI/Source/PolyUIMenu.cpp
--- a/Modules/Contents/UI/Source/PolyUIMenu.cpp
+++ b/Modules/Contents/UI/Source/PolyUIMenu.cpp
@@ -27,7 +27,6 @@
 #include "PolyCoreServices.h"
 #include "PolyCore.h"
 #include "PolyConfig.h"
-#include "PolyScreenLine.h"
 
 using namespace Polycode;
 
@@ -43,43 +42,15 @@
 	Number paddingY = conf->getNumericValue("Polycode", "uiMenuTextOffsetY");	
 
 	itemLabel = new ScreenLabel(label, fontSize, fontName);
-	itemLabel->setPosition(paddingX, floor(((comboHeight/2.0) - itemLabel->getHeight()/2.0) + paddingY));
+	itemLabel->setPosition(paddingX, floor(((comboHeight/2.0) - itemLabel->getHeight()/2.0) + paddingY));	
 	addChild(itemLabel);
 	
 	this->_id = _id;
 	this->data = data;
 }
 
-UIMenuItem::UIMenuItem() : UIElement(), data(NULL), itemLabel(NULL) {
-}
-
-bool UIMenuItem::isSelectable()
-{
-	return true;
-}
-
 UIMenuItem::~UIMenuItem() {
-	if(itemLabel)
-		delete itemLabel;
-}
-
-UIMenuDivider::UIMenuDivider(Number comboWidth, Number comboHeight) : UIMenuItem() {
-	Config *conf    = CoreServices::getInstance()->getConfig();
-	Number paddingX = conf->getNumericValue("Polycode", "uiMenuSelectorPadding");
-
-	line = new ScreenLine(Vector2(paddingX, comboHeight/2.0), Vector2(comboWidth-paddingX, comboHeight/2.0));
-	line->setLineWidth(1.0);
-	line->setColor(Color(0.0, 0.0, 0.0, 0.7));
-	addChild(line);
-}
-
-UIMenuDivider::~UIMenuDivider() {
-	delete line;
-}
-
-bool UIMenuDivider::isSelectable()
-{
-	return false;
+	delete itemLabel;
 }
 
 UIMenu::UIMenu(Number menuWidth) : UIElement() {
@@ -162,22 +133,7 @@
 void UIMenu::Update() {
 	ignoreMouse = false;
 }
-
-void UIMenu::fitToScreenVertical() {
-	// Make sure the entity doesn't go past the bottom of the screen.
-	if(dropDownBox->getHeight() < CoreServices::getInstance()->getCore()->getYRes()) {
-		// If the entity is as high as the screen, no point trying to fit it in vertically.
-		Vector2 screenPos = this->getScreenPosition();
-		Number exceedScreenBottom = screenPos.y + dropDownBox->getHeight() - CoreServices::getInstance()->getCore()->getYRes();
-		if(exceedScreenBottom > 0) {
-			this->setPosition(this->getPosition().x, this->getPosition().y - exceedScreenBottom);
-		} else if(screenPos.y < 0) {
-			this->setPosition(this->getPosition().x, 0);
-		}
-	}
-}
-
-
+				
 void UIMenu::handleEvent(Event *event) {
 
 	if(event->getDispatcher() == CoreServices::getInstance()->getCore()->getInput()) {
@@ -192,8 +148,8 @@
 		if((event->getEventCode() == InputEvent::EVENT_MOUSEDOWN || (event->getEventCode() == InputEvent::EVENT_MOUSEUP && initialMouse != inputEvent->getMousePosition())) && !ignoreMouse) {
 			if(selectorBox->visible) {
 				dispatchEvent(new UIEvent(), UIEvent::OK_EVENT);
-			} else if(!dropDownBox->hitTest(inputEvent->getMousePosition())) {
-				dispatchEvent(new UIEvent(), UIEvent::CANCEL_EVENT);
+			} else {
+				dispatchEvent(new UIEvent(), UIEvent::CANCEL_EVENT);				
 			}
 		}
 	}
@@ -210,7 +166,7 @@
 				InputEvent *inputEvent = (InputEvent*) event;
 				selectedOffset = floor(((inputEvent->getMousePosition().y-selectorPadding)-paddingY)/menuItemHeight);
 					
-				if(selectedOffset >= 0 && selectedOffset < items.size() && items[selectedOffset]->isSelectable()) {
+				if(selectedOffset >= 0 && selectedOffset < items.size()) {
 					selectorBox->visible = true;				
 					selectorBox->setPosition(paddingX,paddingY+(selectedOffset*menuItemHeight) - selectorPadding);
 				} else {
@@ -230,6 +186,8 @@
 	if(!ownsChildren) {	
 		delete dropDownBox;
 	}
+	
+	CoreServices::getInstance()->getCore()->getInput()->removeAllHandlersForListener(this);
 }
 
 UIMenuItem *UIMenu::addOption(String label, String _id, void *data) {
@@ -242,18 +200,6 @@
 	return newItem;
 }
 
-UIMenuItem *UIMenu::addDivider()
-{
-	Number newItemHeight = menuItemHeight;
-	UIMenuItem *newItem = new UIMenuDivider(menuWidth, newItemHeight);
-	items.push_back(newItem);
-	dropDownBox->addChild(newItem);
-	newItem->setPosition(0, paddingY+nextItemHeight);
-	nextItemHeight += newItemHeight;
-	dropDownBox->resizeBox(menuWidth, nextItemHeight + (paddingY*2.0));
-	return newItem;
-}
-
 void UIMenu::Resize(Number width, Number height) {
 	UIElement::Resize(width, height);
 }
@@ -311,7 +257,6 @@
 		
 	addChild(currentMenu);
 	currentMenu->setPosition(x,y);
-
 	return currentMenu;
 	
 }
diff --git a/Modules/Contents/UI/Source/PolyUIScrollContainer.cpp b/Modules/Contents/UI/Source/PolyUIScrollContainer.cpp
--- a/Modules/Contents/UI/Source/PolyUIScrollContainer.cpp
+++ b/Modules/Contents/UI/Source/PolyUIScrollContainer.cpp
@@ -51,7 +51,7 @@
 	scrollChild = scrolledEntity;
 	addChild(scrollChild);
 	
-	enableScissor = true;
+	scrollChild->enableScissor = true;
 	
 	vScrollBar = new UIVScrollBar(defaultScrollSize, height, height / scrolledEntity->getHeight());
 	addChild(vScrollBar);
@@ -166,7 +166,7 @@
 
 void UIScrollContainer::Update() {
 	Vector2 pos = getScreenPosition();
-	scissorBox.setRect(pos.x, pos.y, width, height);
+	scrollChild->scissorBox.setRect(pos.x,pos.y, width, height);	
 }
 
 void UIScrollContainer::handleEvent(Event *event) {
diff --git a/Modules/Contents/UI/Source/PolyUITextInput.cpp b/Modules/Contents/UI/Source/PolyUITextInput.cpp
--- a/Modules/Contents/UI/Source/PolyUITextInput.cpp
+++ b/Modules/Contents/UI/Source/PolyUITextInput.cpp
@@ -30,7 +30,7 @@
 
 using namespace Polycode;
 
-UITextInput::UITextInput(bool multiLine, Number width, Number height) : UIElement(width, height) {
+UITextInput::UITextInput(bool multiLine, Number width, Number height) : UIElement() {
 	this->multiLine = multiLine;
 	processInputEvents = true;
 	isNumberOnly = false;
@@ -48,9 +48,6 @@
 	
 	caretPosition = 0;
 	caretImagePosition = 0;
-
-	horizontalPixelScroll = 0;
-	horizontalCharacterScroll = 0;
 	
 	settingText = false;	
 	
@@ -60,7 +57,7 @@
 	
 	numLines = 0;
 	
-	setPositionMode(POSITION_TOPLEFT);
+	this->positionMode = ScreenEntity::POSITION_TOPLEFT;
 	Config *conf = CoreServices::getInstance()->getConfig();	
 	
 	if(multiLine)
@@ -77,7 +74,7 @@
 	if(!multiLine) {
 		rectHeight = fontSize+12;
 	} 
-
+	
 	linesContainer = new ScreenEntity();	
 	linesContainer->processInputEvents = true;
 	linesContainer->ownsChildren = true;
@@ -89,12 +86,8 @@
 	sl = conf->getNumericValue("Polycode", "textBgSkinL");
 
 	
-	padding = conf->getNumericValue("Polycode", "textBgSkinPadding");
+	padding = conf->getNumericValue("Polycode", "textBgSkinPadding");	
 	
-	textContainer = new UIElement();
-	textContainer->ownsChildren = true;
-
-	linesContainer->addChild(textContainer);
 	if(multiLine) {
 		inputRect = new UIBox(conf->getStringValue("Polycode", "textBgSkinMultiline"),
 						  st,sr,sb,sl,
@@ -116,20 +109,16 @@
 		
 		lineNumberAnchor = new ScreenEntity();
 		linesContainer->addChild(lineNumberAnchor);
+		
 	} else {
 		lineNumberBg = NULL;
 		lineNumberAnchor = NULL;
 		decoratorOffset = sl/2.0;
 	}
 
-	textContainer->setWidth(fabs(this->getWidth() - textContainer->getPosition2D().x - padding));
-	textContainer->setHeight(fabs(this->getHeight() - textContainer->getPosition2D().y));
-	textContainer->setPosition(padding + decoratorOffset, padding);
 	
 	inputRect->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
 	inputRect->addEventListener(this, InputEvent::EVENT_MOUSEUP);	
-	inputRect->addEventListener(this, InputEvent::EVENT_MOUSEWHEEL_DOWN);
-	inputRect->addEventListener(this, InputEvent::EVENT_MOUSEWHEEL_UP);	
 	inputRect->addEventListener(this, InputEvent::EVENT_DOUBLECLICK);		
 	inputRect->addEventListener(this, InputEvent::EVENT_MOUSEMOVE);		
 	inputRect->addEventListener(this, InputEvent::EVENT_MOUSEOVER);
@@ -141,27 +130,27 @@
 	selectorRectTop->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 	selectorRectTop->setColor(181.0f/255.0f, 213.0f/255.0f, 255.0f/255.0f, 1);
 	selectorRectTop->visible = false;
-	textContainer->addChild(selectorRectTop);
+	linesContainer->addChild(selectorRectTop);
 
 	selectorRectMiddle = new ScreenShape(ScreenShape::SHAPE_RECT, 1,1);
 	selectorRectMiddle->setPositionMode(ScreenEntity::POSITION_TOPLEFT);	
 	selectorRectMiddle->setColor(181.0f/255.0f, 213.0f/255.0f, 255.0f/255.0f, 1);
 	selectorRectMiddle->visible = false;
-	textContainer->addChild(selectorRectMiddle);
+	linesContainer->addChild(selectorRectMiddle);
 
 	selectorRectBottom = new ScreenShape(ScreenShape::SHAPE_RECT, 1,1);
 	selectorRectBottom->setPositionMode(ScreenEntity::POSITION_TOPLEFT);	
 	selectorRectBottom->setColor(181.0f/255.0f, 213.0f/255.0f, 255.0f/255.0f, 1);
 	selectorRectBottom->visible = false;
-	textContainer->addChild(selectorRectBottom);
+	linesContainer->addChild(selectorRectBottom);
 		
 	
 	blinkerRect = new ScreenShape(ScreenShape::SHAPE_RECT, 1, fontSize+2,0,0);
 	blinkerRect->setPositionMode(ScreenEntity::POSITION_TOPLEFT);
 	blinkerRect->setColor(0,0,0,1);
-	textContainer->addChild(blinkerRect);
+	linesContainer->addChild(blinkerRect);
 	blinkerRect->visible = false;
-	blinkerRect->setPosition(-horizontalPixelScroll,3);
+	blinkerRect->setPosition(0,3);
 	
 	blinkTimer = new Timer(true, 500);
 	blinkTimer->addEventListener(this, Timer::EVENT_TRIGGER);
@@ -171,14 +160,18 @@
 	this->height = rectHeight;
 	setHitbox(width, rectHeight);
 	
+	updateCaretPosition();
+		
+	
 	scrollContainer = NULL;
+	
 	if(multiLine) {
-		scrollContainer = new UIScrollContainer(linesContainer, false, true, width, height);
+		scrollContainer = new UIScrollContainer(linesContainer, false, true, 200, 200);
 		scrollContainer->addEventListener(this, Event::CHANGE_EVENT);
 		addChild(scrollContainer);
 	} else {
 		addChild(linesContainer);
-		textContainer->enableScissor = true;
+		enableScissor = true;
 	}
 		
 	undoStateIndex = 0;
@@ -187,13 +180,12 @@
 	syntaxHighliter = NULL;
 	
 	textColor = Color(0.0,0.0,0.0,1.0);
-
+	
 	currentBufferLines = 0;
 	neededBufferLines = 1;
 	checkBufferLines();
-
+	
 	insertLine(true);
-	updateCaretPosition();
 	
 	core = CoreServices::getInstance()->getCore();
 	core->addEventListener(this, Core::EVENT_COPY);
@@ -201,9 +193,7 @@
 	core->addEventListener(this, Core::EVENT_CUT);
 	core->addEventListener(this, Core::EVENT_UNDO);
 	core->addEventListener(this, Core::EVENT_REDO);
-	core->addEventListener(this, Core::EVENT_SELECT_ALL);
-	indentSpacing = 4;
-	indentType = INDENT_TAB;
+	core->addEventListener(this, Core::EVENT_SELECT_ALL);	
 }
 
 void UITextInput::checkBufferLines() {
@@ -231,7 +221,7 @@
 		ScreenLabel *newLine = new ScreenLabel(L"", fontSize, fontName, aaMode);
 		newLine->color = textColor;
 		lineHeight = newLine->getHeight();
-		textContainer->addChild(newLine);
+		linesContainer->addChild(newLine);
 		bufferLines.push_back(newLine);
 	}
 	
@@ -316,7 +306,7 @@
 	}
 
 	selectorRectTop->setScale(topSize, topHeight);
-	selectorRectTop->setPosition(topX + (topSize/2.0) - horizontalPixelScroll, lineStart * (lineHeight+lineSpacing) + (topHeight/2.0));
+	selectorRectTop->setPosition(decoratorOffset + topX + padding + (topSize/2.0), padding + (lineStart * (lineHeight+lineSpacing)) + (topHeight/2.0));
 	
 	if(lineEnd > lineStart && lineEnd < lines.size()) {
 		String bottomLine = lines[lineEnd];
@@ -326,7 +316,7 @@
 			bottomSize = this->width-padding;
 		Number bottomHeight = lineHeight+lineSpacing;
 		selectorRectBottom->setScale(bottomSize, bottomHeight);
-		selectorRectBottom->setPosition(bottomSize/2.0 - horizontalPixelScroll, lineEnd * (lineHeight+lineSpacing) + (bottomHeight/2.0));
+		selectorRectBottom->setPosition(decoratorOffset + padding + (bottomSize/2.0), padding + (lineEnd * (lineHeight+lineSpacing)) + (bottomHeight/2.0));
 		
 		if(lineEnd != lineStart+1) {
 			// need filler
@@ -337,7 +327,7 @@
 				midHeight += lineHeight+lineSpacing;
 			}
 			selectorRectMiddle->setScale(midSize, midHeight);
-			selectorRectMiddle->setPosition(midSize/2.0 - horizontalPixelScroll, ((lineStart+1) * (lineHeight+lineSpacing)) + (midHeight/2.0));										
+			selectorRectMiddle->setPosition(decoratorOffset + padding + (midSize/2.0), padding + ((lineStart+1) * (lineHeight+lineSpacing)) + (midHeight/2.0));										
 			
 		}
 		
@@ -469,13 +459,11 @@
 	readjustBuffer();	
 }
 
-void UITextInput::changedText(bool sendChangeEvent) {
+void UITextInput::changedText() {
 	if(settingText)
 		return;
 	applySyntaxFormatting();
-	if(sendChangeEvent) {
-		dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);	
-	}
+	dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);	
 }
 
 void UITextInput::setSyntaxHighlighter(UITextInputSyntaxHighlighter *syntaxHighliter) {
@@ -489,10 +477,6 @@
 	matrixDirty = true;	
 	setHitbox(width,height);
 	
-	textContainer->setWidth(fabs(this->getWidth() - textContainer->getPosition2D().x - padding));
-	textContainer->setHeight(fabs(this->getHeight() - textContainer->getPosition2D().y));
-	textContainer->setPosition(padding + decoratorOffset, padding);		
-	
 	if(multiLine) {
 		inputRect->setHitbox(width - scrollContainer->getVScrollWidth(), height);
 		
@@ -528,12 +512,13 @@
 		}		
 		
 		vector<String>::iterator it;
+		it = lines.begin();
+		
+		for(int i=0; i < lineOffset+1; i++) {
+			it++;
+		}
+		
 		lineOffset = lineOffset + 1;
-		if(lineOffset >= lines.size()) {
-			it = lines.end();
-		} else {
-			it = lines.begin() + lineOffset;
-		}
 		lines.insert(it,newText);
 		
 		renumberLines();
@@ -581,18 +566,12 @@
 	}
 	
 	lineNumberAnchor->setPositionX(padding+decoratorOffset - 10);
-
-	// Update the position and width of the text accordingly.
-	textContainer->setPosition(decoratorOffset + padding, padding);
-	textContainer->setWidth(fabs(this->getWidth() - textContainer->getPosition2D().x - padding));
-	textContainer->setHeight(fabs(this->getHeight() - textContainer->getPosition2D().y - padding));
-	textContainer->scissorBox.setRect(textContainer->getPosition2D().x, textContainer->getPosition2D().y, textContainer->getWidth(), textContainer->getHeight()+padding);
 }
 
 void UITextInput::restructLines() {
 
 	for(int i=0; i < bufferLines.size(); i++) {
-		bufferLines[i]->setPosition(0, (i*(lineHeight+lineSpacing)),0.0f);
+		bufferLines[i]->setPosition(decoratorOffset + padding,padding + (i*(lineHeight+lineSpacing)),0.0f);
 	}
 	
 	if(multiLine && lineNumbersEnabled) {
@@ -600,7 +579,7 @@
 	}
 	
 	if(scrollContainer) {
-		scrollContainer->setContentSize(width,  (((lines.size()+1) * ((lineHeight+lineSpacing)))) + padding);
+		scrollContainer->setContentSize(width,  (((lines.size()) * ((lineHeight+lineSpacing)))) + padding);
 	}	
 	
 	if(multiLine) {
@@ -609,14 +588,7 @@
 	
 }
 
-void UITextInput::setCaretPosition(int position) {
-	if(position >= 0 && position < lines[lineOffset].length()) {
-		caretPosition = position;
-		updateCaretPosition();		
-	}
-}
-
-void UITextInput::setText(String text, bool sendChangeEvent) {
+void UITextInput::setText(String text) {
 	if(!multiLine) {
 		lines[lineOffset] = text;
 		caretPosition = text.length();
@@ -628,7 +600,7 @@
 		clearSelection();
 	}
 //	needFullRedraw = true;		
-	changedText(sendChangeEvent);
+	changedText();
 }
 
 void UITextInput::onLoseFocus() {
@@ -652,53 +624,29 @@
 }
 
 void UITextInput::updateCaretPosition() {
-	// If this assertion fails, you likely called the function in the wrong
-	// place in the constructor.
-	assert(bufferLines.size() && lines.size());
 
 	if(lineOffset > lines.size()-1)
 		lineOffset = lines.size()-1;
 
-	caretImagePosition = 0;
+	caretImagePosition = padding;
 	if(caretPosition == 0) {
-		caretImagePosition = 0;
+		caretImagePosition = padding;
 	} else if(caretPosition > lines[lineOffset].length()) {
 		caretPosition = lines[lineOffset].length();
 		String caretSubString = lines[lineOffset].substr(0,caretPosition);
-		caretImagePosition = bufferLines[0]->getLabel()->getTextWidthForString(caretSubString);
+		caretImagePosition = bufferLines[0]->getLabel()->getTextWidthForString(caretSubString);		
+		caretImagePosition = caretImagePosition + padding;		
 	} else {
 		String caretSubString = lines[lineOffset].substr(0,caretPosition);
 		caretImagePosition = bufferLines[0]->getLabel()->getTextWidthForString(caretSubString);
+		caretImagePosition = caretImagePosition  + padding;		
 	}
 	blinkerRect->visible  = true;
 	blinkTimer->Reset();
 	
 	if(doSelectToCaret) {
 		doSelectToCaret = false;
-	}
-
-	if(!multiLine) {
-		// Make sure the new caret position is visible.
-
-		// Try scrolling left.
-		while(caretImagePosition <= horizontalPixelScroll && horizontalCharacterScroll > 0) {
-			horizontalCharacterScroll--;
-
-			// Update pixel scroll from new character scroll.
-			String subString = lines[0].substr(0,horizontalCharacterScroll);
-			horizontalPixelScroll = bufferLines[0]->getLabel()->getTextWidthForString(subString);
-		}
-
-		// Try scrolling right.
-		while(caretImagePosition + blinkerRect->getWidth() > horizontalPixelScroll + textContainer->getWidth()) {
-			horizontalCharacterScroll++;
-
-			// Update pixel scroll from new character scroll.
-			String subString = lines[0].substr(0,horizontalCharacterScroll);
-			horizontalPixelScroll = bufferLines[0]->getLabel()->getTextWidthForString(subString);
-		}
-
-		bufferLines[0]->setPosition(-horizontalPixelScroll, 0);
+		
 	}
 /*	
 	if(multiLine) {	
@@ -714,7 +662,7 @@
 }
 
 void UITextInput::selectLineFromOffset() {
-	// TODO: remove or fill out body
+	lineOffset = lineOffset;
 }
 
 void UITextInput::dragSelectionTo(Number x, Number y) {
@@ -728,9 +676,9 @@
 	
 	int len = selectToLine.length();
 	Number slen = 0;
-	int caretPosition = bufferLines[0]->getLabel()->getTextWidthForString(selectToLine.substr(0,len)) - horizontalPixelScroll;
+	int caretPosition = bufferLines[0]->getLabel()->getTextWidthForString(selectToLine.substr(0,len));
 	for(int i=0; i < len; i++) {
-		slen = bufferLines[0]->getLabel()->getTextWidthForString(selectToLine.substr(0,i)) - horizontalPixelScroll;
+		slen = bufferLines[0]->getLabel()->getTextWidthForString(selectToLine.substr(0,i));
 		if(slen > x) {
 			caretPosition = i;
 			break;
@@ -887,8 +835,8 @@
 	int newCaretPosition = -1;
 	
 	for(int i=1; i < len; i++) {
-		slen = bufferLines[0]->getLabel()->getTextWidthForString(lines[lineOffset].substr(0,i)) - horizontalPixelScroll;
-		Number slen_prev = bufferLines[0]->getLabel()->getTextWidthForString(lines[lineOffset].substr(0,i-1)) - horizontalPixelScroll;		
+		slen = bufferLines[0]->getLabel()->getTextWidthForString(lines[lineOffset].substr(0,i));
+		Number slen_prev = bufferLines[0]->getLabel()->getTextWidthForString(lines[lineOffset].substr(0,i-1));		
 		if(x >= slen_prev && x <= slen) {
 			if(x < slen_prev + ((slen - slen_prev) /2.0)) {
 				newCaretPosition = i-1;
@@ -909,7 +857,7 @@
 		
 	caretPosition = newCaretPosition;	
 		
-	updateCaretPosition();
+	updateCaretPosition();	
 }
 
 void UITextInput::removeLines(unsigned int startIndex, unsigned int endIndex) {
@@ -1092,30 +1040,18 @@
 	Copy();
 	if(hasSelection) {
 		deleteSelection();
-	} else if (getLineText(lineOffset) != "") {
-        if (!multiLine) { setText(""); }
-        else {
-            removeLines(lineOffset, lineOffset+1);
-            caretPosition = 0;
-            updateCaretPosition();
-        }
-    }
+	}	
 }
 
 void UITextInput::Copy() {
 	if(hasSelection) {
 		CoreServices::getInstance()->getCore()->copyStringToClipboard(getSelectionText());
-	} else {
-        if (getLineText(lineOffset) != "") {
-            CoreServices::getInstance()->getCore()->copyStringToClipboard(getLineText(lineOffset));
-        }
-    }
+	}
 }
 
 void UITextInput::Paste() {
 	saveUndoState();
-	String clip = CoreServices::getInstance()->getCore()->getClipboardString().replace("\r\n", "\n");
-	insertText(clip);
+	insertText(CoreServices::getInstance()->getCore()->getClipboardString());
 }
 
 void UITextInput::showLine(unsigned int lineNumber, bool top) {
@@ -1152,7 +1088,7 @@
 		
 //	Logger::log("UCHAR: %d\n", charCode);	
 	
-	CoreInput *input = CoreServices::getInstance()->getCore()->getInput();
+	CoreInput *input = CoreServices::getInstance()->getCore()->getInput();	
 	
 	if(key == KEY_LEFT) {
 		if(input->getKeyState(KEY_LSUPER) || input->getKeyState(KEY_RSUPER)) {
@@ -1187,7 +1123,7 @@
 						if(selectionCaretPosition > 0)
 							setSelection(lineOffset, selectionLine, this->caretPosition, selectionCaretPosition-1);
 					} else {
-						setSelection(lineOffset, lineOffset, caretPosition, max(caretPosition-1, 0));
+						setSelection(lineOffset, lineOffset, caretPosition, caretPosition-1);
 					}
 				} else {
 					int newLineStart = lineOffset;
@@ -1221,7 +1157,6 @@
 				} else {
 					caretPosition = lines[lineOffset].length();
 					clearSelection();
-					updateCaretPosition();					
 				}
 			}
 		} else if (input->getKeyState(KEY_LALT) || input->getKeyState(KEY_RALT)) {
@@ -1234,8 +1169,7 @@
 					}
 				} else {				
 					caretPosition = caretSkipWordForward(this->lineOffset,caretPosition);
-					clearSelection();
-					updateCaretPosition();										
+					clearSelection();					
 				}
 			}
 		} else {
@@ -1357,27 +1291,13 @@
 			dispatchEvent(new Event(), Event::COMPLETE_EVENT);
 		}
 		return;
-	}
-
-	// indent/shift text
-	if (multiLine && (key == KEY_LEFTBRACKET || key == KEY_RIGHTBRACKET) &&
-		(input->getKeyState(KEY_LSUPER) || input->getKeyState(KEY_RSUPER) ||
-			input->getKeyState(KEY_LCTRL) || input->getKeyState(KEY_RCTRL))) {
-				shiftText( (key == KEY_RIGHTBRACKET) ? false : true );
-				return;
-	}
-
-	// at this point, return if certain modifier keys are held down so as not to potentially add any unwanted text
-	if (input->getKeyState(KEY_LSUPER) || input->getKeyState(KEY_RSUPER) || input->getKeyState(KEY_LCTRL) ||
-		input->getKeyState(KEY_RCTRL) || input->getKeyState(KEY_LALT) || input->getKeyState(KEY_RALT))
-			return;
+	}	
 	
 	String ctext = lines[lineOffset];
 	
 	bool _changedText = false;
 		
-	if((charCode > 31 && charCode < 127) || charCode > 127) {
-		
+	if((charCode > 31 && charCode < 127) || charCode > 127) {	
 		if(!isNumberOnly || (isNumberOnly && ((charCode > 47 && charCode < 58) || (charCode == '.' || charCode == '-')))) {
 			if(!isNumberOrCharacter(charCode)) { 
 				saveUndoState();
@@ -1454,11 +1374,16 @@
 
 void UITextInput::Update() {
 
+	if(!multiLine) {
+		Vector2 pos = getScreenPosition();
+		scissorBox.setRect(pos.x,pos.y, width+sr+sl, height+sb+st);
+	}
+
 	if(hasSelection) {
 		blinkerRect->visible = false;
 	}
 
-	blinkerRect->setPosition(caretImagePosition + 1 -horizontalPixelScroll, (lineOffset * ( lineHeight+lineSpacing)));
+	blinkerRect->setPosition(decoratorOffset + caretImagePosition + 1, padding + (lineOffset * ( lineHeight+lineSpacing)));
 
 	if(hasFocus) {
 //		inputRect->setStrokeColor(1.0f, 1.0f, 1.0f, 0.25f);	
@@ -1471,8 +1396,6 @@
 		delete linesToDelete[i];
 	}
 	linesToDelete.clear();
-
-	textContainer->scissorBox.setRect(textContainer->getScreenPosition().x, textContainer->getScreenPosition().y, textContainer->getWidth(), textContainer->getHeight() + padding);
 }
 
 UITextInput::~UITextInput() {
@@ -1507,7 +1430,7 @@
 		} else {
 			bufferLines[i]->setText("");
 		}
-		bufferLines[i]->setPosition(-horizontalPixelScroll, bufferLineOffset + (i*(lineHeight+lineSpacing)),0.0f);	
+		bufferLines[i]->setPosition(decoratorOffset + padding,padding + bufferLineOffset + (i*(lineHeight+lineSpacing)),0.0f);	
 	}
 	
 	for(int i=0; i < numberLines.size(); i++) {
@@ -1567,16 +1490,6 @@
 			case InputEvent::EVENT_MOUSEUP:
 				draggingSelection = false;
 			break;
-			case InputEvent::EVENT_MOUSEWHEEL_UP:
-				if(scrollContainer) {
-					scrollContainer->onMouseWheelUp(0, 0);
-				}
-			break;
-			case InputEvent::EVENT_MOUSEWHEEL_DOWN:
-				if(scrollContainer) {
-					scrollContainer->onMouseWheelDown(0, 0);
-				}
-			break;
 			case InputEvent::EVENT_DOUBLECLICK:
 				selectWordAtCaret();
 			break;
@@ -1606,75 +1519,4 @@
 		}
 	}
 	
-}
-
-void UITextInput::shiftText(bool left) {
-	if (multiLine && (hasSelection || lines[lineOffset] != "")) {
-		saveUndoState();
-		
-		String t = (wchar_t)'\t';
-		
-		if (hasSelection) {
-			for (int i = selectionTop; i <= selectionBottom; i++) {
-				if (i == selectionBottom && selectionCaretPosition <= 0)
-					// at least one character of bottom line needs to be selected before indenting, so...
-					break;
-				if (indentType == INDENT_TAB) {
-					if (left) {
-						if (lines[i].substr(0,1) == t) {
-							lines[i] = lines[i].substr(1, lines[i].length()-1);
-							caretPosition--;
-						}
-					} else {
-						lines[i] = t + lines[i];
-						caretPosition++;
-					}
-				} else if (indentType == INDENT_SPACE) {
-					if (left) {
-						// TODO
-					} else {
-						// TODO
-					}
-				}
-			}
-		}
-		else {
-			if (indentType == INDENT_TAB) {
-				if (left) {
-					if (lines[lineOffset].substr(0,1) == t) {
-						lines[lineOffset] = lines[lineOffset].substr(1, lines[lineOffset].length()-1);
-						caretPosition--;
-					}
-				} else {
-					lines[lineOffset] = t + lines[lineOffset];
-					caretPosition++;
-				}
-			} else if (indentType == INDENT_SPACE) {
-				if (left) {
-					// TODO
-				} else {
-					// TODO
-				}
-			}
-		}
-		
-		changedText();
-		updateCaretPosition();
-	}
-}
-
-void UITextInput::convertIndentToSpaces() {
-	if (indentType == INDENT_TAB) {
-		indentType = INDENT_SPACE;
-		
-		//TODO
-	}
-}
-
-void UITextInput::convertIndentToTabs() {
-	if (indentType == INDENT_SPACE) {
-		indentType = INDENT_TAB;
-		
-		//TODO
-	}
 }
\ No newline at end of file
diff --git a/Modules/Contents/UI/Source/PolyUITree.cpp b/Modules/Contents/UI/Source/PolyUITree.cpp
--- a/Modules/Contents/UI/Source/PolyUITree.cpp
+++ b/Modules/Contents/UI/Source/PolyUITree.cpp
@@ -29,7 +29,7 @@
 
 using namespace Polycode;
 
-UITree::UITree(String icon, String text, Number treeWidth, Number treeOffset) : UIElement() {
+UITree::UITree(String icon, String text, Number treeWidth, Number treeOffset) : ScreenEntity() {
 		
 	processInputEvents = true;
 	willDrag = false;
@@ -145,8 +145,7 @@
 	}
 }
 
-void UITree::setSelected(bool byKey) {
-	selectedByKey = byKey;
+void UITree::setSelected() {
 	selected = true;
 	refreshTree();
 	if(parent == NULL) {
@@ -341,29 +340,3 @@
 	refreshTree();
 	return newTree;
 }
-
-UITree *UITree::getParent() {
-	return parent;
-}
-
-UITree *UITree::getPrevSibling() {
-	UITree *sibling = NULL;
-	if (!parent)
-		return sibling;
-	for (int i=0; i < parent->getNumTreeChildren(); i++) {
-		if (i > 0 && parent->getTreeChild(i) == this)
-			sibling = parent->getTreeChild(i-1);
-	}
-	return sibling;
-}
-
-UITree *UITree::getNextSibling() {
-	UITree *sibling = NULL;
-	if (!parent)
-		return sibling;
-	for (int i=0; i < parent->getNumTreeChildren(); i++) {
-		if (parent->getTreeChild(i) == this && i < parent->getNumTreeChildren()-1)
-			sibling = parent->getTreeChild(i+1);
-	}
-	return sibling;
-}
\ No newline at end of file
diff --git a/Modules/Contents/UI/Source/PolyUITreeContainer.cpp b/Modules/Contents/UI/Source/PolyUITreeContainer.cpp
--- a/Modules/Contents/UI/Source/PolyUITreeContainer.cpp
+++ b/Modules/Contents/UI/Source/PolyUITreeContainer.cpp
@@ -25,7 +25,6 @@
 #include "PolyInputEvent.h"
 #include "PolyLabel.h"
 #include "PolyCoreServices.h"
-#include "PolyCore.h"
 
 using namespace Polycode;
 
@@ -37,6 +36,7 @@
 	Number sr = conf->getNumericValue("Polycode", "uiTreeContainerSkinR");
 	Number sb = conf->getNumericValue("Polycode", "uiTreeContainerSkinB");
 	Number sl = conf->getNumericValue("Polycode", "uiTreeContainerSkinL");	
+	Number padding = conf->getNumericValue("Polycode", "uiTreeContainerSkinPadding");	
 	
 //	Number scrollBarOffset = conf->getNumericValue("Polycode", "uiTreeContainerScrollBarOffset");	
 	
@@ -64,12 +64,6 @@
 	setHitbox(width, height);
 	
 	Resize(width, height);
-
-	CoreServices::getInstance()->getCore()->getInput()->addEventListener(this, InputEvent::EVENT_KEYDOWN);
-	this->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
-	this->addEventListener(this, InputEvent::EVENT_MOUSEOVER);
-	focusable = true;
-	keyNavigable = true;
 }
 
 void UITreeContainer::Resize(Number width, Number height) {
@@ -90,15 +84,6 @@
 		}
 	}
 	
-	if (!hasFocus && event->getDispatcher() == this) {
-		if (event->getEventCode() == InputEvent::EVENT_MOUSEDOWN) {
-			if (parentEntity && isFocusable())
-				((ScreenEntity*)parentEntity)->focusChild(this);
-		} else if (event->getEventCode() == InputEvent::EVENT_MOUSEOVER) {
-			CoreServices::getInstance()->getCore()->setCursor(Core::CURSOR_ARROW);
-		}
-	}
-
 }
 
 UITree *UITreeContainer::getRootNode() {
@@ -113,134 +98,3 @@
 		delete mainContainer;
 	}
 }
-
-void UITreeContainer::onGainFocus() {
-	if (!getRootNode()->getSelectedNode())
-		getRootNode()->setSelected();
-}
-
-// RECURSIVE HELPER FUNCTIONS
-//
-// used in KEY_UP tree nav
-UITree *UITreeContainer::findLastOpenNode(UITree *tree) {
-	if (!tree->hasTreeChildren() || tree->isCollapsed())
-		return tree;
-	UITree *t = tree->getTreeChild(tree->getNumTreeChildren()-1);
-	if (t->isCollapsed() || !t->hasTreeChildren())
-		return t;
-	else
-		return findLastOpenNode(t);
-}
-// used in KEY_DOWN tree nav
-UITree *UITreeContainer::findNextParentSibling(UITree *parent) {
-	UITree *sibling = parent->getNextSibling();
-	if (sibling)
-		return sibling;
-	else {
-		if (parent->getParent())
-			return findNextParentSibling(parent->getParent());
-		else
-			return NULL;
-	}
-}
-//
-// END RECURSIVE HELPER FUNCTIONS
-
-void UITreeContainer::onKeyDown(PolyKEY key, wchar_t charCode) {
-	if (hasFocus) {
-		
-		// KEYBOARD NAV STUFF
-		// TODO: add ability to jump to prev/next sibling via holding down some button
-		//
-		if (keyNavigable) {
-			enum { NONE, UP, DOWN } scrollDir = NONE;
-			UITree *currentSelection = getRootNode()->getSelectedNode();
-			if (!currentSelection)
-				return;
-			UITree *parent = currentSelection->getParent();
-			
-			// - select parent if currently selected node is first in the tree
-			// - else, select the last opened node in a sibling above
-			if (key == KEY_UP) {
-				if (parent) {
-					for (int i=0; i < parent->getNumTreeChildren(); i++) {
-						if (parent->getTreeChild(i) == currentSelection) {
-							if (i == 0)
-								parent->setSelected(true);
-							else
-								findLastOpenNode((parent->getTreeChild(i-1)))->setSelected(true);
-							scrollDir = UP;
-							break;
-						}
-					}
-				}
-			}
-			
-			// - select first child of currently selected if expanded and has children
-			// - or select next sibling
-			// - else, select the next sibling of some ancestor node
-			if (key == KEY_DOWN) {
-				if (currentSelection == getRootNode())
-					parent = getRootNode();
-
-				if (currentSelection->hasTreeChildren() && !currentSelection->isCollapsed()) {
-					currentSelection->getTreeChild(0)->setSelected(true);
-					scrollDir = DOWN;
-				}
-				else {
-					for (int i=0; i < parent->getNumTreeChildren(); i++) {
-						if (parent->getTreeChild(i) == currentSelection) {
-							if (i == parent->getNumTreeChildren()-1) {
-								UITree *psib = findNextParentSibling(parent);
-								if (psib)
-									psib->setSelected(true);
-							} else {
-								parent->getTreeChild(i+1)->setSelected(true);
-							}
-							scrollDir = DOWN;
-							break;
-						}
-					}
-				}
-			}
-			
-			if (key == KEY_LEFT) {
-				if (currentSelection->hasTreeChildren() && !currentSelection->isCollapsed())
-					currentSelection->toggleCollapsed();
-				else if (parent) {
-					parent->setSelected(true);
-					scrollDir = UP;
-				}
-			}
-			
-			if (key == KEY_RIGHT) {
-				if (currentSelection->hasTreeChildren()) {
-					if (currentSelection->isCollapsed())
-						currentSelection->toggleCollapsed();
-				}
-			}
-			
-			if (scrollDir != NONE)
-				scrollToNode(getRootNode()->getSelectedNode(), (scrollDir == UP) ? true : false);
-		}
-		//
-		// END KEYBOARD NAV STUFF
-		
-	}
-}
-
-void UITreeContainer::scrollToNode(UITree *node, bool showAtTop) {
-	
-	Number nodeY = node->getScreenPosition().y - getRootNode()->getScreenPosition().y;
-	Number contentHeight = mainContainer->getContentSize().y;
-	Number scrollHeight = contentHeight - mainContainer->getHeight();
-	Number viewTop = (contentHeight - mainContainer->getHeight()) * mainContainer->getVScrollBar()->getScrollValue();
-	Number viewBottom = viewTop + mainContainer->getHeight();
-	
-	if (nodeY < viewTop || nodeY+node->getCellHeight() > viewBottom) {
-		if (showAtTop)
-			mainContainer->scrollVertical((nodeY-viewTop) / scrollHeight);
-		else
-			mainContainer->scrollVertical((nodeY+node->getCellHeight()-viewBottom) / scrollHeight);
-	}
-}
diff --git a/Modules/Contents/UI/Source/PolyUIVScrollBar.cpp b/Modules/Contents/UI/Source/PolyUIVScrollBar.cpp
--- a/Modules/Contents/UI/Source/PolyUIVScrollBar.cpp
+++ b/Modules/Contents/UI/Source/PolyUIVScrollBar.cpp
@@ -26,11 +26,10 @@
 #include "PolyInputEvent.h"
 #include "PolyLabel.h"
 #include "PolyCoreServices.h"
-#include "PolyCore.h"
 
 using namespace Polycode;
 
-UIVScrollBar::UIVScrollBar(Number width, Number height, Number initialRatio) : UIElement() {
+UIVScrollBar::UIVScrollBar(Number width, Number height, Number initialRatio) : ScreenEntity() {
 
 	scrollValue = 0;
 	
@@ -49,8 +48,7 @@
 					  width, height);
 	
 	bgBox->processInputEvents = true;
-	bgBox->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);	
-	bgBox->addEventListener(this, InputEvent::EVENT_MOUSEOVER);
+	bgBox->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);		
 	addChild(bgBox);
 	
 	st = conf->getNumericValue("Polycode", "uiScrollHandleSkinT");
@@ -75,7 +73,6 @@
 	handleBox->addEventListener(this, InputEvent::EVENT_MOUSEUP);
 	handleBox->addEventListener(this, InputEvent::EVENT_MOUSEUP_OUTSIDE);	
 	handleBox->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);	
-	handleBox->addEventListener(this, InputEvent::EVENT_MOUSEOVER);
 	handleBox->processInputEvents = true;
 	handleBox->blockMouseInput = true;
 	
@@ -176,9 +173,6 @@
 	if(event->getDispatcher() == bgBox) {
 		InputEvent *inputEvent = (InputEvent*)event;
 		switch(event->getEventCode()) {
-			case InputEvent::EVENT_MOUSEOVER:
-				CoreServices::getInstance()->getCore()->setCursor(Core::CURSOR_ARROW);
-			break;
 			case InputEvent::EVENT_MOUSEDOWN:
 				if(inputEvent->mousePosition.y < handleBox->getPosition().y)  {
 					Number newPos = handleBox->getPosition().y - scrollHandleHeight/2;
@@ -198,9 +192,6 @@
 	if(event->getDispatcher() == handleBox) {
 		InputEvent *inputEvent = (InputEvent*)event;
 		switch(event->getEventCode()) {
-			case InputEvent::EVENT_MOUSEOVER:
-				CoreServices::getInstance()->getCore()->setCursor(Core::CURSOR_ARROW);
-			break;		
 			case InputEvent::EVENT_MOUSEUP:
 			case InputEvent::EVENT_MOUSEUP_OUTSIDE:				
 				handleBox->stopDrag();
diff --git a/Modules/Contents/UI/Source/PolyUIVSizer.cpp b/Modules/Contents/UI/Source/PolyUIVSizer.cpp
--- a/Modules/Contents/UI/Source/PolyUIVSizer.cpp
+++ b/Modules/Contents/UI/Source/PolyUIVSizer.cpp
@@ -26,7 +26,6 @@
 #include "PolyInputEvent.h"
 #include "PolyCoreServices.h"
 #include "PolyCore.h"
-#include "PolyUIEvent.h"
 
 using namespace Polycode;
 
@@ -89,6 +88,7 @@
 
 void UIVSizer::handleEvent(Event *event) {
 	if(event->getDispatcher() == separatorHitShape) {
+		InputEvent *inputEvent = (InputEvent*)event;
 		switch (event->getEventCode()) {
 			case InputEvent::EVENT_MOUSEDOWN:
 				resizing = true;
@@ -133,17 +133,11 @@
 	this->height = height;
 	matrixDirty = true;
 	updateSizer();
-	UIElement::Resize(width, height);
-}
-
-Number UIVSizer::getMainHeight() {
-	return mainHeight;
 }
 
 void UIVSizer::setMainHeight(Number height) {
 	mainHeight = height;
 	updateSizer();
-	dispatchEvent(new UIEvent(), UIEvent::CHANGE_EVENT);
 }
 			
 void UIVSizer::addTopChild(UIElement *element) {
diff --git a/Player/Contents/Platform/Darwin/MyDocument.h b/Player/Contents/Platform/Darwin/MyDocument.h
--- a/Player/Contents/Platform/Darwin/MyDocument.h
+++ b/Player/Contents/Platform/Darwin/MyDocument.h
@@ -24,36 +24,6 @@
 #import "PolycodeView.h"
 #include "PolycodeCocoaPlayer.h"
 
-class PolycodeProxy;
-
-@interface MyDocument : NSDocument
-{
-	PolycodeView *mainView;
-	NSString *docFileName;
-	NSTimer* timer;
-	CocoaPolycodePlayer *player;
-	PolycodeProxy *playerProxy;
-	NSWindow *consoleWindow;
-	NSTextView *consoleTextView;
-	bool showingConsole;
-	bool playerRunning;
-	bool needsToClose;
-
-}
-
-- (void) printToConsole: (NSString*) message;
-- (void) handleDebugError: (NSString*) error onLine:(int) lineNumber;
-- (IBAction) showConsoleWindow: (id) sender;
-
-- (void) destroyPlayer;
-- (void) needToClosePlayer;
-
-@property (assign) IBOutlet PolycodeView *mainView;
-@property (assign) IBOutlet NSWindow *consoleWindow;
-@property (assign) IBOutlet NSTextView *consoleTextView;
-
-@end
-
 class PolycodeProxy : public EventHandler {
 public:
 	PolycodeProxy(){ playerDocument = nil; }
@@ -73,11 +43,11 @@
 					fullError += "In file "+debugEvent->backTrace[i].fileName + " on line " + String::IntToString(debugEvent->backTrace[i].lineNumber)+"\n";
 				}
 			
-				[playerDocument handleDebugError: [NSString stringWithCString:fullError.c_str() encoding:NSUTF8StringEncoding] onLine: debugEvent->lineNumber];
+				[playerDocument handleDebugError: [NSString stringWithCString:fullError.c_str()] onLine: debugEvent->lineNumber];
 			}
 				break;
 			case PolycodeDebugEvent::EVENT_PRINT:
-				[playerDocument printToConsole: [NSString stringWithCString:debugEvent->errorString.c_str() encoding:NSUTF8StringEncoding]];
+				[playerDocument printToConsole: [NSString stringWithCString:debugEvent->errorString.c_str()]];				
 				break;
 			case PolycodeDebugEvent::EVENT_CLOSE:
 				[playerDocument needToClosePlayer];
@@ -89,5 +59,33 @@
 		}
 	}
 	
-	MyDocument* playerDocument;
+	id playerDocument;	
 };
+
+@interface MyDocument : NSDocument
+{
+	PolycodeView *mainView;
+	NSString *docFileName;	
+	NSTimer* timer;
+	CocoaPolycodePlayer *player;
+	PolycodeProxy *playerProxy;
+	NSWindow *consoleWindow;
+	NSTextView *consoleTextView;
+	bool showingConsole;
+	bool playerRunning;
+	bool needsToClose;
+	
+}
+
+- (void) printToConsole: (NSString*) message;
+- (void) handleDebugError: (NSString*) error onLine:(int) lineNumber;
+- (IBAction) showConsoleWindow: (id) sender;
+
+- (void) destroyPlayer;
+- (void) needToClosePlayer;
+
+@property (assign) IBOutlet PolycodeView *mainView;
+@property (assign) IBOutlet NSWindow *consoleWindow;
+@property (assign) IBOutlet NSTextView *consoleTextView;
+
+@end
diff --git a/Player/Contents/Source/PolycodePlayer.cpp b/Player/Contents/Source/PolycodePlayer.cpp
--- a/Player/Contents/Source/PolycodePlayer.cpp
+++ b/Player/Contents/Source/PolycodePlayer.cpp
@@ -86,7 +86,35 @@
 	client->Disconnect();
 }
 
-extern "C" {
+extern "C" {	
+
+	
+static void dumpstack (lua_State *L) {
+  int i;
+  int top=lua_gettop(L);
+  printf("dumpstack -- \n");
+  for (i=1; i<=top; i++) {
+    printf("%d\t%s\t",i,luaL_typename(L,i));
+    switch (lua_type(L, i)) {
+      case LUA_TNUMBER:
+        printf("%g\n",lua_tonumber(L,i));
+        break;
+      case LUA_TSTRING:
+        printf("%s\n",lua_tostring(L,i));
+        break;
+      case LUA_TBOOLEAN:
+        printf("%s\n", (lua_toboolean(L, i) ? "true" : "false"));
+        break;
+      case LUA_TNIL:
+        printf("%s\n", "nil");
+        break;
+      default:
+        printf("%p\n",lua_topointer(L,i));
+        break;
+    }
+  }
+  printf("dumpstack -- END\n");
+}	
 
 //	extern int luaopen_Tau(lua_State* L); // declare the wrapped module
 		//	loadFileIntoState(L, "Polycode Player.app/Contents/Resources/API/class.lua");
@@ -94,7 +122,6 @@
 	int MyLoader(lua_State* pState)
 	{		
 		std::string module = lua_tostring(pState, 1);
-
 		module += ".lua";
 		
 		std::string defaultPath = "API/";
@@ -102,7 +129,6 @@
 		
 		const char* fullPath = module.c_str();		
 //		Logger::log("Loading custom class: %s\n", module.c_str());
-
 		OSFILE *inFile = OSBasics::open(module, "r");	
 		
 		if(!inFile) {
@@ -119,7 +145,7 @@
 	
 			PolycodePlayer *player = (PolycodePlayer*)CoreServices::getInstance()->getCore()->getUserPointer();	
 			player->report(pState, luaL_loadbuffer(pState, (const char*)buffer, progsize, fullPath));		
-			free(buffer);
+			//free(buffer);
 			OSBasics::close(inFile);	
 		} else {
 			std::string err = "\n\tError - Could could not find ";
@@ -151,7 +177,7 @@
 					trace.fileName = fileName;
 					backTrace.push_back(trace);
 					
-					//printf(">>>> In file: %s on line %d\n", fileName.c_str(), trace.lineNumber);
+					printf(">>>> In file: %s on line %d\n", fileName.c_str(), trace.lineNumber);
 					//backTrace += "In file: " + fileName + " on line " + String::IntToString(entry.currentline)+"\n";
 				}
 			}
@@ -187,8 +213,6 @@
 		if (msg == NULL) msg = "(error with no message)";
 		lua_pop(L, 1);
 		
-		printf("\n%s\n", msg);
-		
 		String errorString;
 		std::vector<String> info = String(msg).split(":");
 			
@@ -204,17 +228,6 @@
 		event->fileName = backTrace[0].fileName;
 		event->lineNumber = backTrace[0].lineNumber;
 
-		printf("\n---------------------\n");
-		printf("Error: %s\n", errorString.c_str());
-		printf("In file: %s\n", backTrace[0].fileName.c_str());
-		printf("On line: %d\n", backTrace[0].lineNumber);
-		printf("---------------------\n");
-		printf("Backtrace\n");
-		for(int i=0; i < backTrace.size(); i++) {
-			printf("* %s on line %d", backTrace[i].fileName.c_str(), backTrace[i].lineNumber);
-		}
-		printf("\n---------------------\n");
-				
 		player->dispatchEvent(event, PolycodeDebugEvent::EVENT_ERROR);
 				
 		return 0;
@@ -412,23 +425,48 @@
 					
 		}
 */
+		String fileData = "";
 
+		OSFILE *inFile = OSBasics::open(fileName, "r");	
+		if(inFile) {
+			Logger::log("Opened entrypoint file...");
+			OSBasics::seek(inFile, 0, SEEK_END);	
+			long progsize = OSBasics::tell(inFile);
+			OSBasics::seek(inFile, 0, SEEK_SET);
+			char *buffer = (char*)malloc(progsize+1);
+			memset(buffer, 0, progsize+1);
+			OSBasics::read(buffer, progsize, 1, inFile);
+			fileData = String(buffer);		
+			free(buffer);
+			OSBasics::close(inFile);	
+		} else {
+			Logger::log("Error opening entrypoint file (%s)\n", fileName.c_str());
+		}
+		
+				
+		String fullScript = fileData;
+		
 		doneLoading = true;
 		
+		//lua_gc(L, LUA_GCSTOP, 0);
+		
+		
+
 		lua_getfield (L, LUA_GLOBALSINDEX, "__customError");
 		errH = lua_gettop(L);
 
-		// MyLoader appends '.lua' so strip it if already present
-		int pos = fileName.rfind(".lua");
-		String stripped = fileName;
-		if (pos > -1 && pos == fileName.length() - 4) stripped = fileName.substr(0, pos);
+		//CoreServices::getInstance()->getCore()->lockMutex(CoreServices::getRenderMutex());			
+		if (report(L, luaL_loadstring(L, fullScript.c_str()))) {			
+			//CoreServices::getInstance()->getCore()->unlockMutex(CoreServices::getRenderMutex());			
+			Logger::log("CRASH LOADING SCRIPT FILE\n");
+//			exit(1);				
+		} else {
 		
-		lua_getfield(L, LUA_GLOBALSINDEX, "require");
-		lua_pushstring(L, stripped.c_str());		
-		if (lua_pcall(L, 1,0,errH)) {
-			Logger::log("CRASH EXECUTING FILE\n");
+		
+			if (lua_pcall(L, 0,0,errH)) {
+				Logger::log("CRASH EXECUTING FILE\n");
+			}
 		}
-
 	}
 }
 
@@ -625,9 +663,6 @@
 	core->getInput()->addEventListener(this, InputEvent::EVENT_MOUSEDOWN);
 	core->getInput()->addEventListener(this, InputEvent::EVENT_MOUSEMOVE);
 	core->getInput()->addEventListener(this, InputEvent::EVENT_MOUSEUP);
-	core->getInput()->addEventListener(this, InputEvent::EVENT_JOYBUTTON_DOWN);
-	core->getInput()->addEventListener(this, InputEvent::EVENT_JOYBUTTON_UP);
-	core->getInput()->addEventListener(this, InputEvent::EVENT_JOYAXIS_MOVED);
 					
 	if(nameString == "") {
 		return;
@@ -841,53 +876,12 @@
 				}
 			}
 			break;																			
-			case InputEvent::EVENT_JOYBUTTON_DOWN:
-			{
-				if(L && !crashed) {
-					lua_getfield (L, LUA_GLOBALSINDEX, "__customError");
-					errH = lua_gettop(L);									
-					lua_getfield(L, LUA_GLOBALSINDEX, "onJoystickButtonDown");
-					lua_pushnumber(L, inputEvent->joystickIndex);
-					lua_pushnumber(L, inputEvent->joystickButton);
-					lua_pcall(L, 2,0,errH);	
-					lua_settop(L, 0);					
-				}
-			}
-			break;																			
-			case InputEvent::EVENT_JOYBUTTON_UP:
-			{
-				if(L && !crashed) {
-					lua_getfield (L, LUA_GLOBALSINDEX, "__customError");
-					errH = lua_gettop(L);									
-					lua_getfield(L, LUA_GLOBALSINDEX, "onJoystickButtonUp");
-					lua_pushnumber(L, inputEvent->joystickIndex);
-					lua_pushnumber(L, inputEvent->joystickButton);
-					lua_pcall(L, 2,0,errH);	
-					lua_settop(L, 0);
-				}
-			}
-			break;																			
-			case InputEvent::EVENT_JOYAXIS_MOVED:
-			{
-				if(L && !crashed) {
-					lua_getfield (L, LUA_GLOBALSINDEX, "__customError");
-					errH = lua_gettop(L);									
-					lua_getfield(L, LUA_GLOBALSINDEX, "onJoystickAxisMoved");
-					lua_pushnumber(L, inputEvent->joystickIndex);
-					lua_pushnumber(L, inputEvent->joystickAxis);
-					lua_pushnumber(L, inputEvent->joystickAxisValue);
-					lua_pcall(L, 3,0,errH);	
-					lua_settop(L, 0);
-				}
-			}
-			break;																			
 		}
 	}
 }
 
 
 bool PolycodePlayer::Update() {
-	bool retVal = core->Update();
 	if(L) {
 		lua_getfield (L, LUA_GLOBALSINDEX, "__customError");
 		errH = lua_gettop(L);	
@@ -896,18 +890,14 @@
 			doCodeInject = false;			
 			report(L, luaL_loadstring(L, injectCodeString.c_str()));
 			lua_pcall(L, 0,0,errH);		
-		}	
+		}
+	
 		if(!crashed) {
-		
-			lua_getfield(L, LUA_GLOBALSINDEX, "__process_safe_delete");
-			lua_pcall(L, 0,0,errH);	
-		
 			lua_getfield(L, LUA_GLOBALSINDEX, "Update");
 			lua_pushnumber(L, core->getElapsed());
 			lua_pcall(L, 1,0,errH);
 		}
 		lua_settop(L, 0);
 	}
-	core->Render();
-	return retVal;
+	return core->Update();
 }
diff --git a/Tools/Contents/polybuild/CMakeLists.txt b/Tools/Contents/polybuild/CMakeLists.txt
--- a/Tools/Contents/polybuild/CMakeLists.txt
+++ b/Tools/Contents/polybuild/CMakeLists.txt
@@ -20,13 +20,11 @@
 
 #IF(POLYCODE_BUILD_STATIC)
 ADD_EXECUTABLE(polybuild ${minizip_SRCS} Source/polybuild.cpp Include/polybuild.h)
-IF(MSVC OR MINGW)
-    TARGET_LINK_LIBRARIES(polybuild Polycore ${LUA_LIBRARIES} ${PHYSFS_LIBRARY} ${ZLIB_LIBRARIES})
-ELSEIF(APPLE)
-    TARGET_LINK_LIBRARIES(polybuild Polycore ${LUA_LIBRARIES} ${PHYSFS_LIBRARY} ${ZLIB_LIBRARIES} "-framework IOKit" "-framework Cocoa")
-ELSE(MSVC OR MINGW)
-    TARGET_LINK_LIBRARIES(polybuild Polycore ${LUA_LIBRARIES} ${PHYSFS_LIBRARY} ${ZLIB_LIBRARIES} dl)
-ENDIF(MSVC OR MINGW)
+IF(APPLE)
+	TARGET_LINK_LIBRARIES(polybuild Polycore ${PHYSFS_LIBRARY} ${ZLIB_LIBRARIES} "-framework IOKit" "-framework Cocoa")
+ELSE()
+	TARGET_LINK_LIBRARIES(polybuild Polycore ${PHYSFS_LIBRARY} ${ZLIB_LIBRARIES})
+ENDIF(APPLE)
 #ENDIF(POLYCODE_BUILD_STATIC)
 
 IF(POLYCODE_INSTALL_FRAMEWORK)
diff --git a/Tools/Contents/polybuild/Include/polybuild.h b/Tools/Contents/polybuild/Include/polybuild.h
--- a/Tools/Contents/polybuild/Include/polybuild.h
+++ b/Tools/Contents/polybuild/Include/polybuild.h
@@ -11,12 +11,6 @@
 #include <io.h>
 #endif
 
-extern "C" {
-#include "lua.h"
-#include "lualib.h"
-#include "lauxlib.h"
-}
-
 using namespace Polycode;
 
 class BuildArg {
diff --git a/Tools/Contents/polybuild/Source/polybuild.cpp b/Tools/Contents/polybuild/Source/polybuild.cpp
--- a/Tools/Contents/polybuild/Source/polybuild.cpp
+++ b/Tools/Contents/polybuild/Source/polybuild.cpp
@@ -88,53 +88,32 @@
   return ret;
 }
 
-extern "C" int MyWriter(lua_State *L, const void *p, size_t sz, void *ud) {
-	int err = zipWriteInFileInZip(static_cast<zipFile>(ud), p, sz);
-	// Non 0 means an error and stops lua_dump from calling the writer again.
-	return (err != ZIP_OK) && (sz != 0) ? 1 : 0;
-}
-
 void addFileToZip(zipFile z, String filePath, String pathInZip, bool silent) {
-	if(!silent)
-		printf("Packaging %s as %s\n", filePath.c_str(), pathInZip.c_str());
-
-	zip_fileinfo zi;
-	zi.tmz_date.tm_sec = zi.tmz_date.tm_min = zi.tmz_date.tm_hour = 
-		zi.tmz_date.tm_mday = zi.tmz_date.tm_mon = zi.tmz_date.tm_year = 0;
-	zi.dosDate = 0;
-	zi.internal_fa = 0;
-	zi.external_fa = 0;
-	filetime(filePath.c_str(),&zi.tmz_date,&zi.dosDate);
-
-	zipOpenNewFileInZip(z, pathInZip.c_str(), &zi, NULL, 0, NULL, 0, NULL, Z_DEFLATED, 2);
-
-	// Are we dealing with a script file?
-	int pos = filePath.rfind(".lua");
-	bool isScript = (pos > -1 && pos == filePath.length() - 4) ? true : false;
+			if(!silent)
+				printf("Packaging %s as %s\n", filePath.c_str(), pathInZip.c_str());
 
-	if(isScript && getArg("--compileScripts") == "true") {
-		lua_State *L = lua_open();
-		int err = 1;
-		if(L && 0 == luaL_loadfile(L, filePath.c_str())) {
-			err = lua_dump(L, MyWriter, z);
-		}
-		if(L) lua_close(L);
-		if(err) {
-			printf("Error compiling script. Ignoring.\n");
-		}
-	} else {
-		FILE *f = fopen(filePath.c_str(), "rb");
-		fseek(f, 0, SEEK_END);
-		long fileSize = ftell(f);
-		fseek(f, 0, SEEK_SET);
-		char *buf = (char*) malloc(fileSize);
-		fread(buf, fileSize, 1, f);
-		zipWriteInFileInZip(z, buf, fileSize);
-		free(buf);
-		fclose(f);
-	}
+                	zip_fileinfo zi;
+                	zi.tmz_date.tm_sec = zi.tmz_date.tm_min = zi.tmz_date.tm_hour =
+			zi.tmz_date.tm_mday = zi.tmz_date.tm_mon = zi.tmz_date.tm_year = 0;
+			 zi.dosDate = 0;
+              	 	 zi.internal_fa = 0;
+             		   zi.external_fa = 0;
+             		   filetime(filePath.c_str(),&zi.tmz_date,&zi.dosDate);
+	
+			zipOpenNewFileInZip(z, pathInZip.c_str(), &zi, NULL, 0, NULL, 0, NULL, Z_DEFLATED, 2);
 
-	zipCloseFileInZip(z);
+			FILE *f = fopen(filePath.c_str(), "rb");
+			fseek(f, 0, SEEK_END);
+			long fileSize = ftell(f);
+			fseek(f, 0, SEEK_SET);
+			char *buf = (char*) malloc(fileSize);
+			fread(buf, fileSize, 1, f);
+			zipWriteInFileInZip(z, buf, fileSize);
+			free(buf);
+			fclose(f);
+
+			zipCloseFileInZip(z);
+
 }
 
 void addFolderToZip(zipFile z, String folderPath, String parentFolder, bool silent) {
@@ -379,6 +358,8 @@
 	color->addChild("green", backgroundColorG);
 	color->addChild("blue", backgroundColorB);
 
+	addFileToZip(z, entryPoint, entryPoint, false);
+
 	if(configFile.root["fonts"]) {
 		runInfo.root.addChild(configFile.root["fonts"]);
 	}
@@ -425,13 +406,11 @@
 			for(int i=0; i < packed->length; i++) {
 				ObjectEntry *entryPath = (*(*packed)[i])["path"];
 				ObjectEntry *entryType = (*(*packed)[i])["type"];
-				ObjectEntry *entrySource = (*(*packed)[i])["source"];
 				if(entryPath && entryType) {
-					if (!entrySource) entrySource = entryPath;
 					if(entryType->stringVal == "folder") {
-						addFolderToZip(z, entrySource->stringVal, entryPath->stringVal, false);
+						addFolderToZip(z, entryPath->stringVal, entryPath->stringVal, false);
 					} else {
-						addFileToZip(z, entrySource->stringVal, entryPath->stringVal, false);
+						addFileToZip(z, entryPath->stringVal, entryPath->stringVal, false);
 					}
 				}
 			}
diff --git a/Tools/Dependencies/unzip11/zip.c b/Tools/Dependencies/unzip11/zip.c
--- a/Tools/Dependencies/unzip11/zip.c
+++ b/Tools/Dependencies/unzip11/zip.c
@@ -1114,9 +1114,9 @@
     zi->ci.flag = flagBase;
     if ((level==8) || (level==9))
       zi->ci.flag |= 2;
-    if (level==2)
+    if ((level==2))
       zi->ci.flag |= 4;
-    if (level==1)
+    if ((level==1))
       zi->ci.flag |= 6;
     if (password != NULL)
       zi->ci.flag |= 1;
@@ -1245,7 +1245,7 @@
         unsigned char bufHead[RAND_HEAD_LEN];
         unsigned int sizeHead;
         zi->ci.encrypt = 1;
-        zi->ci.pcrc_32_tab = (const unsigned long*)get_crc_table();
+        zi->ci.pcrc_32_tab = get_crc_table();
         /*init_keys(password,zi->ci.keys,zi->ci.pcrc_32_tab);*/
 
         sizeHead=crypthead(password,bufHead,RAND_HEAD_LEN,zi->ci.keys,zi->ci.pcrc_32_tab,crcForCrypting);
