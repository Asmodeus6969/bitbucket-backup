#include "ProjectLUA.h"
#include "ProjectLUAWrappers.h"
#include "PolyCoreServices.h"

using namespace Polycode;

int luaopen_Project(lua_State *L) {
CoreServices *inst = (CoreServices*)lua_topointer(L, 1);
CoreServices::setInstance(inst);
	static const struct luaL_reg projectLib [] = {		{"automaton_get_done", Project_automaton_get_done},
		{"automaton_get_born", Project_automaton_get_born},
		{"automaton_get_frame", Project_automaton_get_frame},
		{"automaton_get_state", Project_automaton_get_state},
		{"automaton_get_rollover", Project_automaton_get_rollover},
		{"automaton_get_anchor", Project_automaton_get_anchor},
		{"automaton_set_done", Project_automaton_set_done},
		{"automaton_set_born", Project_automaton_set_born},
		{"automaton_set_frame", Project_automaton_set_frame},
		{"automaton_set_state", Project_automaton_set_state},
		{"automaton_set_rollover", Project_automaton_set_rollover},
		{"automaton", Project_automaton},
		{"automaton_age", Project_automaton_age},
		{"automaton_tick", Project_automaton_tick},
		{"automaton_die", Project_automaton_die},
		{"automaton_insert", Project_automaton_insert},
		{"delete_automaton", Project_delete_automaton},
		{"EntityArray_size", Project_EntityArray_size},
		{"EntityArray_get", Project_EntityArray_get},
		{"EntityArray_push_back", Project_EntityArray_push_back},
		{"delete_EntityArray", Project_delete_EntityArray},
		{"VectorArray_size", Project_VectorArray_size},
		{"VectorArray_get", Project_VectorArray_get},
		{"VectorArray_push_back", Project_VectorArray_push_back},
		{"delete_VectorArray", Project_delete_VectorArray},
		{"NumberArray", Project_NumberArray},
		{"NumberArray_size", Project_NumberArray_size},
		{"NumberArray_get", Project_NumberArray_get},
		{"NumberArray_push_back", Project_NumberArray_push_back},
		{"delete_NumberArray", Project_delete_NumberArray},
		{"SceneEcho", Project_SceneEcho},
		{"SceneEcho_transformAndRender", Project_SceneEcho_transformAndRender},
		{"SceneEcho_getEntity", Project_SceneEcho_getEntity},
		{"delete_SceneEcho", Project_delete_SceneEcho},
		{"project_bridge_room_screen", Project_project_bridge_room_screen},
		{"project_bridge_room_scene", Project_project_bridge_room_scene},
		{"project_bridge_room_objs", Project_project_bridge_room_objs},
		{"project_bridge_room_oncollide_objs", Project_project_bridge_room_oncollide_objs},
		{"project_bridge_room_onclick_objs", Project_project_bridge_room_onclick_objs},
		{"project_bridge_room_id", Project_project_bridge_room_id},
		{"project_bridge_room_name", Project_project_bridge_room_name},
		{"project_bridge_room_a", Project_project_bridge_room_a},
		{"project_bridge_room_b", Project_project_bridge_room_b},
		{"project_bridge_room_remove_scene", Project_project_bridge_room_remove_scene},
		{"project_bridge_room_remove_screen", Project_project_bridge_room_remove_screen},
		{"project_bridge_load_room", Project_project_bridge_load_room},
		{"project_bridge_load_room_txt", Project_project_bridge_load_room_txt},
		{"project_bridge_standalone_screen", Project_project_bridge_standalone_screen},
		{"project_bridge_room_remove_standalone_screen_all", Project_project_bridge_room_remove_standalone_screen_all},
		{"project_bridge_clear", Project_project_bridge_clear},
		{"project_bridge_meshFor", Project_project_bridge_meshFor},
		{"project_bridge_saved_level", Project_project_bridge_saved_level},
		{"project_bridge_set_saved_level", Project_project_bridge_set_saved_level},
		{"project_bridge_filedump", Project_project_bridge_filedump},
		{"project_bridge_filedump_external", Project_project_bridge_filedump_external},
		{"project_bridge_help", Project_project_bridge_help},
		{"project_bridge_fake", Project_project_bridge_fake},
		{"project_bridge_Quit", Project_project_bridge_Quit},
		{"project_bridge_mmult", Project_project_bridge_mmult},
		{"project_bridge_qmult", Project_project_bridge_qmult},
		{"project_bridge_Slerp", Project_project_bridge_Slerp},
		{"project_bridge_Squad", Project_project_bridge_Squad},
		{"project_bridge_bBox", Project_project_bridge_bBox},
		{"project_bridge_setSceneClearColor", Project_project_bridge_setSceneClearColor},
		{"project_bridge", Project_project_bridge},
		{"project_bridge_custEntityType", Project_project_bridge_custEntityType},
		{"project_bridge_charCode", Project_project_bridge_charCode},
		{"project_bridge_soundFromValues", Project_project_bridge_soundFromValues},
		{"project_bridge_playback_index", Project_project_bridge_playback_index},
		{"project_bridge_playback_from", Project_project_bridge_playback_from},
		{"project_bridge_luaTestAddOne", Project_project_bridge_luaTestAddOne},
		{"project_bridge_saveTableIntoObject", Project_project_bridge_saveTableIntoObject},
		{"project_bridge_loadTableFromObject", Project_project_bridge_loadTableFromObject},
		{"project_bridge_saveTableIntoFile", Project_project_bridge_saveTableIntoFile},
		{"project_bridge_loadTableFromFile", Project_project_bridge_loadTableFromFile},
		{"project_bridge_saveTableIntoXml", Project_project_bridge_saveTableIntoXml},
		{"project_bridge_loadTableFromXml", Project_project_bridge_loadTableFromXml},
		{"project_bridge_getChildAtScreenPosition", Project_project_bridge_getChildAtScreenPosition},
		{"project_bridge_getVisible", Project_project_bridge_getVisible},
		{"project_bridge_setVisible", Project_project_bridge_setVisible},
		{"project_bridge_coreServices", Project_project_bridge_coreServices},
		{"delete_project_bridge", Project_delete_project_bridge},
		{"StringArray_size", Project_StringArray_size},
		{"StringArray_get", Project_StringArray_get},
		{"StringArray_push_back", Project_StringArray_push_back},
		{"delete_StringArray", Project_delete_StringArray},
		{NULL, NULL}
	};
	luaL_openlib(L, "Project", projectLib, 0);
	return 1;
}